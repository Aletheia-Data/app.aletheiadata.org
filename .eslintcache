[{"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/index.jsx":"1","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/setup/redux/Store.ts":"2","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/setup/apollo/SetupApollo.ts":"3","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/App.tsx":"4","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/setup/index.ts":"5","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/setup/redux/RootReducer.ts":"6","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/MasterLayout.tsx":"7","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/routing/PublicRoutes.tsx":"8","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/routing/PrivateRoutes.tsx":"9","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/Logout.tsx":"10","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/setup/axios/MockAxios.ts":"11","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/setup/axios/SetupAxios.ts":"12","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/core/index.ts":"13","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/MasterInit.tsx":"14","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/redux/AuthRedux.ts":"15","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/Sidebar.tsx":"16","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/ScrollTop.tsx":"17","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/Toolbar.tsx":"18","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/Content.tsx":"19","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/header/HeaderWrapper.tsx":"20","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/Footer.tsx":"21","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/aside/AsideDefault.tsx":"22","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/MenuTestPage.tsx":"23","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/profile/ProfilePageWrapper.tsx":"24","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/DocsPageWrapper.tsx":"25","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/general/GeneralPageWrapper.tsx":"26","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/dashboards/light-dashboard/LightDashboardWrapper.tsx":"27","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/dashboards/start-dashboard/StartDashboardWrapper.tsx":"28","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/index.ts":"29","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/core/DefaultThemeConfig.ts":"30","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/core/ThemeSetup.ts":"31","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/core/ThemeModels.ts":"32","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/core/ThemeProvider.tsx":"33","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/core/PageData.tsx":"34","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/index.ts":"35","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/redux/AuthCRUD.ts":"36","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/profile/ProfileData.ts":"37","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/_Theme.ts":"38","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/general/GeneralPageData.tsx":"39","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/general/GeneralPage.tsx":"40","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/profile/ProfilePage.tsx":"41","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/DocsPage.tsx":"42","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/aside/AsideMenu.tsx":"43","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/header/Header.tsx":"44","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/dashboards/start-dashboard/StartDashboardPage.tsx":"45","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/dashboards/light-dashboard/LightDashboardPage.tsx":"46","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/__mocks__/mockAuth.ts":"47","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/AuthPage.tsx":"48","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/content/editor/EditorToolbar.ts":"49","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/index.ts":"50","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/helpers/index.ts":"51","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/InboxCompose.tsx":"52","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/SearchModal.tsx":"53","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/MenuModal.tsx":"54","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/header-menus/HeaderUserMenu.tsx":"55","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/header-menus/HeaderNotificationsMenu.tsx":"56","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/sidebar-partials/SidebarShop.tsx":"57","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/sidebar-partials/SidebarGeneral.tsx":"58","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/sidebar-partials/SidebarUser.tsx":"59","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/explore/ExploreMain.tsx":"60","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/content/dropdown/Dropdown1.tsx":"61","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/content/dropdown/Dropdown2.tsx":"62","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/content/fallback-view/FallbackView.tsx":"63","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/content/code-highlight/CodeBlock.tsx":"64","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/content/portal/Portal.tsx":"65","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/aside/AsideMenuDocs.tsx":"66","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/aside/AsideMenuMain.tsx":"67","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/header/Topbar.tsx":"68","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/general/pages/PricingPage.tsx":"69","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/general/pages/FAQPage.tsx":"70","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/general/pages/InvoicePage.tsx":"71","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/profile/components/Overview.tsx":"72","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/Updates.tsx":"73","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/icons/LineAwesomeIcons.tsx":"74","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/Skeleton.tsx":"75","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/QuickStart.tsx":"76","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/dashboards/_modals/create-app-stepper/CreateAppModal.tsx":"77","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/__mocks__/usersTableMock.ts":"78","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/components/Login.tsx":"79","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/components/ForgotPassword.tsx":"80","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/_ToggleComponent.ts":"81","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/_StickyComponent.ts":"82","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/explore/FreeRelatedProducts.tsx":"83","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/explore/Free.tsx":"84","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/helpers/components/KTSVG.tsx":"85","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/shop/NewProductForm.tsx":"86","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/shop/ProductFilterForm.tsx":"87","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/helpers/RouterHelpers.ts":"88","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/helpers/AssetHelpers.ts":"89","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/_ScrollTopComponent.ts":"90","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/_DrawerComponent.ts":"91","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/aside/AsideMenuItem.tsx":"92","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/_ScrollComponent.ts":"93","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/MenuComponent.ts":"94","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/_StepperComponent.ts":"95","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/dashboards/_modals/create-app-stepper/IAppModels.ts":"96","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/index.ts":"97","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/index.ts":"98","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/_CookieComponent.ts":"99","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/getAttributeValueByBreakpoint.ts":"100","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/EventHandlerUtil.ts":"101","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/types-helpers/_getUniqueIdWithPrefix.ts":"102","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/types-helpers/_stringSnakeToCamel.ts":"103","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/types-helpers/_getObjectPropertyValueByKey.ts":"104","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/_ElementStyleUtil.ts":"105","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/ElementAnimateUtil.ts":"106","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/_DataUtil.ts":"107","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getElementOffset.ts":"108","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getScrollTop.ts":"109","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getCSS.ts":"110","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/_DOMEventHandlerUtil.ts":"111","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_throttle.ts":"112","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getHighestZindex.ts":"113","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getElementIndex.ts":"114","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/slide.ts":"115","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_insertAfterElement.ts":"116","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/getElementChild.ts":"117","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getElementParents.ts":"118","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_isVisibleElement.ts":"119","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getViewPort.ts":"120","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/mixed/MixedWidget1.tsx":"121","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/feeds/FeedsWidget2.tsx":"122","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/feeds/FeedsWidget3.tsx":"123","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget8.tsx":"124","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget5.tsx":"125","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget6.tsx":"126","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget4.tsx":"127","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget3.tsx":"128","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget2.tsx":"129","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget9.tsx":"130","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/feeds/FeedsWidget4.tsx":"131","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget7.tsx":"132","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget1.tsx":"133","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/engage/EngageWidget3.tsx":"134","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/engage/EngageWidget5.tsx":"135","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/engage/EngageWidget2.tsx":"136","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getCSSVariableValue.ts":"137","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/engage/EngageWidget1.tsx":"138","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/lists/ListsWidget4.tsx":"139","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/lists/ListsWidget5.tsx":"140","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/lists/ListsWidget2.tsx":"141","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/lists/ListsWidget1.tsx":"142","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget2.tsx":"143","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget1.tsx":"144","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget4.tsx":"145","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget3.tsx":"146","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/SASSCustomization.tsx":"147","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/header/MenuInner.tsx":"148","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/RTL.tsx":"149","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/References.tsx":"150","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getElementActual.ts":"151","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/getElementChildren.ts":"152","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/header/MenuItem.tsx":"153","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getElementMatches.ts":"154","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/types-helpers/_toJSON.ts":"155","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/MockBackend.tsx":"156","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/Internationalization.tsx":"157","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/Deployment.tsx":"158","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/CreatePage.tsx":"159","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/Changelog.tsx":"160","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/icons/FontAwesomeIcons.tsx":"161","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/icons/DuotoneIcons.tsx":"162","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/icons/BootstrapIcons.tsx":"163","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/NouiSlider.tsx":"164","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Tabs.tsx":"165","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Tables.tsx":"166","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Utilities.tsx":"167","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Symbol.tsx":"168","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Separator.tsx":"169","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Rotate.tsx":"170","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Rating.tsx":"171","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Pulse.tsx":"172","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Pagination.tsx":"173","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Overlay.tsx":"174","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Modal.tsx":"175","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Indicator.tsx":"176","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/HelpersText.tsx":"177","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/HelpersFlexLayout.tsx":"178","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/HelpersBorders.tsx":"179","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/HelpersBackground.tsx":"180","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Forms.tsx":"181","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Carousel.tsx":"182","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Cards.tsx":"183","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Bullets.tsx":"184","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Breadcrumb.tsx":"185","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Badges.tsx":"186","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Accordion.tsx":"187","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/Overview.tsx":"188","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Buttons.tsx":"189","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/icons/DuotoneModels.ts":"190","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example1ThemeColors.tsx":"191","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example9ZIndex.tsx":"192","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example4LineHeight.tsx":"193","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example7OpacityHover.tsx":"194","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example6Opacity.tsx":"195","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example3FontSize.tsx":"196","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example8WidthAndHeight.tsx":"197","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example5LetterSpacing.tsx":"198","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example2Spacing.tsx":"199","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example1BaseButtons.tsx":"200","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example7ActiveLightStyle.tsx":"201","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example4OutlinedDashedStyle.tsx":"202","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example2LightStyle.tsx":"203","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example6ActiveStyle.tsx":"204","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example8ActiveColorStyle.tsx":"205","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example9Icons.tsx":"206","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example5ColorStyle.tsx":"207","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example3BackgroundStyle.tsx":"208","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example10SocialButtons.tsx":"209","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/collection/start-dashboard/CollectionPageWrapper.tsx":"210","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/collection/start-dashboard/CollectionPage.tsx":"211","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/collection/_modals/create-app-stepper/CreateAppModal.tsx":"212","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/collection/_modals/create-app-stepper/IAppModels.ts":"213","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/group/start-dashboard/ListingPageWrapper.tsx":"214","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/group/start-dashboard/ListingPage.tsx":"215","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/group/_modals/create-app-stepper/CreateAppModal.tsx":"216","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/group/_modals/create-app-stepper/IAppModels.ts":"217","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/single/start-dashboard/SinglePageWrapper.tsx":"218","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/single/start-dashboard/SinglePage.tsx":"219","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/single/_modals/create-app-stepper/CreateAppModal.tsx":"220","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/single/_modals/create-app-stepper/IAppModels.ts":"221","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/engage/EngageWidget6.tsx":"222","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget6.tsx":"223","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget5.tsx":"224","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget7.tsx":"225","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget10.tsx":"226","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/pagination/Pagination1.tsx":"227","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget8.tsx":"228"},{"size":2349,"mtime":1642525418513,"results":"229","hashOfConfig":"230"},{"size":916,"mtime":1618618926000,"results":"231","hashOfConfig":"230"},{"size":345,"mtime":1639734426875,"results":"232","hashOfConfig":"230"},{"size":1137,"mtime":1642353980837,"results":"233","hashOfConfig":"230"},{"size":151,"mtime":1618618926000,"results":"234","hashOfConfig":"230"},{"size":320,"mtime":1641825582844,"results":"235","hashOfConfig":"230"},{"size":1365,"mtime":1642353728121,"results":"236","hashOfConfig":"230"},{"size":302,"mtime":1639576149056,"results":"237","hashOfConfig":"230"},{"size":1936,"mtime":1642604109532,"results":"238","hashOfConfig":"230"},{"size":432,"mtime":1618618926000,"results":"239","hashOfConfig":"230"},{"size":293,"mtime":1618618926000,"results":"240","hashOfConfig":"230"},{"size":362,"mtime":1639136732223,"results":"241","hashOfConfig":"230"},{"size":160,"mtime":1618618926000,"results":"242","hashOfConfig":"230"},{"size":1208,"mtime":1618618926000,"results":"243","hashOfConfig":"230"},{"size":2930,"mtime":1642154397387,"results":"244","hashOfConfig":"230"},{"size":1963,"mtime":1642604391795,"results":"245","hashOfConfig":"230"},{"size":1608,"mtime":1639057133077,"results":"246","hashOfConfig":"230"},{"size":3829,"mtime":1642357664976,"results":"247","hashOfConfig":"230"},{"size":539,"mtime":1618618926000,"results":"248","hashOfConfig":"230"},{"size":1937,"mtime":1639057174387,"results":"249","hashOfConfig":"230"},{"size":1739,"mtime":1639308837265,"results":"250","hashOfConfig":"230"},{"size":10908,"mtime":1639057284206,"results":"251","hashOfConfig":"230"},{"size":55308,"mtime":1639057284363,"results":"252","hashOfConfig":"230"},{"size":1119,"mtime":1618618926000,"results":"253","hashOfConfig":"230"},{"size":1037,"mtime":1618618926000,"results":"254","hashOfConfig":"230"},{"size":1142,"mtime":1618618926000,"results":"255","hashOfConfig":"230"},{"size":1005,"mtime":1618618926000,"results":"256","hashOfConfig":"230"},{"size":800,"mtime":1642354492578,"results":"257","hashOfConfig":"230"},{"size":137,"mtime":1618618926000,"results":"258","hashOfConfig":"230"},{"size":2045,"mtime":1618618926000,"results":"259","hashOfConfig":"230"},{"size":5755,"mtime":1618618926000,"results":"260","hashOfConfig":"230"},{"size":2217,"mtime":1618618926000,"results":"261","hashOfConfig":"230"},{"size":2164,"mtime":1618618926000,"results":"262","hashOfConfig":"230"},{"size":3352,"mtime":1642357227270,"results":"263","hashOfConfig":"230"},{"size":777,"mtime":1623276852000,"results":"264","hashOfConfig":"230"},{"size":1965,"mtime":1642154390092,"results":"265","hashOfConfig":"230"},{"size":392,"mtime":1623431578000,"results":"266","hashOfConfig":"230"},{"size":1679,"mtime":1618618926000,"results":"267","hashOfConfig":"230"},{"size":534,"mtime":1623431578000,"results":"268","hashOfConfig":"230"},{"size":887,"mtime":1623431578000,"results":"269","hashOfConfig":"230"},{"size":540,"mtime":1639577193989,"results":"270","hashOfConfig":"230"},{"size":10501,"mtime":1622765904000,"results":"271","hashOfConfig":"230"},{"size":1444,"mtime":1618618926000,"results":"272","hashOfConfig":"230"},{"size":3486,"mtime":1639056615186,"results":"273","hashOfConfig":"230"},{"size":5279,"mtime":1642324956596,"results":"274","hashOfConfig":"230"},{"size":2646,"mtime":1622742132000,"results":"275","hashOfConfig":"230"},{"size":2493,"mtime":1641823478926,"results":"276","hashOfConfig":"230"},{"size":3151,"mtime":1641824548510,"results":"277","hashOfConfig":"230"},{"size":1544,"mtime":1618618926000,"results":"278","hashOfConfig":"230"},{"size":252,"mtime":1618618926000,"results":"279","hashOfConfig":"230"},{"size":100,"mtime":1618618926000,"results":"280","hashOfConfig":"230"},{"size":8841,"mtime":1622739584000,"results":"281","hashOfConfig":"230"},{"size":7545,"mtime":1639483079768,"results":"282","hashOfConfig":"230"},{"size":7504,"mtime":1622738396000,"results":"283","hashOfConfig":"230"},{"size":2998,"mtime":1642359652982,"results":"284","hashOfConfig":"230"},{"size":1500,"mtime":1642359623501,"results":"285","hashOfConfig":"230"},{"size":2643,"mtime":1618618926000,"results":"286","hashOfConfig":"230"},{"size":25174,"mtime":1642614515907,"results":"287","hashOfConfig":"230"},{"size":12216,"mtime":1642326770710,"results":"288","hashOfConfig":"230"},{"size":2720,"mtime":1639057549505,"results":"289","hashOfConfig":"230"},{"size":2111,"mtime":1618618926000,"results":"290","hashOfConfig":"230"},{"size":8666,"mtime":1641820019289,"results":"291","hashOfConfig":"230"},{"size":286,"mtime":1639057284365,"results":"292","hashOfConfig":"230"},{"size":2381,"mtime":1618618926000,"results":"293","hashOfConfig":"230"},{"size":751,"mtime":1618618926000,"results":"294","hashOfConfig":"230"},{"size":4814,"mtime":1623431578000,"results":"295","hashOfConfig":"230"},{"size":2706,"mtime":1623431578000,"results":"296","hashOfConfig":"230"},{"size":3326,"mtime":1642359794099,"results":"297","hashOfConfig":"230"},{"size":13552,"mtime":1622742064000,"results":"298","hashOfConfig":"230"},{"size":13225,"mtime":1622742056000,"results":"299","hashOfConfig":"230"},{"size":8182,"mtime":1618618926000,"results":"300","hashOfConfig":"230"},{"size":675,"mtime":1618618926000,"results":"301","hashOfConfig":"230"},{"size":2870,"mtime":1618618926000,"results":"302","hashOfConfig":"230"},{"size":18892,"mtime":1618618926000,"results":"303","hashOfConfig":"230"},{"size":83,"mtime":1618618926000,"results":"304","hashOfConfig":"230"},{"size":1941,"mtime":1618618926000,"results":"305","hashOfConfig":"230"},{"size":40103,"mtime":1622742102000,"results":"306","hashOfConfig":"230"},{"size":471,"mtime":1641823727520,"results":"307","hashOfConfig":"230"},{"size":8035,"mtime":1642603106018,"results":"308","hashOfConfig":"230"},{"size":4251,"mtime":1618618926000,"results":"309","hashOfConfig":"230"},{"size":5225,"mtime":1618618926000,"results":"310","hashOfConfig":"230"},{"size":8675,"mtime":1618618926000,"results":"311","hashOfConfig":"230"},{"size":6274,"mtime":1623431578000,"results":"312","hashOfConfig":"230"},{"size":3121,"mtime":1623431578000,"results":"313","hashOfConfig":"230"},{"size":444,"mtime":1618618926000,"results":"314","hashOfConfig":"230"},{"size":5828,"mtime":1622738890000,"results":"315","hashOfConfig":"230"},{"size":11496,"mtime":1618618926000,"results":"316","hashOfConfig":"230"},{"size":373,"mtime":1618618926000,"results":"317","hashOfConfig":"230"},{"size":86,"mtime":1618618926000,"results":"318","hashOfConfig":"230"},{"size":4576,"mtime":1618618926000,"results":"319","hashOfConfig":"230"},{"size":9840,"mtime":1618618926000,"results":"320","hashOfConfig":"230"},{"size":1642,"mtime":1623431578000,"results":"321","hashOfConfig":"230"},{"size":9160,"mtime":1618618926000,"results":"322","hashOfConfig":"230"},{"size":28398,"mtime":1618618926000,"results":"323","hashOfConfig":"230"},{"size":9388,"mtime":1618618926000,"results":"324","hashOfConfig":"230"},{"size":791,"mtime":1618618926000,"results":"325","hashOfConfig":"230"},{"size":1322,"mtime":1642605131284,"results":"326","hashOfConfig":"230"},{"size":210,"mtime":1618618926000,"results":"327","hashOfConfig":"230"},{"size":1803,"mtime":1618618926000,"results":"328","hashOfConfig":"230"},{"size":919,"mtime":1618618926000,"results":"329","hashOfConfig":"230"},{"size":3373,"mtime":1618618926000,"results":"330","hashOfConfig":"230"},{"size":348,"mtime":1618618926000,"results":"331","hashOfConfig":"230"},{"size":182,"mtime":1618618926000,"results":"332","hashOfConfig":"230"},{"size":200,"mtime":1618618926000,"results":"333","hashOfConfig":"230"},{"size":548,"mtime":1618618926000,"results":"334","hashOfConfig":"230"},{"size":3266,"mtime":1618618926000,"results":"335","hashOfConfig":"230"},{"size":1346,"mtime":1618618926000,"results":"336","hashOfConfig":"230"},{"size":699,"mtime":1618618926000,"results":"337","hashOfConfig":"230"},{"size":119,"mtime":1618618926000,"results":"338","hashOfConfig":"230"},{"size":408,"mtime":1618618926000,"results":"339","hashOfConfig":"230"},{"size":1803,"mtime":1618618926000,"results":"340","hashOfConfig":"230"},{"size":604,"mtime":1618618926000,"results":"341","hashOfConfig":"230"},{"size":1032,"mtime":1618618926000,"results":"342","hashOfConfig":"230"},{"size":231,"mtime":1618618926000,"results":"343","hashOfConfig":"230"},{"size":3628,"mtime":1618618926000,"results":"344","hashOfConfig":"230"},{"size":164,"mtime":1618618926000,"results":"345","hashOfConfig":"230"},{"size":260,"mtime":1618618926000,"results":"346","hashOfConfig":"230"},{"size":774,"mtime":1618618926000,"results":"347","hashOfConfig":"230"},{"size":137,"mtime":1618618926000,"results":"348","hashOfConfig":"230"},{"size":256,"mtime":1618618926000,"results":"349","hashOfConfig":"230"},{"size":18953,"mtime":1642095484804,"results":"350","hashOfConfig":"230"},{"size":4015,"mtime":1622738514000,"results":"351","hashOfConfig":"230"},{"size":4420,"mtime":1639583762475,"results":"352","hashOfConfig":"230"},{"size":4811,"mtime":1618618926000,"results":"353","hashOfConfig":"230"},{"size":1975,"mtime":1622738658000,"results":"354","hashOfConfig":"230"},{"size":5715,"mtime":1623191178000,"results":"355","hashOfConfig":"230"},{"size":1982,"mtime":1622738654000,"results":"356","hashOfConfig":"230"},{"size":2047,"mtime":1622738646000,"results":"357","hashOfConfig":"230"},{"size":18721,"mtime":1642328855986,"results":"358","hashOfConfig":"230"},{"size":3652,"mtime":1618618926000,"results":"359","hashOfConfig":"230"},{"size":7421,"mtime":1622742260000,"results":"360","hashOfConfig":"230"},{"size":9480,"mtime":1622738672000,"results":"361","hashOfConfig":"230"},{"size":12686,"mtime":1642182321076,"results":"362","hashOfConfig":"230"},{"size":8202,"mtime":1642336974523,"results":"363","hashOfConfig":"230"},{"size":1529,"mtime":1639461723201,"results":"364","hashOfConfig":"230"},{"size":1190,"mtime":1618618926000,"results":"365","hashOfConfig":"230"},{"size":229,"mtime":1618618926000,"results":"366","hashOfConfig":"230"},{"size":2024,"mtime":1622739596000,"results":"367","hashOfConfig":"230"},{"size":8991,"mtime":1622738622000,"results":"368","hashOfConfig":"230"},{"size":4710,"mtime":1622738626000,"results":"369","hashOfConfig":"230"},{"size":7526,"mtime":1623189274000,"results":"370","hashOfConfig":"230"},{"size":6364,"mtime":1641820437965,"results":"371","hashOfConfig":"230"},{"size":24538,"mtime":1641820540017,"results":"372","hashOfConfig":"230"},{"size":14960,"mtime":1642526042963,"results":"373","hashOfConfig":"230"},{"size":8383,"mtime":1642335785843,"results":"374","hashOfConfig":"230"},{"size":8903,"mtime":1622738696000,"results":"375","hashOfConfig":"230"},{"size":101,"mtime":1618618926000,"results":"376","hashOfConfig":"230"},{"size":5136,"mtime":1623431578000,"results":"377","hashOfConfig":"230"},{"size":73,"mtime":1618618926000,"results":"378","hashOfConfig":"230"},{"size":6735,"mtime":1623276852000,"results":"379","hashOfConfig":"230"},{"size":1204,"mtime":1618618926000,"results":"380","hashOfConfig":"230"},{"size":651,"mtime":1618618926000,"results":"381","hashOfConfig":"230"},{"size":964,"mtime":1623431578000,"results":"382","hashOfConfig":"230"},{"size":343,"mtime":1618618926000,"results":"383","hashOfConfig":"230"},{"size":497,"mtime":1618618926000,"results":"384","hashOfConfig":"230"},{"size":1798,"mtime":1618618926000,"results":"385","hashOfConfig":"230"},{"size":107,"mtime":1618618926000,"results":"386","hashOfConfig":"230"},{"size":3486,"mtime":1618618926000,"results":"387","hashOfConfig":"230"},{"size":4536,"mtime":1618618926000,"results":"388","hashOfConfig":"230"},{"size":1383,"mtime":1623411138000,"results":"389","hashOfConfig":"230"},{"size":19459,"mtime":1618618926000,"results":"390","hashOfConfig":"230"},{"size":22611,"mtime":1622742256000,"results":"391","hashOfConfig":"230"},{"size":19287,"mtime":1618618926000,"results":"392","hashOfConfig":"230"},{"size":87,"mtime":1618618926000,"results":"393","hashOfConfig":"230"},{"size":21504,"mtime":1618618926000,"results":"394","hashOfConfig":"230"},{"size":40090,"mtime":1618618926000,"results":"395","hashOfConfig":"230"},{"size":1927,"mtime":1618618926000,"results":"396","hashOfConfig":"230"},{"size":22027,"mtime":1618618926000,"results":"397","hashOfConfig":"230"},{"size":5293,"mtime":1618618926000,"results":"398","hashOfConfig":"230"},{"size":8667,"mtime":1622742254000,"results":"399","hashOfConfig":"230"},{"size":19815,"mtime":1622742252000,"results":"400","hashOfConfig":"230"},{"size":14132,"mtime":1622742256000,"results":"401","hashOfConfig":"230"},{"size":3998,"mtime":1618618926000,"results":"402","hashOfConfig":"230"},{"size":18282,"mtime":1622742258000,"results":"403","hashOfConfig":"230"},{"size":7831,"mtime":1622742252000,"results":"404","hashOfConfig":"230"},{"size":5118,"mtime":1618618926000,"results":"405","hashOfConfig":"230"},{"size":12252,"mtime":1618618926000,"results":"406","hashOfConfig":"230"},{"size":3805,"mtime":1618618926000,"results":"407","hashOfConfig":"230"},{"size":6117,"mtime":1618618926000,"results":"408","hashOfConfig":"230"},{"size":21702,"mtime":1618618926000,"results":"409","hashOfConfig":"230"},{"size":27433,"mtime":1618618926000,"results":"410","hashOfConfig":"230"},{"size":6133,"mtime":1618618926000,"results":"411","hashOfConfig":"230"},{"size":22920,"mtime":1618618926000,"results":"412","hashOfConfig":"230"},{"size":16313,"mtime":1618618926000,"results":"413","hashOfConfig":"230"},{"size":6877,"mtime":1618618926000,"results":"414","hashOfConfig":"230"},{"size":8846,"mtime":1618618926000,"results":"415","hashOfConfig":"230"},{"size":18332,"mtime":1623190950000,"results":"416","hashOfConfig":"230"},{"size":9576,"mtime":1618618926000,"results":"417","hashOfConfig":"230"},{"size":1938,"mtime":1618618926000,"results":"418","hashOfConfig":"230"},{"size":36886,"mtime":1618618926000,"results":"419","hashOfConfig":"230"},{"size":3841,"mtime":1623190962000,"results":"420","hashOfConfig":"230"},{"size":1863,"mtime":1618618926000,"results":"421","hashOfConfig":"230"},{"size":3159,"mtime":1618618926000,"results":"422","hashOfConfig":"230"},{"size":3363,"mtime":1618618926000,"results":"423","hashOfConfig":"230"},{"size":3027,"mtime":1618618926000,"results":"424","hashOfConfig":"230"},{"size":2143,"mtime":1618618926000,"results":"425","hashOfConfig":"230"},{"size":8735,"mtime":1618618926000,"results":"426","hashOfConfig":"230"},{"size":2380,"mtime":1618618926000,"results":"427","hashOfConfig":"230"},{"size":1443,"mtime":1618618926000,"results":"428","hashOfConfig":"230"},{"size":2196,"mtime":1618618926000,"results":"429","hashOfConfig":"230"},{"size":1848,"mtime":1618618926000,"results":"430","hashOfConfig":"230"},{"size":3064,"mtime":1618618926000,"results":"431","hashOfConfig":"230"},{"size":1856,"mtime":1618618926000,"results":"432","hashOfConfig":"230"},{"size":2208,"mtime":1618618926000,"results":"433","hashOfConfig":"230"},{"size":2210,"mtime":1618618926000,"results":"434","hashOfConfig":"230"},{"size":15968,"mtime":1623190954000,"results":"435","hashOfConfig":"230"},{"size":4284,"mtime":1618618926000,"results":"436","hashOfConfig":"230"},{"size":2498,"mtime":1618618926000,"results":"437","hashOfConfig":"230"},{"size":5060,"mtime":1618618926000,"results":"438","hashOfConfig":"230"},{"size":5727,"mtime":1642355411613,"results":"439","hashOfConfig":"230"},{"size":4880,"mtime":1642362785424,"results":"440","hashOfConfig":"230"},{"size":40103,"mtime":1639733921210,"results":"441","hashOfConfig":"230"},{"size":791,"mtime":1639733921213,"results":"442","hashOfConfig":"230"},{"size":4489,"mtime":1642356232327,"results":"443","hashOfConfig":"230"},{"size":4620,"mtime":1642362789543,"results":"444","hashOfConfig":"230"},{"size":40103,"mtime":1639576222517,"results":"445","hashOfConfig":"230"},{"size":791,"mtime":1639576222522,"results":"446","hashOfConfig":"230"},{"size":3361,"mtime":1642614576020,"results":"447","hashOfConfig":"230"},{"size":2772,"mtime":1642614854381,"results":"448","hashOfConfig":"230"},{"size":40103,"mtime":1639749994113,"results":"449","hashOfConfig":"230"},{"size":791,"mtime":1639749994116,"results":"450","hashOfConfig":"230"},{"size":10700,"mtime":1642336938983,"results":"451","hashOfConfig":"230"},{"size":5367,"mtime":1642614970544,"results":"452","hashOfConfig":"230"},{"size":6440,"mtime":1642335789567,"results":"453","hashOfConfig":"230"},{"size":8468,"mtime":1642335795143,"results":"454","hashOfConfig":"230"},{"size":18549,"mtime":1642328882106,"results":"455","hashOfConfig":"230"},{"size":4646,"mtime":1642614954895,"results":"456","hashOfConfig":"230"},{"size":14214,"mtime":1642672978319,"results":"457","hashOfConfig":"230"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"460"},"1b4kr93",{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"463"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"463"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"463"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"463"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"506","usedDeprecatedRules":"463"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"463"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"463"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"563","usedDeprecatedRules":"463"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"463"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"463"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"463"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"609","messages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"463"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"463"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"639","messages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"645","messages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"711","messages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"715","messages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"723","messages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"725","messages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"727","messages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"731","usedDeprecatedRules":"463"},{"filePath":"732","messages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"463"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"743","usedDeprecatedRules":"463"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"746","messages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"758","messages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"760","usedDeprecatedRules":"463"},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"463"},{"filePath":"764","messages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"463"},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"769","usedDeprecatedRules":"463"},{"filePath":"770","messages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"774","messages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"776","messages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"778","messages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"780","messages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"782","messages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"784","messages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"786","messages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"788","messages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"790","messages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"792","messages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"794","messages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"800","messages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"806","messages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"808","messages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"812","messages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"816","messages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"818","messages":"819","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"820","messages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"822","messages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"824","messages":"825","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"826","messages":"827","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"828","messages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"830","messages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"832","messages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"834","messages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"836","messages":"837","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"838","messages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"842","messages":"843","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"844","messages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"846","messages":"847","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"848","messages":"849","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"850","messages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"852","messages":"853","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"854","messages":"855","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"856","messages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"858","messages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"860","messages":"861","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"862","messages":"863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"864","messages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"866","messages":"867","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"868","messages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"870","messages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"872","messages":"873","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"874","messages":"875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"876","messages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"878","messages":"879","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"880","messages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"882","messages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"884","messages":"885","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"886","messages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"888","messages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"890","messages":"891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"892","messages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"894","messages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"896","messages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"898","messages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"463"},{"filePath":"901","messages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"463"},{"filePath":"904","messages":"905","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"906","messages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"908","messages":"909","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"910","usedDeprecatedRules":"463"},{"filePath":"911","messages":"912","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"913","usedDeprecatedRules":"463"},{"filePath":"914","messages":"915","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"916","messages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"918","messages":"919","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"920","messages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"922","messages":"923","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"924","messages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"463"},{"filePath":"926","messages":"927","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"928","usedDeprecatedRules":"463"},{"filePath":"929","messages":"930","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"931","messages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"463"},{"filePath":"934","messages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"936","usedDeprecatedRules":"463"},{"filePath":"937","messages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939","usedDeprecatedRules":"463"},{"filePath":"940","messages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"942","messages":"943","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/index.jsx",[],["944","945"],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/setup/redux/Store.ts",[],["946","947"],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/setup/apollo/SetupApollo.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/App.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/setup/index.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/setup/redux/RootReducer.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/MasterLayout.tsx",["948"],"import React from \"react\";\nimport { AsideDefault } from \"./components/aside/AsideDefault\";\nimport { Footer } from \"./components/Footer\";\nimport { HeaderWrapper } from \"./components/header/HeaderWrapper\";\nimport { Toolbar } from \"./components/Toolbar\";\nimport { ScrollTop } from \"./components/ScrollTop\";\nimport { Content } from \"./components/Content\";\nimport { MasterInit } from \"./MasterInit\";\nimport { PageDataProvider } from \"./core\";\nimport { ExploreMain } from \"../partials\";\n\nconst MasterLayout: React.FC = ({ children }) => {\n  return (\n    <PageDataProvider>\n      <div className=\"d-flex flex-column flex-root\">\n        <div className=\"page d-flex flex-row flex-column-fluid\">\n          <AsideDefault />\n          <div\n            className=\"wrapper d-flex flex-column flex-row-fluid\"\n            id=\"kt_wrapper\"\n          >\n            <HeaderWrapper />\n            <div className=\"d-flex flex-column flex-column-fluid\">\n              <Toolbar />\n              <div\n                className=\"content fs-6 d-flex flex-column-fluid\"\n                id=\"kt_content\"\n              >\n                <Content>{children}</Content>\n              </div>\n            </div>\n            <Footer />\n          </div>\n\n        </div>\n      </div>\n      <ScrollTop />\n      <MasterInit />\n      <ExploreMain />\n    </PageDataProvider>\n  );\n};\n\nexport { MasterLayout };\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/routing/PublicRoutes.tsx",["949"],"import React from \"react\";\nimport { Redirect, Route, Switch, HashRouter } from \"react-router-dom\";\nimport { AuthPage } from \"../modules/auth\";\n\nexport function PublicRoutes() {\n  return (\n    <Switch>\n      <Route path=\"/auth\" component={AuthPage} />\n      <Redirect to=\"/auth\" />\n    </Switch>\n  );\n}\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/routing/PrivateRoutes.tsx",["950"],"import React, { Suspense, lazy } from \"react\";\nimport { Redirect, Route, Switch, HashRouter } from \"react-router-dom\";\nimport { FallbackView } from \"../../_start/partials\";\nimport { LightDashboardWrapper } from \"../pages/dashboards/light-dashboard/LightDashboardWrapper\";\nimport { StartDashboardWrapper } from \"../pages/dashboards/start-dashboard/StartDashboardWrapper\";\nimport { ListingPageWrapper } from \"../pages/group/start-dashboard/ListingPageWrapper\";\nimport { CollectionPageWrapper } from \"../pages/collection/start-dashboard/CollectionPageWrapper\";\nimport { SinglePageWrapper } from \"../pages/single/start-dashboard/SinglePageWrapper\";\nimport { MenuTestPage } from \"../pages/MenuTestPage\";\n\nexport function PrivateRoutes() {\n  const ProfilePageWrapper = lazy(\n    () => import(\"../modules/profile/ProfilePageWrapper\")\n  );\n  const GeneralPageWrapper = lazy(\n    () => import(\"../modules/general/GeneralPageWrapper\")\n  );\n  const DocsPageWrapper = lazy(() => import(\"../modules/docs/DocsPageWrapper\"));\n\n  return (\n    <Suspense fallback={<FallbackView />}>\n      <Switch>\n        <Route path=\"/dashboard\" component={StartDashboardWrapper} />\n        <Route path=\"/group/:entity\" component={ListingPageWrapper} />\n        <Route path=\"/collection/:entity/:id\" component={CollectionPageWrapper} />\n        <Route path=\"/single/:entity/:cid\" component={SinglePageWrapper} />\n        <Route path=\"/light\" component={LightDashboardWrapper} />\n        <Route path=\"/general\" component={GeneralPageWrapper} />\n        <Route path=\"/profile\" component={ProfilePageWrapper} />\n        <Route path=\"/menu-test\" component={MenuTestPage} />\n        <Route path=\"/docs\" component={DocsPageWrapper} />\n        <Redirect from=\"/auth\" to=\"/dashboard\" />\n        <Redirect exact from=\"/\" to=\"/dashboard\" />\n        <Redirect to=\"dashboard\" />\n      </Switch>\n    </Suspense>\n  );\n}\n\n\n/*\n/group/:entity\n/collection/:entity\n/single/:entity/:id\n*/","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/Logout.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/setup/axios/MockAxios.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/setup/axios/SetupAxios.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/core/index.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/MasterInit.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/redux/AuthRedux.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/Sidebar.tsx",["951"],"import { url } from \"inspector\";\nimport React, { useRef, useEffect } from \"react\";\nimport { SidebarGeneral, SidebarShop, SidebarUser } from \"../../partials\";\nimport { useTheme } from \"../core\";\nimport { toAbsoluteUrl } from \"../../helpers\";\n\nconst BG_COLORS = ['bg-white', 'bg-info'];\n\ntype Props = {\n  props: any,\n  toogleMinisearch?: Function\n};\n\nexport const Sidebar: React.FC<Props> = ({ props, toogleMinisearch }) => {\n  const { config, classes } = useTheme();\n  const sidebarCSSClass = classes.sidebar;\n  const sideBarRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (!sidebarCSSClass) {\n      return;\n    }\n\n    BG_COLORS.forEach(cssClass => {\n      sideBarRef.current?.classList.remove(cssClass);\n    })\n\n    sidebarCSSClass.forEach(cssClass => {\n      sideBarRef.current?.classList.add(cssClass);\n    })\n\n  }, [sidebarCSSClass]);\n\n  return (\n    <>\n      {config.sidebar.display && (\n        <div\n          ref={sideBarRef}\n          id=\"kt_sidebar\"\n          className=\"sidebar\"\n          style={{ backgroundImage: `url(${toAbsoluteUrl(\"media/backgrounds/sidebar.png\")})` }}\n          data-kt-drawer=\"true\"\n          data-kt-drawer-name=\"sidebar\"\n          data-kt-drawer-activate=\"{default: true, lg: false}\"\n          data-kt-drawer-overlay=\"true\"\n          data-kt-drawer-width=\"{default:'200px', '350px': '300px'}\"\n          data-kt-drawer-direction=\"end\"\n          data-kt-drawer-toggle=\"#kt_sidebar_toggler\"\n        >\n          {/* begin::Sidebar Content */}\n          <div className=\"d-flex flex-column sidebar-body\">\n            {config.sidebar.content === \"general\" && <SidebarGeneral props={props} toogleMinisearch={toogleMinisearch} />}\n            {config.sidebar.content === \"shop\" && (\n              <SidebarShop sidebarRef={sideBarRef} />\n            )}\n            {config.sidebar.content === \"user\" && <SidebarUser />}\n          </div>\n          {/* end::Sidebar Content */}\n        </div>\n      )}\n    </>\n  );\n}\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/ScrollTop.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/Toolbar.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/Content.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/header/HeaderWrapper.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/Footer.tsx",["952","953","954"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { useTheme } from \"../core\";\n\nexport function Footer() {\n  const { classes } = useTheme();\n  return (\n    <div className={`footer py-4 d-flex flex-lg-column`} id=\"kt_footer\">\n      {/* begin::Container */}\n      <div\n        className={`${classes.footerContainer} d-flex flex-column flex-md-row align-items-center justify-content-between`}\n      >\n        {/* begin::Copyright */}\n        <div className=\"text-dark order-2 order-md-1\">\n          <span className=\"text-muted fw-bold me-2\">\n            {new Date().getFullYear()} &copy;\n          </span>\n          <a href=\"#\" className=\"text-gray-800 text-hover-primary\">\n            Aletheia Data\n          </a>\n        </div>\n        {/* end::Copyright */}\n\n        {/* begin::Nav */}\n        <ul className=\"menu menu-gray-600 menu-hover-primary fw-bold order-1\">\n          <li className=\"menu-item\">\n            <a href=\"https://github.com/Aletheia-Data/\" target=\"_blank\" className=\"menu-link ps-0 pe-2\">\n              Github\n            </a>\n          </li>\n          <li className=\"menu-item\">\n            <a href=\"https://aletheiadata.statuspage.io/\" target=\"_blank\" className=\"menu-link pe-0 pe-2\">\n              Status\n            </a>\n          </li>\n          <li className=\"menu-item\">\n            <a href=\"https://docs.aletheiadata.org/\" target=\"_blank\" className=\"menu-link pe-0\">\n              Documentation\n            </a>\n          </li>\n          <li className=\"menu-item\">\n            <a href=\"#\" target=\"_blank\" className=\"menu-link pe-0\">\n              FAQ\n            </a>\n          </li>\n        </ul>\n        {/* end::Nav */}\n      </div>\n      {/* end::Container */}\n    </div>\n  );\n}\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/aside/AsideDefault.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/MenuTestPage.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/profile/ProfilePageWrapper.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/DocsPageWrapper.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/general/GeneralPageWrapper.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/dashboards/light-dashboard/LightDashboardWrapper.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/dashboards/start-dashboard/StartDashboardWrapper.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/index.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/core/DefaultThemeConfig.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/core/ThemeSetup.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/core/ThemeModels.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/core/ThemeProvider.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/core/PageData.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/index.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/redux/AuthCRUD.ts",["955","956","957"],"import { rejects } from \"assert\";\nimport axios from \"axios\";\nimport Web3 from 'web3';\nimport { AuthModel } from \"../models/AuthModel\";\nimport { UserModel } from \"../models/UserModel\";\n\nconst API_URL = process.env.REACT_APP_API_ENDPOINT || \"api\";\n\nexport const GET_USER_BY_ACCESSTOKEN_URL = `${API_URL}/auth/get-user`;\nexport const LOGIN_URL = `${API_URL}/auth/login`;\nexport const REGISTER_URL = `${API_URL}/auth/register`;\nexport const REQUEST_PASSWORD_URL = `${API_URL}/auth/forgot-password`;\n\n// Server should return AuthModel\nexport function login(account: string, provider: string) {\n  // console.log(account, provider);\n  return `${btoa(`${account}-${provider}`)}`;\n}\n\n// Server should return AuthModel\nexport function register(\n  account: string,\n  provider: string\n) {\n  return axios.post<AuthModel>(REGISTER_URL, {\n    account,\n    provider,\n  });\n}\n\n// Server should return object => { result: boolean } (Is Email in DB)\nexport function requestPassword(email: string) {\n  return axios.post<{ result: boolean }>(REQUEST_PASSWORD_URL, { email });\n}\n\ndeclare let window: any;\n\nexport function getUserByToken() {\n  const web3 = new Web3(window.ethereum);\n\n  return new Promise<any>(async (resolve, reject) => {\n    // Authorization head should be fulfilled in interceptor.\n    // Check common redux folder => setupAxios\n    // await window.ethereum.enable();\n\n    const netId: any = await web3.eth.net.getId()\n    const accounts: any = await web3.eth.getAccounts();\n\n    // console.log(web3, accounts);\n\n    //load balance\n    if (accounts[0] && typeof accounts[0] !== 'undefined') {\n\n      const getId = login(accounts[0], 'metamask');\n\n      // console.log('get id: ', getId);\n\n      resolve({\n        user: {\n          id: getId,\n          account: accounts[0],\n          provider: 'metamask'\n        }\n      })\n\n    } else {\n      reject({\n        error: {\n          code: '500',\n          message: 'connection not valid'\n        }\n      });\n    }\n  })\n}\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/profile/ProfileData.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/_Theme.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/general/GeneralPageData.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/general/GeneralPage.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/profile/ProfilePage.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/DocsPage.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/aside/AsideMenu.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/header/Header.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/dashboards/start-dashboard/StartDashboardPage.tsx",["958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport {\n  EngageWidget5,\n  ListsWidget1,\n  StatsWidget1,\n  StatsWidget2,\n  StatsWidget10,\n  TablesWidget1,\n  TablesWidget2,\n} from \"../../../../_start/partials/widgets\";\nimport { CreateAppModal } from \"../_modals/create-app-stepper/CreateAppModal\";\nimport { useDispatch } from \"react-redux\";\nimport * as dashboard from \"../redux/DashboardRedux\";\nimport { getAllDepartments, getArchive, getImports, getImportsCount, getAllSources } from \"../redux/DashboardCRUD\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\n\nexport const StartDashboardPage: React.FC = () => {\n  const [show, setShow] = useState(false);\n\n  const [departments, setDepartment] = useState([{}]);\n  const [sources, setSources] = useState([{}]);\n  const [imports, setImports] = useState([{}]);\n  const [importsCount, setImportsCount] = useState(0);\n  const [loadingArchive, setLoadingArchive] = useState(true);\n  const [archive, setArchive] = useState({});\n  const [archiveCount, setArchiveCount] = useState({});\n\n  const SOURCES_QUERY = gql`\n  query SourceGroup {\n    sourcesConnection{\n      groupBy {\n        id {\n          key,\n          connection{\n            values{\n\t\t\t\t\t\t\tid,\n              name,\n              url,\n              icon{\n                id,\n                name,\n                url\n              }\n            },\n            aggregate{\n              count,\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  var { data: sourceData, loading: sourceLoading, error } = useQuery(SOURCES_QUERY, {\n    variables: {}\n  });\n\n  const DEP_QUERY = gql`\n  query DepartmentGroup {\n    departmentsConnection{\n      groupBy {\n        id {\n          key,\n          connection{\n            values{\n\t\t\t\t\t\t\tid,\n              name,\n              website,\n              icon{\n                id,\n                name,\n                url\n              }\n            },\n            aggregate{\n              count,\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  var { data: depData, loading: depLoading, error } = useQuery(DEP_QUERY, {\n    variables: {}\n  });\n\n  const CAT_QUERY = gql`\n  query CategoriesGroup {\n    categoriesConnection{\n      groupBy {\n        id {\n          key,\n          connection{\n            values{\n\t\t\t\t\t\t\tid,\n              title,\n              description,\n              icon{\n                id,\n                name,\n                url\n              }\n            },\n            aggregate{\n              count,\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  var { data: catData, loading: catLoading, error } = useQuery(CAT_QUERY, {\n    variables: {}\n  });\n\n  return (\n    <>\n      {/* begin::Row */}\n      <div className=\"row g-0 g-xl-5 g-xxl-8\">\n        <div className=\"col-xl-4\">\n          <EngageWidget5 className=\"card-stretch mb-5 mb-xxl-8\">\n            {/* begin::Action */}\n            <div className=\"text-center pt-7\">\n              <a\n                className=\"disabled btn btn-primary fw-bolder fs-6 px-7 py-3\"\n                onClick={() => setShow(true)}\n              >\n                Subir Archivo\n              </a>\n            </div>\n            {/* end::Action */}\n          </EngageWidget5>\n        </div>\n\n        <div className=\"col-xl-8\">\n          <TablesWidget1 className=\"card-stretch mb-5 mb-xxl-8\" />\n        </div>\n      </div>\n      {/* end::Row */}\n\n      {/* begin::Row */}\n      <div className=\"row g-0 g-xl-5 g-xxl-8\">\n        <div className=\"col-xl-4\">\n          <ListsWidget1 imports={imports} loadingArchive={loadingArchive} importsCount={importsCount} className=\"card-stretch mb-5 mb-xxl-8\" />\n        </div>\n\n        <div className=\"col-xl-8\">\n          <TablesWidget2 className=\"card-stretch mb-5 mb-xxl-8\" />\n        </div>\n      </div>\n      {/* end::Row */}\n\n      {/* begin::Row */}\n      <div className=\"row g-0 g-xl-5 g-xxl-8\">\n        <div className=\"col-xl-4\">\n          <StatsWidget1 files={archiveCount} loadingArchive={loadingArchive} className=\"card-stretch mb-5 mb-xxl-8\" />\n        </div>\n\n        <div className=\"col-xl-8\">\n          <StatsWidget10 id={'src'} title={'Fuentes'} loadingArchive={sourceLoading} items={sourceData} className=\"card-stretch mb-5 mb-xxl-8\" />\n        </div>\n      </div>\n      {/* end::Row */}\n\n      {/* begin::Row */}\n      <div className=\"row g-0 g-xl-5 g-xxl-8\">\n        <div className=\"col-xl-4\">\n\n        </div>\n\n        <div className=\"col-xl-8\">\n          <StatsWidget2 id={'dep'} title={'Ministerios o instituciónes'} loadingArchive={depLoading} items={depData} className=\"card-stretch mb-5 mb-xxl-8\" />\n        </div>\n      </div>\n      {/* end::Row */}\n\n      {/* begin::Row */}\n      <div className=\"row g-0 g-xl-5 g-xxl-8\">\n        <div className=\"col-xl-4\">\n\n        </div>\n\n        <div className=\"col-xl-8\">\n          <StatsWidget2 id={'cat'} title={'Categorias'} loadingArchive={catLoading} items={catData} className=\"card-stretch mb-5 mb-xxl-8\" />\n        </div>\n      </div>\n      {/* end::Row */}\n\n      {/* begin::Modals */}\n      <CreateAppModal show={show} handleClose={() => setShow(false)} />\n      {/* end::Modals */}\n    </>\n  );\n};\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/dashboards/light-dashboard/LightDashboardPage.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/__mocks__/mockAuth.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/AuthPage.tsx",["979","980","981","982"],"import React, { useEffect } from \"react\";\nimport { Redirect, Route, Switch, Link } from \"react-router-dom\";\nimport { ForgotPassword } from \"./components/ForgotPassword\";\nimport { Login } from \"./components/Login\";\nimport { toAbsoluteUrl } from \"../../../_start/helpers\";\n\nexport function AuthPage() {\n  useEffect(() => {\n    document.body.classList.add(\"bg-white\");\n    return () => {\n      document.body.classList.remove(\"bg-white\");\n    };\n  }, []);\n\n  return (\n    <div className=\"d-flex flex-column flex-root\">\n      <div\n        className=\"d-flex flex-column flex-lg-row flex-column-fluid\"\n        id=\"kt_login\"\n      >\n        {/* Aside */}\n        <div className=\"d-flex flex-column flex-lg-row-auto bg-light-grey w-lg-600px pt-15 pt-lg-0\" style={{\n          backgroundRepeat: 'no-repeat',\n          backgroundSize: 'cover',\n          backgroundImage: `url(${toAbsoluteUrl(\n            \"/media/backgrounds/login.png\"\n          )})`,\n        }}>\n          {/* Top */}\n          <div className=\"flex-lg-row-fluid d-flex flex-column justify-content-center py-20 px-10 p-lg-7 mx-auto mw-450px w-100\">\n\n            {/* begin::Aside Subtitle */}\n            <h3 className=\"fw-bolder fs-2x text-primary lh-lg\">\n              \"Aletheia (Verdad), que eres el principio de una gran virtud, evita que mi buena fe tropiece con una falsedad\".\n              <br />\n              - Pindar, 5th B.C.\n            </h3>\n            {/* end::Aside Subtitle */}\n          </div>\n\n          {/* Bottom */}\n          <div\n            className=\"d-flex flex-row-fluid bgi-size-contain bgi-no-repeat bgi-position-y-bottom bgi-position-x-center min-h-350px\"\n          ></div>\n        </div>\n\n        {/* Content */}\n        <div className=\"login-content flex-lg-row-fluid d-flex flex-column justify-content-center position-relative overflow-hidden py-20 px-10 p-lg-7 mx-auto mw-450px w-100\">\n          <div className=\"d-flex flex-column-fluid flex-center py-10\">\n            <Switch>\n              <Route path=\"/auth/login\" component={Login} />\n              <Route path=\"/auth/forgot-password\" component={ForgotPassword} />\n              <Redirect from=\"/auth\" exact={true} to=\"/auth/login\" />\n              <Redirect to=\"/auth/login\" />\n            </Switch>\n          </div>\n          <div className=\"d-flex justify-content-lg-start justify-content-center align-items-center py-7 py-lg-0\">\n\n            <span className=\"text-primary fw-bolder fs-4 cursor-pointer\">\n              <a href=\"https://github.com/Aletheia-Data/\" target=\"_blank\" className=\"menu-link ps-0 pe-2\">\n                Github\n              </a>\n            </span>\n            <span className=\"text-primary ms-10 fw-bolder fs-4\">\n              <a href=\"https://aletheiadata.statuspage.io/\" target=\"_blank\" className=\"menu-link pe-0 pe-2\">\n                Status\n              </a>\n            </span>\n            <span className=\"text-primary ms-10 fw-bolder fs-4\">\n              <a href=\"https://docs.aletheiadata.org/\" target=\"_blank\" className=\"menu-link pe-0\">\n                Documentation\n              </a>\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/content/editor/EditorToolbar.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/index.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/helpers/index.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/InboxCompose.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/SearchModal.tsx",["983","984","985","986","987","988"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap-v5\";\nimport { KTSVG, toAbsoluteUrl } from \"../../helpers\";\nimport { ListsWidget4, ListsWidget5, TablesWidget2 } from \"../widgets\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\ntype Props = {\n  show: boolean;\n  handleClose: () => void;\n};\n\nconst SearchModal: React.FC<Props> = ({ show, handleClose }) => {\n\n  const CAT_QUERY = gql`\n  query Categories {\n    categories(\n      limit: 5, \n      sort: \"alexandrias:desc\"\n    ) {\n      id,\n      title,\n      description,\n      icon{\n        url\n      },\n      alexandrias{\n        cid,\n        type\n      }\n    }\n  }\n  `;\n\n  var { data: catData, loading: catLoading, error } = useQuery(CAT_QUERY, {\n    variables: {}\n  });\n\n  return (\n    <Modal\n      className=\"bg-white\"\n      id=\"kt_header_search_modal\"\n      aria-hidden=\"true\"\n      dialogClassName=\"modal-fullscreen h-auto\"\n      show={show}\n    >\n      <div className=\"modal-content shadow-none\">\n        <div className=\"container w-lg-800px\">\n          <div className=\"modal-header d-flex justify-content-end border-0\">\n            {/* begin::Close */}\n            <div\n              className=\"btn btn-icon btn-sm btn-light-primary ms-2\"\n              onClick={handleClose}\n            >\n              <KTSVG\n                className=\"svg-icon-2\"\n                path=\"/media/icons/duotone/Navigation/Close.svg\"\n              />\n            </div>\n            {/* end::Close */}\n          </div>\n          <div className=\"modal-body\">\n            {/* begin::Search */}\n            <form className=\"pb-10\">\n              <input\n                autoFocus\n                type=\"text\"\n                className=\"form-control bg-transparent border-0 fs-4x text-center fw-normal\"\n                name=\"query\"\n                placeholder=\"Search...\"\n              />\n            </form>\n            {/* end::Search */}\n\n            {/* begin::Shop Goods */}\n            <div className=\"py-10\">\n              <h3 className=\"fw-bolder mb-8\">Shop Goods</h3>\n\n              {/* begin::Row */}\n              <div className=\"row g-5\">\n                <div className=\"col-sm-6\">\n                  <div className=\"row g-5\">\n                    <div className=\"col-sm-6\">\n                      {\n                        catLoading &&\n                        <p>Loading ...</p>\n                      }\n                      {\n                        catData && catData.categories.map((cat: any, i: number) => {\n\n                          if (i > 1) return;\n\n                          return (\n                            <div key={`cat_search_${i}`} className=\"card card-custom overlay min-h-125px mb-5 shadow-none\">\n                              <div className=\"card-body d-flex flex-column p-0\">\n                                <div\n                                  className=\"overlay-wrapper flex-grow-1 bgi-no-repeat bgi-size-cover bgi-position-center card-rounded\"\n                                  style={{\n                                    backgroundImage: `url('${toAbsoluteUrl(\n                                      \"/media/stock/600x400/img-17.jpg\"\n                                    )}')`,\n                                  }}\n                                />\n                                <div className=\"overlay-layer bg-white bg-opacity-50\">\n                                  <a\n                                    href=\"#\"\n                                    className=\"btn btn-sm fw-bold btn-primary\"\n                                  >\n                                    {cat.title}\n                                  </a>\n                                </div>\n                              </div>\n                            </div>\n                          )\n                        })\n                      }\n                    </div>\n                    <div className=\"col-sm-6\">\n                      {\n                        catData && catData.categories.map((cat: any, i: number) => {\n\n                          if (i !== 3) return;\n\n                          return (\n                            <div key={`cat_search_${i}`} className=\"card card-custom card-stretch overlay mb-5 shadow-none min-h-250px\">\n                              <div className=\"card-body d-flex flex-column p-0\">\n                                <div\n                                  className=\"overlay-wrapper flex-grow-1 bgi-no-repeat bgi-size-cover bgi-position-center card-rounded\"\n                                  style={{\n                                    backgroundImage: `url('${toAbsoluteUrl(\n                                      \"/media/stock/600x400/img-23.jpg\"\n                                    )}')`,\n                                  }}\n                                />\n                                <div className=\"overlay-layer bg-white bg-opacity-50\">\n                                  <a\n                                    href=\"#\"\n                                    className=\"btn btn-sm fw-bold btn-primary\"\n                                  >\n                                    {cat.title}\n                                  </a>\n                                </div>\n                              </div>\n                            </div>\n                          )\n                        })\n                      }\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-sm-6\">\n                  <div className=\"card card-custom card-stretch overlay mb-5 shadow-none min-h-250px\">\n                    {\n                      catData && catData.categories.map((cat: any, i: number) => {\n\n                        if (i !== 4) return;\n\n                        return (\n                          <div key={`cat_search_${i}`} className=\"card-body d-flex flex-column p-0\">\n                            <div\n                              className=\"overlay-wrapper flex-grow-1 bgi-no-repeat bgi-size-cover bgi-position-center card-rounded\"\n                              style={{\n                                backgroundImage: `url('${toAbsoluteUrl(\n                                  \"/media/stock/600x400/img-11.jpg\"\n                                )}')`,\n                              }}\n                            ></div>\n                            <div className=\"overlay-layer bg-white bg-opacity-50\">\n                              <a href=\"#\" className=\"btn btn-sm fw-bold btn-primary\">\n                                {cat.title}\n                              </a>\n                            </div>\n                          </div>\n                        )\n                      })\n                    }\n                  </div>\n                </div>\n              </div>\n              {/* end::Row */}\n            </div>\n            {/* end::Shop Goods */}\n\n            {/* begin::Framework Users */}\n            <div className=\"pb-10\">\n              <TablesWidget2 className=\"mb-5 mb-xxl-8\" />\n            </div>\n            {/* end::Framework Users */}\n\n            {/* begin::Tutorials */}\n            <div className=\"pb-10\" style={{ minHeight: '350px' }}>\n              <h3 className=\"text-dark fw-bolder fs-1 mb-6\">Tutorials</h3>\n              {/**\n               * <ListsWidget5 className=\"mb-5 shadow-none\" innerPadding=\"px-0\" />\n               */}\n            </div>\n            {/* end::Tutorials */}\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport { SearchModal };\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/MenuModal.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/header-menus/HeaderUserMenu.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/header-menus/HeaderNotificationsMenu.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/sidebar-partials/SidebarShop.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/sidebar-partials/SidebarGeneral.tsx",["989","990","991","992","993","994","995","996"],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/sidebar-partials/SidebarUser.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/explore/ExploreMain.tsx",["997"],"/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { Toggle } from \"./Toggle\";\nimport { Free } from \"./Free\";\nimport { FreeRelatedProducts } from \"./FreeRelatedProducts\";\nimport { KTSVG } from \"../../../helpers\";\n\nexport function ExploreMain() {\n  return (\n    <>\n      {/* begin::Exolore drawer */}\n      <div\n        id=\"kt_explore\"\n        className=\"explore bg-white\"\n        data-kt-drawer=\"true\"\n        data-kt-drawer-name=\"explore\"\n        data-kt-drawer-activate=\"true\"\n        data-kt-drawer-overlay=\"true\"\n        data-kt-drawer-width=\"{default:'300px', 'lg': '440px'}\"\n        data-kt-drawer-direction=\"end\"\n        data-kt-drawer-toggle=\"#kt_explore_toggle\"\n        data-kt-drawer-close=\"#kt_explore_close\"\n      >\n        {/* begin::Card  */}\n        <div className=\"card shadow-none w-100\">\n          {/* begin::Header */}\n          <div className=\"card-header\" id=\"kt_explore_header\">\n            <h5 className=\"card-title fw-bold text-gray-600\">Upgrade to Pro</h5>\n\n            <div className=\"card-toolbar\">\n              <button\n                type=\"button\"\n                className=\"btn btn-sm btn-icon explore-btn-dismiss me-n5\"\n                id=\"kt_explore_close\"\n              >\n                <KTSVG\n                  path=\"/media/icons/duotone/Navigation/Close.svg\"\n                  className=\"svg-icon-2\"\n                />\n              </button>\n            </div>\n          </div>\n          {/* end::Header */}\n          {/* begin::Body */}\n          <div className=\"card-body\" id=\"kt_explore_body\">\n            {/* begin::Content */}\n            <div\n              id=\"kt_explore_scroll\"\n              className=\"scroll-y me-n5 pe-5\"\n              data-kt-scroll=\"true\"\n              data-kt-scroll-height=\"auto\"\n              data-kt-scroll-wrappers=\"#kt_explore_body\"\n              data-kt-scroll-dependencies=\"#kt_explore_header, #kt_explore_footer\"\n              data-kt-scroll-offset=\"5px\"\n            >\n              <Free />\n              <FreeRelatedProducts />\n            </div>\n            {/* end::Content */}\n          </div>\n          {/* end::Body */}\n          {/* begin::Footer */}\n          <div className=\"card-footer py-5 text-center\" id=\"kt_explore_footer\">\n            <a\n              href=\"https://keenthemes.com/products/start-react-free\"\n              className=\"btn btn-lg explore-btn-secondary w-100\"\n            >\n              Download\n              <span className=\"fw-bolder ms-1\">Start React Free</span>\n            </a>\n          </div>\n          {/* end::Footer */}\n        </div>\n        {/* begin::Card */}\n      </div>\n      {/* end::Exolore drawer */}\n    </>\n  );\n}\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/content/dropdown/Dropdown1.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/content/dropdown/Dropdown2.tsx",["998","999"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from \"react\";\nimport { KTSVG } from \"../../../helpers\";\nimport { Link } from \"react-router-dom\";\n\nexport function Dropdown2(params: any) {\n  const [activeTab, setActiveTab] = useState(\"tab1\");\n  const [searchVal, setSearchVal] = useState(\"\");\n\n  let type = params.params;\n  let entity;\n  switch (type) {\n    case 'src':\n      entity = 'Ver todas las Fuentes';\n      break;\n    case 'dep':\n      entity = 'Ver todos los Ministerios';\n      break;\n    case 'cat':\n      entity = 'Ver todas las Categorias';\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div\n      className=\"menu menu-sub menu-sub-dropdown menu-column w-300px w-lg-350px p-5\"\n      data-kt-menu=\"true\"\n    >\n      {/* <!--begin::Input-->\n      <div className=\"input-group input-group-solid mb-5\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">\n            <KTSVG\n              className=\"svg-icon-4\"\n              path=\"/media/icons/duotone/General/Search.svg\"\n            />\n          </span>\n        </div>\n        <input\n          type=\"text\"\n          className=\"form-control ps-0\"\n          name=\"search\"\n          value={searchVal}\n          placeholder=\"Filter reports\"\n          onChange={(e) => {\n            setSearchVal(e.target.value);\n          }}\n        />\n      </div>\n       */}\n      {/* <!--end::Input--> */}\n\n      {/* <!--begin::Tabs--> */}\n      <ul className=\"nav nav-line-tabs nav-line-tabs-2x border-light fw-bold mb-5\">\n        <li className=\"nav-item\">\n          <a\n            onClick={() => setActiveTab(\"tab1\")}\n            className={`nav-link ${activeTab === \"tab1\" ? \"active\" : \"\"}`}\n          >\n            Links\n          </a>\n        </li>\n\n        {/**\n        <li className=\"nav-item\">\n          <a\n            onClick={() => setActiveTab(\"tab2\")}\n            className={`nav-link ${activeTab === \"tab2\" ? \"active\" : \"\"}`}\n          >\n            Last Week\n          </a>\n        </li>\n        * \n        */}\n      </ul>\n      {/* <!--end::Tabs--> */}\n\n      {/* <!--begin::Tab Content--> */}\n      <div className=\"tab-content\">\n        {/* <!--begin::Tab Pane--> */}\n        <div\n          className={`tab-pane ${activeTab === \"tab1\" ? \"active\" : \"\"}`}\n          id=\"kt_dropdown_2_tab_1\"\n        >\n          <ul className=\"menu menu-custom menu-column menu-rounded menu-title-gray-600 menu-icon-muted menu-hover-bg-light-primary menu-active-bg-light-primary fw-bold\">\n            <li className=\"menu-item py-1\">\n              <Link\n                className=\"menu-link px-3\"\n                to={`/group/${type}`}\n              >\n                <span className=\"menu-icon\">\n                  <KTSVG\n                    className=\"svg-icon-1\"\n                    path=\"/media/icons/duotone/General/Binocular.svg\"\n                  />\n                </span>\n                <span className=\"menu-title\">{entity}</span>\n              </Link>\n            </li>\n            {/**\n            <li className=\"menu-item py-1\">\n              <a href=\"#\" className=\"menu-link px-3\">\n                <span className=\"menu-icon\">\n                  <KTSVG\n                    className=\"svg-icon-1\"\n                    path=\"/media/icons/duotone/Communication/Mail-heart.svg\"\n                  />\n                </span>\n                <span className=\"menu-title\">Activity and Timeline</span>\n                <span className=\"menu-badge badge badge-light-danger fw-bold\">\n                  new\n                </span>\n              </a>\n            </li>\n            <li className=\"menu-item py-1\">\n              <a href=\"#\" className=\"menu-link px-3\">\n                <span className=\"menu-icon\">\n                  <KTSVG\n                    className=\"svg-icon-1\"\n                    path=\"/media/icons/duotone/Communication/Incoming-box.svg\"\n                  />\n                </span>\n                <span className=\"menu-title\">Business Features</span>\n              </a>\n            </li>\n            <li className=\"menu-item py-1\">\n              <a href=\"#\" className=\"menu-link px-3\">\n                <span className=\"menu-icon\">\n                  <KTSVG\n                    className=\"svg-icon-1\"\n                    path=\"/media/icons/duotone/Design/Flatten.svg\"\n                  />\n                </span>\n                <span className=\"menu-title\">Accessibility Settings</span>\n              </a>\n            </li>\n            <li className=\"menu-item py-1\">\n              <a href=\"#\" className=\"menu-link px-3\">\n                <span className=\"menu-icon\">\n                  <KTSVG\n                    className=\"svg-icon-1\"\n                    path=\"/media/icons/duotone/Design/Saturation.svg\"\n                  />\n                </span>\n                <span className=\"menu-title\">Data & Personalisation</span>\n              </a>\n            </li>\n            <li className=\"menu-item py-1\">\n              <a href=\"#\" className=\"menu-link px-3\">\n                <span className=\"menu-icon\">\n                  <KTSVG\n                    className=\"svg-icon-1\"\n                    path=\"/media/icons/duotone/General/Notification2.svg\"\n                  />\n                </span>\n                <span className=\"menu-title\">General Preference</span>\n              </a>\n            </li>\n             * \n             */}\n          </ul>\n        </div>\n        {/* <!--end::Tab Pane--> */}\n\n        {/* <!--begin::Tab Pane--> */}\n        <div\n          className={`tab-pane ${activeTab === \"tab2\" ? \"active\" : \"\"}`}\n          id=\"kt_dropdown_2_tab_2\"\n        >\n          <ul className=\"menu menu-custom menu-column menu-rounded menu-title-gray-600 menu-icon-muted menu-hover-bg-light-primary menu-active-bg-light-primary fw-bold\">\n            <li className=\"menu-item py-1\">\n              <a href=\"#\" className=\"menu-link active px-3\">\n                <span className=\"menu-icon\">\n                  <KTSVG\n                    className=\"svg-icon-1\"\n                    path=\"/media/icons/duotone/Communication/Mail-heart.svg\"\n                  />\n                </span>\n                <span className=\"menu-title\">Activity and Timeline</span>\n                <span className=\"menu-badge badge badge-danger fw-bold\">\n                  new\n                </span>\n              </a>\n            </li>\n\n            <li className=\"menu-item py-1\">\n              <a href=\"#\" className=\"menu-link px-3\">\n                <span className=\"menu-icon\">\n                  <KTSVG\n                    className=\"svg-icon-1\"\n                    path=\"/media/icons/duotone/Communication/Incoming-box.svg\"\n                  />\n                </span>\n                <span className=\"menu-title\">Business Features</span>\n              </a>\n            </li>\n\n            <li className=\"menu-item py-1\">\n              <a href=\"#\" className=\"menu-link px-3\">\n                <span className=\"menu-icon\">\n                  <KTSVG\n                    className=\"svg-icon-1\"\n                    path=\"/media/icons/duotone/Design/Flatten.svg\"\n                  />\n                </span>\n                <span className=\"menu-title\">Accessibility Settings</span>\n              </a>\n            </li>\n\n            <li className=\"menu-item py-1\">\n              <a href=\"#\" className=\"menu-link px-3\">\n                <span className=\"menu-icon\">\n                  <KTSVG\n                    className=\"svg-icon-1\"\n                    path=\"/media/icons/duotone/Design/Saturation.svg\"\n                  />\n                </span>\n                <span className=\"menu-title\">Data & Personalisation</span>\n              </a>\n            </li>\n\n            <li className=\"menu-item py-1\">\n              <a href=\"#\" className=\"menu-link px-3\">\n                <span className=\"menu-icon\">\n                  <KTSVG\n                    className=\"svg-icon-1\"\n                    path=\"/media/icons/duotone/General/Notification2.svg\"\n                  />\n                </span>\n                <span className=\"menu-title\">General Preference</span>\n              </a>\n            </li>\n\n            <li className=\"menu-item py-1\">\n              <a href=\"#\" className=\"menu-link px-3\">\n                <span className=\"menu-icon\">\n                  <KTSVG\n                    className=\"svg-icon-1\"\n                    path=\"/media/icons/duotone/Files/Media.svg\"\n                  />\n                </span>\n                <span className=\"menu-title\">Web & App History</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n        {/* <!--end::Tab Pane--> */}\n      </div>\n      {/* <!--end::Tab Content--> */}\n    </div>\n  );\n}\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/content/fallback-view/FallbackView.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/content/code-highlight/CodeBlock.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/content/portal/Portal.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/aside/AsideMenuDocs.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/aside/AsideMenuMain.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/header/Topbar.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/general/pages/PricingPage.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/general/pages/FAQPage.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/general/pages/InvoicePage.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/profile/components/Overview.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/Updates.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/icons/LineAwesomeIcons.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/Skeleton.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/QuickStart.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/dashboards/_modals/create-app-stepper/CreateAppModal.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/__mocks__/usersTableMock.ts",["1000"],"import { toAbsoluteUrl } from \"../../../../_start/helpers\";\nimport { UserModel } from \"../models/UserModel\";\n\nexport class UsersTableMock {\n  public static table: Array<UserModel> = [\n    {\n      id: 1,\n      account: \"none\",\n      provider: \"metamask\",\n      auth: {\n        accessToken: \"access-token-8f3ae836da744329a6f93bf20594b5cc\",\n        refreshToken: \"access-token-f8c137a2c98743f48b643e71161d90aa\",\n      },\n      avatar: {\n        type: 1\n      }\n    }\n  ];\n}\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/components/Login.tsx",["1001","1002","1003","1004","1005","1006","1007"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport clsx from \"clsx\";\nimport Web3 from 'web3';\nimport { Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as auth from \"../redux/AuthRedux\";\nimport { login } from \"../redux/AuthCRUD\";\nimport { toAbsoluteUrl } from \"../../../../_start/helpers\";\nimport { useMoralis } from \"react-moralis\";\n\nconst loginSchema = Yup.object().shape({\n  account: Yup.string()\n    .min(3, \"Minimum 3 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Email is required\"),\n  provider: Yup.string()\n    .min(3, \"Minimum 3 symbols\")\n    .max(50, \"Maximum 50 symbols\")\n    .required(\"Password is required\"),\n});\n\nconst initialValues = {\n  account: \"none\",\n  provider: \"metamask\",\n};\n\ndeclare let window: any;\n\n/*\n  Formik+YUP+Typescript:\n  https://jaredpalmer.com/formik/docs/tutorial#getfieldprops\n  https://medium.com/@maurice.de.beijer/yup-validation-and-typescript-and-formik-6c342578a20e\n*/\n\nexport function Login() {\n\n  const web3 = new Web3(window.ethereum);\n\n  let [connected, setConnected] = useState(false);\n  let [account, setAccount] = useState('');\n  let [netId, setNetId] = useState('');\n  let [provider, setProvider] = useState('');\n  const { authenticate, isAuthenticated, user } = useMoralis();\n\n  const signAuth = async () => {\n    return new Promise(async (resolve, reject) => {\n      // await authenticate({ signingMessage: \"Aletheia Data te dà la bienvenida\" });\n      // let userWallet: any = await user?.get(\"ethAddress\");\n      // console.log(isAuthenticated, user?.get(\"ethAddress\"));\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      // console.log(accounts);\n      resolve(accounts[0]);\n    })\n  }\n\n  // init web3 if available\n  const initWeb3 = async () => {\n    return new Promise(async (resolve, reject) => {\n      if (window.ethereum) {\n        // const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        let user:any = await signAuth();\n        //load balance\n        if (user) {\n\n          setConnected(true);\n          setAccount(user);\n          setNetId(netId);\n          setProvider('metamask');\n\n          resolve(user);\n\n        }\n        // user rejection\n        setLoading(false);\n        reject(false);\n\n      } else {\n        window.alert('Please install MetaMask');\n        window.open('https://metamask.io/', '_blank');\n        reject(false);\n      }\n    });\n  }\n\n  useEffect(() => {\n    // initWeb3();\n  }, [])\n\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues,\n    validationSchema: loginSchema,\n    onSubmit: (values, { setStatus, setSubmitting }) => {\n\n      setLoading(true);\n\n      const connect = (user: any) => {\n        let accessToken = login(user, 'metamask');\n        setLoading(false);\n        dispatch(auth.actions.login(accessToken));\n      }\n\n      if (!account) {\n        try {\n          initWeb3().then(user => {\n            console.log(user);\n            if (!user) { return 'error login with metamask'; }\n            connect(user);\n            setLoading(false);\n            setSubmitting(false);\n          })\n            .catch(error => {\n              setLoading(false);\n              setSubmitting(false);\n              throw error;\n            })\n        } catch (error) {\n          setLoading(false);\n          setSubmitting(false);\n          throw error;\n        }\n      }\n\n    },\n  });\n\n  return (\n    <form\n      className=\"form w-100\"\n      onSubmit={formik.handleSubmit}\n      noValidate\n      id=\"kt_login_signin_form\"\n    >\n\n      {/* begin::Aside Logo */}\n      <div style={{\n        borderRadius: '10px',\n        display: 'flex',\n        width: '60px',\n        overflow: 'hidden',\n        marginBottom: '20px'\n      }}>\n        <img\n          alt=\"Logo\"\n          src={toAbsoluteUrl(\"/media/logos/logo-compact.png\")}\n          className=\"h-75px\"\n        />\n      </div>\n      {/* end::Aside Logo */}\n\n      {/* begin::Title */}\n      <div className=\"pb-lg-15\">\n        <h3 className=\"fw-bolder text-dark display-6\">Bienvenido</h3>\n        <div className=\"text-muted fw-bold fs-3\">\n          ¿Nuevo aquí?{\" \"}\n          <Link\n            to=\"#\" // \"/auth/registration\"\n            className=\"text-primary fw-bolder\"\n            id=\"kt_login_signin_form_singup_button\"\n          >\n            Accede a nuestra Dashboard\n          </Link>\n        </div>\n      </div>\n      {/* begin::Title */}\n\n      {\n        formik.status ? (\n          <div className=\"mb-lg-15 alert alert-danger\">\n            <div className=\"alert-text font-weight-bold\">{formik.status}</div>\n          </div>\n        ) : (\n          <div className=\"mb-lg-15 alert alert-info\">\n            <div className=\"alert-text \">\n              Accede con <strong>Metamask</strong>\n            </div>\n          </div>\n        )\n      }\n\n      {/* begin::Form group \n      <div className=\"v-row mb-10 fv-plugins-icon-container\">\n        <label className=\"form-label fs-6 fw-bolder text-dark\">Email</label>\n        <input\n          placeholder=\"Email\"\n          {...formik.getFieldProps(\"email\")}\n          className={clsx(\n            \"form-control form-control-lg form-control-solid\",\n            { \"is-invalid\": formik.touched.email && formik.errors.email },\n            {\n              \"is-valid\": formik.touched.email && !formik.errors.email,\n            }\n          )}\n          type=\"email\"\n          name=\"email\"\n          autoComplete=\"off\"\n        />\n        {formik.touched.email && formik.errors.email && (\n          <div className=\"fv-plugins-message-container\">\n            <div className=\"fv-help-block\">{formik.errors.email}</div>\n          </div>\n        )}\n      </div>\n      */}\n      {/* end::Form group */}\n\n      {/* begin::Form group \n      <div className=\"fv-row mb-10 fv-plugins-icon-container\">\n        <div className=\"d-flex justify-content-between mt-n5\">\n          <label className=\"form-label fs-6 fw-bolder text-dark pt-5\">\n            Password\n          </label>\n\n          <Link\n            to=\"/auth/forgot-password\"\n            className=\"text-primary fs-6 fw-bolder text-hover-primary pt-5\"\n            id=\"kt_login_signin_form_password_reset_button\"\n          >\n            Forgot Password ?\n          </Link>\n        </div>\n        <input\n          type=\"password\"\n          autoComplete=\"off\"\n          {...formik.getFieldProps(\"password\")}\n          className={clsx(\n            \"form-control form-control-lg form-control-solid\",\n            {\n              \"is-invalid\": formik.touched.password && formik.errors.password,\n            },\n            {\n              \"is-valid\": formik.touched.password && !formik.errors.password,\n            }\n          )}\n        />\n        {formik.touched.password && formik.errors.password && (\n          <div className=\"fv-plugins-message-container\">\n            <div className=\"fv-help-block\">{formik.errors.password}</div>\n          </div>\n        )}\n      </div>\n      */}\n      {/* end::Form group */}\n\n      {/* begin::Action */}\n      <div className=\"pb-lg-0 pb-5\">\n        <button\n          type=\"submit\"\n          id=\"kt_login_signin_form_submit_button\"\n          className=\"btn btn-primary fw-bolder fs-6 px-8 py-4 my-3 me-3\"\n          disabled={formik.isSubmitting || !formik.isValid}\n        >\n          {!loading && <span className=\"indicator-label\">\n            <img\n              src={toAbsoluteUrl(\"/media/svg/brand-logos/metamask.svg\")}\n              className=\"w-20px h-20px me-3\"\n              alt=\"\"\n            />\n            Sign in with Metamask\n          </span>}\n          {loading && (\n            <span className=\"indicator-progress\" style={{ display: \"block\" }}>\n              Please wait...{\" \"}\n              <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\n            </span>\n          )}\n        </button>\n      </div>\n      {/* end::Action */}\n    </form>\n  );\n}\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/auth/components/ForgotPassword.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/_ToggleComponent.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/_StickyComponent.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/explore/FreeRelatedProducts.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/explore/Free.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/helpers/components/KTSVG.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/shop/NewProductForm.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/layout/shop/ProductFilterForm.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/helpers/RouterHelpers.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/helpers/AssetHelpers.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/_ScrollTopComponent.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/_DrawerComponent.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/aside/AsideMenuItem.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/_ScrollComponent.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/MenuComponent.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/_StepperComponent.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/dashboards/_modals/create-app-stepper/IAppModels.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/index.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/index.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/components/_CookieComponent.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/getAttributeValueByBreakpoint.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/EventHandlerUtil.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/types-helpers/_getUniqueIdWithPrefix.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/types-helpers/_stringSnakeToCamel.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/types-helpers/_getObjectPropertyValueByKey.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/_ElementStyleUtil.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/ElementAnimateUtil.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/_DataUtil.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getElementOffset.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getScrollTop.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getCSS.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/_DOMEventHandlerUtil.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_throttle.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getHighestZindex.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getElementIndex.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/slide.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_insertAfterElement.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/getElementChild.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getElementParents.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_isVisibleElement.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getViewPort.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/mixed/MixedWidget1.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/feeds/FeedsWidget2.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/feeds/FeedsWidget3.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget8.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget5.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget6.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget4.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget3.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget2.tsx",["1008","1009","1010","1011","1012","1013","1014"],"/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport ApexCharts, { ApexOptions } from \"apexcharts\";\nimport { KTSVG, toAbsoluteUrl } from \"../../../helpers\";\nimport { Dropdown2 } from \"../../content/dropdown/Dropdown2\";\nimport { getCSSVariableValue } from \"../../../assets/ts/_utils\";\nimport { Link } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { useLazyQuery } from \"@apollo/client\";\n\n// Axios\nimport axios from \"axios\";\n\ntype Props = {\n  id: string;\n  title: string;\n  items: any;\n  loadingArchive: boolean;\n  className: string;\n  innerPadding?: string;\n};\n\n// TODO: move to global\nconst colorPDF = '#F1416C';\nconst colorCSV = '#FFC700';\nconst colorXLS = '#20D489';\nconst colorODS = '#A2A7F7';\nconst colorOTHER = '#00A3FF';\n\nconst StatsWidget2: React.FC<Props> = ({ id, title, loadingArchive, items, className, innerPadding = \"\" }) => {\n  const [activeTab, setActiveTab] = useState(`#${id}tab1`);\n  const [activeTabTotal, setActiveTabTotal] = useState('Loading');\n  const [TabsTotal, setActiveTabsTotal] = useState(0);\n  const [elementTab, setElementTab] = useState(false);\n  const [activeChart, setActiveChart] = useState<ApexCharts | undefined>();\n\n  // before rendering, order by n aletheias\n  /*\n  if (items) {\n    items.sort((a, b) => (a.alexandrias.length > b.alexandrias.length ? -1 : 1));\n  }\n  */\n\n  const getFilesType = (item: string, id: string) => {\n    return new Promise((resolve, reject) => {\n\n      let query;\n      switch (item) {\n        case 'cat':\n          query = `\n            query TypeGroupBy {\n              alexandriasConnection(where: {\n                category: \"${id}\",\n              }) {\n                groupBy {\n                  type{\n                    key,\n                    connection{\n                      aggregate{\n                        count,\n                        totalCount\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          `;\n          break;\n        case 'dep':\n          query = `\n            query TypeGroupBy {\n              alexandriasConnection(where: {\n                department: \"${id}\",\n              }) {\n                groupBy {\n                  type{\n                    key,\n                    connection{\n                      aggregate{\n                        count,\n                        totalCount\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          `;\n          break;\n        case 'src':\n          query = `\n            query TypeGroupBy {\n              alexandriasConnection(where: {\n                source: \"${id}\",\n              }) {\n                groupBy {\n                  type{\n                    key,\n                    connection{\n                      aggregate{\n                        count,\n                        totalCount\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          `;\n          break;\n      }\n      const endpoint = `${process.env.REACT_APP_API_ENDPOINT}/graphql`;\n      // console.log('fetching data: ', endpoint)\n      fetch(endpoint, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          query: query\n        })\n      })\n        .then(response => response.json())\n        .then(data => {\n          // console.log(data)\n          resolve(data);\n        })\n        .catch(err => {\n          console.log(err)\n          reject(err);\n        });\n\n    });\n  }\n\n  const setTab = (tab_n: number) => {\n\n    if (activeChart) {\n      activeChart.destroy();\n    }\n\n    setActiveTab(`#${id}tab${tab_n}`);\n\n    const element = document.querySelector(\n      `#${id}tab${tab_n}_chart`\n    ) as HTMLElement;\n    setElementTab(true);\n\n    if (element) {\n      element.innerHTML = '';\n    }\n    // console.log('element: ', element);\n\n    if (!element) return;\n\n    console.log('getting: ', id, items[tab_n - 1]);\n\n    setActiveTabTotal('Loading');\n\n    let item = items[tab_n - 1].connection.values[0];\n\n    getFilesType(id, item.id)\n      .then((res: any) => {\n        const types = res.data.alexandriasConnection.groupBy.type;\n\n        const pdf = types.filter((type: any) => type.key === 'pdf');\n        const csv = types.filter((type: any) => type.key === 'csv');\n        const xls = types.filter((type: any) => type.key === 'xls' || type.key === \"xlsx\");\n        const other = types.filter((type: any) => type.key === 'other');\n\n        const pdfFile = pdf.length > 0 ? pdf[0].connection.aggregate.count : 0;\n        const csvFile = csv.length > 0 ? csv[0].connection.aggregate.count : 0;\n        const xlsFile = xls.length > 0 ? xls[0].connection.aggregate.count : 0;\n        const otherFile = other.length > 0 ? other[0].connection.aggregate.count : 0;\n\n        setActiveTabTotal(\n          pdfFile + csvFile + xlsFile + otherFile\n        )\n\n        const dataCharts = {\n          pdfFile,\n          csvFile,\n          xlsFile,\n          otherFile\n        };\n\n        const height = parseInt(getCss(element, \"height\"));\n        if (height) {\n          const chart = new ApexCharts(element, getChartOptions(tab_n, height, dataCharts));\n          chart.render();\n          setActiveChart(chart);\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n      })\n\n  };\n\n\n  useEffect(() => {\n\n    setTab(1);\n\n    return function cleanUp() {\n      if (activeChart) {\n        activeChart.destroy();\n      }\n    };\n\n  }, [loadingArchive]);\n\n  if (loadingArchive) {\n    return (\n      <div className={`card ${className}`}>\n        {/* begin::Header */}\n        <div className=\"card-header align-items-center border-0 mt-5\">\n          <h3 className=\"card-title align-items-start flex-column\">\n            <span className=\"fw-bolder text-dark fs-3\">{title}</span>\n            <span className=\"text-muted mt-2 fw-bold fs-6\">Loading ...</span>\n          </h3>\n          <div className=\"card-toolbar\">\n            {/* begin::Dropdown */}\n            <Link\n              className=\"menu-link px-3\"\n              to={`/group/${id}`}\n            >\n              <span className=\"menu-icon\">\n                <KTSVG\n                  className=\"svg-icon-1\"\n                  path=\"/media/icons/duotone/General/Binocular.svg\"\n                />\n              </span>\n            </Link>\n            {/* end::Dropdown */}\n          </div>\n        </div>\n        {/* end::Header */}\n\n        {/* begin::Body */}\n        <div className=\"card-body pt-0\">\n          <div className=\"d-flex flex-wrap flex-xxl-nowrap justify-content-center justify-content-md-start pt-4\">\n            {/* begin::Nav */}\n            <div className=\"me-sm-10 me-0\">\n              <ul className=\"nav flex-column nav-pills nav-pills-custom\">\n                <li className=\"nav-item mb-3\" key={`tabs_1`}>\n                  <a\n                    onClick={() => ''}\n                    className={`nav-link w-225px h-70px ${activeTab === `#${id}tab1` ? \"active btn-active-light\" : \"\"\n                      } fw-bolder me-2`}\n                    id={`${id}tab1`}\n                  >\n                    <div className=\"nav-icon me-3\">\n                      <img\n                        alt=\"\"\n                        src={toAbsoluteUrl(\"/media/svg/logo/gray/aven.svg\")}\n                        className=\"default\"\n                      />\n\n                      <img\n                        alt=\"\"\n                        src={toAbsoluteUrl(\"/media/svg/logo/colored/aven.svg\")}\n                        className=\"active\"\n                      />\n                    </div>\n                    <div className=\"ps-1\">\n                      <span className=\"nav-text text-gray-600 fw-bolder fs-6\">\n                        Loading ...\n                      </span>\n                      <span className=\"text-muted fw-bold d-block pt-1\">\n                        Loading ...\n                      </span>\n                    </div>\n                  </a>\n                </li>\n              </ul>\n            </div>\n            {/* end::Nav */}\n\n            {/* begin::Tab Content */}\n            <div className=\"tab-content flex-grow-1\" // style={{ paddingLeft: \"0.23rem !important\" }}\n            >\n              {/* begin::Tab Pane */}\n              <div\n                className={`tab-pane fade ${activeTab === `#${id}tab1` ? \"show active\" : \"\"\n                  }`}\n                style={{\n\n                }}\n                id={`${id}tab1_content`}\n                key={`content_1`}\n              >\n                {/* begin::Content */}\n                <div className=\"d-flex justify-content-center mb-10\">\n                  {/* begin::Item */}\n                  <div className=\"px-10\">\n                    <span className=\"text-muted fw-bold fs-7\">Archivos</span>\n                    <span className=\"text-gray-800 fw-bolder fs-3 d-block\">\n                      Loading ...\n                    </span>\n                  </div>\n                  {/* end::Item */}\n                </div>\n                {/* end::Content  */}\n              </div>\n              {/* end::Tab Pane */}\n\n            </div>\n            {/* end::Tab Content */}\n          </div>\n        </div>\n        {/* end: Card Body */}\n      </div>\n    )\n  }\n\n  if (items) {\n    let itemsData = items?.departmentsConnection?.groupBy?.id || items?.categoriesConnection?.groupBy?.id;\n    items = itemsData.slice(0, 5);\n  }\n\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className=\"card-header align-items-center border-0 mt-5\">\n        <h3 className=\"card-title align-items-start flex-column\">\n          <span className=\"fw-bolder text-dark fs-3\">{title}</span>\n          <span className=\"text-muted mt-2 fw-bold fs-6\">{TabsTotal} {title} registradas</span>\n        </h3>\n        <div className=\"card-toolbar\">\n          {/* begin::Dropdown */}\n          <Link\n            className=\"menu-link px-3\"\n            to={`/group/${id}`}\n          >\n            <span className=\"menu-icon\">\n              <KTSVG\n                className=\"svg-icon-1\"\n                path=\"/media/icons/duotone/General/Binocular.svg\"\n              />\n            </span>\n          </Link>\n\n          {/** \n           * \n           * <button\n            type=\"button\"\n            className=\"btn btn-sm btn-icon btn-color-primary btn-active-light-primary\"\n            data-kt-menu-trigger=\"click\"\n            data-kt-menu-placement=\"bottom-end\"\n            data-kt-menu-flip=\"top-end\"\n          >\n            <KTSVG\n              className=\"svg-icon-1\"\n              path=\"/media/icons/duotone/Layout/Layout-4-blocks-2.svg\"\n            />\n          </button>\n           * <Dropdown2 params={id} />  */}\n\n          {/* end::Dropdown */}\n        </div>\n      </div>\n      {/* end::Header */}\n\n      {/* begin::Body */}\n      <div className=\"card-body pt-0\">\n        <div className=\"d-flex flex-wrap flex-xxl-nowrap justify-content-center justify-content-md-start pt-4\">\n          {/* begin::Nav */}\n          <div className=\"me-sm-10 me-0\">\n            <ul className=\"nav flex-column nav-pills nav-pills-custom\">\n              {\n                items && items.map((item: any, i: number) => {\n                  // increase index by 1\n                  let current_item = item.connection.values[0];\n                  let img = current_item.icon ? current_item.icon.url : '/media/svg/logo/gray/aven.svg';\n                  i++;\n                  return (\n                    <li className=\"nav-item mb-3\" key={`tabs_${current_item.id}`}>\n                      <a\n                        onClick={() => setTab(i)}\n                        className={`nav-link w-225px h-70px ${activeTab === `#${id}tab${i}` ? \"active btn-active-light\" : \"\"\n                          } fw-bolder me-2`}\n                        id={`${id}tab${i}`}\n                      >\n                        <div className=\"nav-icon me-3\">\n                          <img\n                            alt=\"\"\n                            src={toAbsoluteUrl(img)}\n                            className=\"default\"\n                          />\n\n                          <img\n                            alt=\"\"\n                            src={toAbsoluteUrl(img)}\n                            className=\"active\"\n                          />\n                        </div>\n                        <div className=\"ps-1 text-truncate\">\n                          <span className=\"nav-text text-gray-600 fw-bolder fs-6\">\n                            {current_item.name || current_item.title}\n                          </span>\n                          <span className=\"text-muted fw-bold d-block pt-1\">\n                            {current_item.website || current_item.url || current_item.description}\n                          </span>\n                        </div>\n                      </a>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n          {/* end::Nav */}\n\n          {/* begin::Tab Content */}\n          <div className=\"tab-content flex-grow-1\" // style={{ paddingLeft: \"0.23rem !important\" }}\n          >\n            {/* begin::Tab Pane */}\n            {\n              items && items.map((item: any, i: number) => {\n\n                let current_item = item.connection.values[0];\n                let current_count = item.connection.aggregate.count;\n                let current_total = item.connection.aggregate.totalCount;\n\n                if (!TabsTotal) {\n                  setActiveTabsTotal(current_total);\n                }\n                // console.log(item);\n                let type = id;\n                let entity;\n                switch (type) {\n                  case 'src':\n                    entity = current_item.name;\n                    break;\n                  case 'dep':\n                    entity = current_item.name;\n                    break;\n                  case 'cat':\n                    entity = current_item.title;\n                    break;\n                  default:\n                    break;\n                }\n                // increase index by 1\n                i++;\n                const getChart = (index: number) => {\n                  return (\n                    <div id={`${id}tab${index}_chart`} style={{ height: \"250px\" }} />\n                  )\n                }\n                return (\n                  <div\n                    className={`tab-pane fade ${activeTab === `#${id}tab${i}` ? \"show active\" : \"\"\n                      }`}\n                    style={{\n\n                    }}\n                    id={`${id}tab${i}_content`}\n                    key={`content_${current_item.id}`}\n                  >\n                    {/* begin::Content */}\n                    <div className=\"d-flex justify-content-end mb-10\">\n                      {/* begin::Item */}\n                      <div className=\"px-10 text-end\">\n                        <span className=\"text-muted fw-bold fs-7\">Archivos</span>\n                        <span className=\"text-gray-800 fw-bolder fs-3 d-block\">\n                          {activeTabTotal}\n                        </span>\n                      </div>\n                      {/* end::Item */}\n\n                    </div>\n                    {/* end::Content  */}\n\n                    {\n                      getChart(i)\n                    }\n\n                    <Link\n                      className=\"nav-link btn btn-active-light btn-color-muted py-2 px-4 fw-bolder me-2 active\"\n                      to={`/collection/${id}/${current_item.id}`}\n                    >\n                      {`Ver ${entity}`}\n                    </Link>\n                  </div>\n                )\n              })\n            }\n            {/* end::Tab Pane */}\n\n          </div>\n          {/* end::Tab Content */}\n        </div>\n      </div>\n      {/* end: Card Body */}\n    </div>\n  );\n};\n\nexport { StatsWidget2 };\n\nfunction getChartOptions(\n  tabNumber: number,\n  height: string | number | undefined,\n  data: any\n): ApexOptions {\n\n  let series = [\n    {\n      name: \"PDF\",\n      data: [data.pdfFile],\n    },\n    {\n      name: \"CSV\",\n      data: [data.csvFile],\n    },\n    {\n      name: \"XLS\",\n      data: [data.xlsFile],\n    },\n    {\n      name: \"Others\",\n      data: [data.otherFile],\n    }\n  ]\n\n  return {\n    series: series,\n    chart: {\n      fontFamily: \"inherit\",\n      type: \"bar\",\n      height: height,\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"25%\",\n        endingShape: \"rounded\",\n      },\n    },\n    legend: {\n      show: false,\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: [\"transparent\"],\n    },\n    xaxis: {\n      categories: [\"PDF\", \"CSV\", \"XLS\", \"Others\"],\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n      labels: {\n        show: false,\n        style: {\n          colors: getCSSVariableValue(\"--bs-gray-700\"),\n          fontSize: \"12px\",\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: getCSSVariableValue(\"--bs-gray-700\"),\n          fontSize: \"12px\",\n        },\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    states: {\n      normal: {\n        filter: {\n          type: \"none\",\n          value: 0,\n        },\n      },\n      hover: {\n        filter: {\n          type: \"none\",\n          value: 0,\n        },\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: \"none\",\n          value: 0,\n        },\n      },\n    },\n    tooltip: {\n      style: {\n        fontSize: \"12px\",\n      },\n      x: {\n        show: false\n      },\n      y: {\n        formatter: function (val: number) {\n          return `${val} archivos`;\n        },\n      }\n    },\n    colors: [\n      colorPDF,\n      colorCSV,\n      colorXLS,\n      colorOTHER\n    ],\n    grid: {\n      borderColor: getCSSVariableValue(\"--bs-gray-200\"),\n      strokeDashArray: 4,\n      yaxis: {\n        lines: {\n          show: true,\n        },\n      },\n    },\n  };\n}\n\nfunction getCss(el: HTMLElement, styleProp: string) {\n  const defaultView = (el.ownerDocument || document).defaultView;\n  if (!defaultView) {\n    return \"\";\n  }\n\n  // sanitize property name to css notation\n  // (hyphen separated words eg. font-Size)\n  styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n}\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget9.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/feeds/FeedsWidget4.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget7.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget1.tsx",["1015","1016","1017","1018","1019","1020"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport Chart, { ChartConfiguration } from \"chart.js\";\nimport { getCSSVariableValue } from \"../../../assets/ts/_utils\";\nimport { KTSVG, toAbsoluteUrl } from \"../../../helpers\";\nimport { Dropdown1 } from \"../../content/dropdown/Dropdown1\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { format } from \"path\";\n\ntype Props = {\n  files: any;\n  className: string;\n  loadingArchive: boolean;\n  innerPadding?: string;\n};\n\nconst colorPDF = '#F1416C';\nconst colorCSV = '#FFC700';\nconst colorXLS = '#20D489';\nconst colorODS = '#A2A7F7';\nconst colorOTHER = '#00A3FF';\nconst colorUNDEFINED = '#dbdbdb';\n\nconst StatsWidget1: React.FC<Props> = ({ className, innerPadding = \"\" }) => {\n\n  const TYPE_QUERY = gql`\n  query AlexandriasGroupByType {\n    alexandriasConnection(\n    where: {\n      \n    }){\n      groupBy {\n        type{\n          key,\n          connection{\n            aggregate{\n              count,\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  var { data, loading, error } = useQuery(TYPE_QUERY, {\n    variables: {}\n  });\n\n  useEffect(() => {\n\n    if (data) {\n      const element = document.getElementById(\n        \"kt_stats_widget_1_chart\"\n      ) as HTMLCanvasElement;\n      if (!element) {\n        return;\n      }\n\n      // setTotal(files.count_total);\n      const options = getChartOptions(data);\n      const ctx = element.getContext(\"2d\");\n      let myDoughnut: Chart | null;\n      if (ctx) {\n        myDoughnut = new Chart(ctx, options);\n      }\n      return function cleanUp() {\n        if (myDoughnut) {\n          myDoughnut.destroy();\n        }\n      };\n    }\n\n  }, [data]);\n\n  if (loading) {\n    return (\n      <div className={`card ${className}`}>\n        {/* begin::Header */}\n        <div\n          className={`card-header align-items-center border-0 mt-5 ${innerPadding}`}\n        >\n          <h3 className=\"card-title align-items-start flex-column\">\n            <span className=\"fw-bolder text-dark fs-3\">Biblioteca</span>\n            <span className=\"text-muted mt-2 fw-bold fs-6\">{'Cargando Archivos'}</span>\n          </h3>\n          <div className=\"card-toolbar\">\n            {/* begin::Dropdown \n            <button\n              type=\"button\"\n              className=\"btn btn-sm btn-icon btn-color-primary btn-active-light-primary\"\n              data-kt-menu-trigger=\"click\"\n              data-kt-menu-placement=\"bottom-end\"\n              data-kt-menu-flip=\"top-end\"\n            >\n              <KTSVG\n                path=\"/media/icons/duotone/Layout/Layout-4-blocks-2.svg\"\n                className=\"svg-icon-1\"\n              />\n            </button>\n            <Dropdown1 />\n            */}\n            {/* end::Dropdown */}\n          </div>\n        </div>\n        {/* end::Header */}\n\n        {/* begin::Body */}\n        <div className=\"card-body pt-12\">\n          {/* begin::Chart */}\n          <div\n            className=\"d-flex flex-center position-relative bgi-no-repeat bgi-size-contain bgi-position-x-center bgi-position-y-center h-175px\"\n            style={{\n              backgroundImage: `url('${toAbsoluteUrl(\n                \"/media/svg/illustrations/bg-1.svg\"\n              )}')`,\n            }}\n          >\n            <div className=\"fw-bolder fs-1 text-gray-800 position-absolute\">\n              {'Loading ...'}\n            </div>\n            <canvas id=\"kt_stats_widget_1_chart\"></canvas>\n          </div>\n          {/* end::Chart */}\n\n          {/* begin::Items */}\n          <div className=\"d-flex justify-content-around pt-18\">\n            {/* begin::Item */}\n            <div className=\"\">\n              <span className=\"fw-bolder text-gray-800\">{'Loading ...'}</span>\n              <span className=\"w-25px h-5px d-block rounded mt-1\" style={{ backgroundColor: colorPDF }}></span>\n            </div>\n            {/* end::Item */}\n\n            {/* begin::Item */}\n            <div className=\"\">\n              <span className=\"fw-bolder text-gray-800\">{'Loading ...'}</span>\n              <span className=\"w-25px h-5px d-block rounded mt-1\" style={{ backgroundColor: colorCSV }}></span>\n            </div>\n            {/* end::Item */}\n\n            {/* begin::Item */}\n            <div className=\"\">\n              <span className=\"fw-bolder text-gray-800\">{'Loading ...'}</span>\n              <span className=\"w-25px h-5px d-block rounded mt-1\" style={{ backgroundColor: colorXLS }}></span>\n            </div>\n            {/* end::Item */}\n          </div>\n          {/* end::Items */}\n\n          {/* begin::Items */}\n          <div className=\"d-flex justify-content-around pt-18\">\n            {/* begin::Item */}\n            <div className=\"\">\n              <span className=\"fw-bolder text-gray-800\">{'Loading ...'}</span>\n              <span className=\"w-25px h-5px d-block rounded mt-1\" style={{ backgroundColor: colorODS }}></span>\n            </div>\n            {/* end::Item */}\n\n            {/* begin::Item */}\n            <div className=\"\">\n              <span className=\"fw-bolder text-gray-800\">{'Loading ...'}</span>\n              <span className=\"w-25px h-5px d-block rounded mt-1\" style={{ backgroundColor: colorOTHER }}></span>\n            </div>\n            {/* end::Item */}\n\n            {/* begin::Item */}\n            <div className=\"\">\n              <span className=\"fw-bolder text-gray-800\">{'Loading ...'}</span>\n              <span className=\"w-25px h-5px d-block rounded mt-1\" style={{ backgroundColor: colorUNDEFINED }}></span>\n            </div>\n            {/* end::Item */}\n\n            {/* begin::Item\n            <div className=\"\">\n              <span className=\"fw-bolder text-gray-800\">32% SAP</span>\n              <span className=\"bg-warning w-25px h-5px d-block rounded mt-1\"></span>\n            </div>\n            */}\n            {/* end::Item */}\n          </div>\n          {/* end::Items */}\n\n        </div>\n        {/* end: Card Body */}\n      </div>\n    )\n  }\n\n  let formats = data.alexandriasConnection.groupBy.type;\n  let total = data.alexandriasConnection.groupBy.type[0].connection.aggregate.totalCount;\n\n  let count_pdf = formats.filter((c: any) => c.key === 'pdf')[0].connection.aggregate.count;\n  let count_csv = formats.filter((c: any) => c.key === 'csv')[0].connection.aggregate.count;\n  let count_xls = formats.filter((c: any) => c.key === 'xlsx')[0].connection.aggregate.count;\n  let count_ods = formats.filter((c: any) => c.key === 'ods')[0].connection.aggregate.count;\n  let count_others = formats.filter((c: any) => c.key === 'other')[0].connection.aggregate.count;\n\n  let count_undefined = total - (count_pdf + count_csv + count_xls + count_ods + count_others);\n\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div\n        className={`card-header align-items-center border-0 mt-5 ${innerPadding}`}\n      >\n        <h3 className=\"card-title align-items-start flex-column\">\n          <span className=\"fw-bolder text-dark fs-3\">Biblioteca</span>\n          <span className=\"text-muted mt-2 fw-bold fs-6\">{total} Archivos</span>\n        </h3>\n        <div className=\"card-toolbar\">\n          {/* begin::Dropdown \n          <button\n            type=\"button\"\n            className=\"btn btn-sm btn-icon btn-color-primary btn-active-light-primary\"\n            data-kt-menu-trigger=\"click\"\n            data-kt-menu-placement=\"bottom-end\"\n            data-kt-menu-flip=\"top-end\"\n          >\n            <KTSVG\n              path=\"/media/icons/duotone/Layout/Layout-4-blocks-2.svg\"\n              className=\"svg-icon-1\"\n            />\n          </button>\n          <Dropdown1 />\n          */}\n          {/* end::Dropdown */}\n        </div>\n      </div>\n      {/* end::Header */}\n\n      {/* begin::Body */}\n      <div className=\"card-body pt-12\">\n        {/* begin::Chart */}\n        <div\n          className=\"d-flex flex-center position-relative bgi-no-repeat bgi-size-contain bgi-position-x-center bgi-position-y-center h-175px\"\n          style={{\n            backgroundImage: `url('${toAbsoluteUrl(\n              \"/media/svg/illustrations/bg-1.svg\"\n            )}')`,\n          }}\n        >\n          <div className=\"fw-bolder fs-1 text-gray-800 position-absolute\" style={{ zIndex: '0' }}>\n            {total}\n          </div>\n          <canvas id=\"kt_stats_widget_1_chart\"></canvas>\n        </div>\n        {/* end::Chart */}\n\n        {/* begin::Items */}\n        <div className=\"d-flex flex-wrap justify-content-around pt-18\">\n          {\n            formats.map((format: any) => {\n              const totalFormat = format.connection.aggregate.count;\n              let label;\n              let backColor;\n\n              console.log(format);\n\n              switch (format.key) {\n                case 'pdf':\n                  label = 'PDF';\n                  backColor = colorPDF;\n                  break;\n                case 'csv':\n                  label = 'CSV';\n                  backColor = colorCSV;\n                  break;\n                case 'xlsx':\n                  label = 'XLS';\n                  backColor = colorXLS;\n                  break;\n                case 'ods':\n                  label = 'ODS';\n                  backColor = colorODS;\n                  break;\n                case 'other':\n                case '':\n                  label = 'Others';\n                  backColor = colorOTHER;\n                  break;\n              }\n\n              return (\n                <div className=\"\" key={`formats_${label}`} style={{ width: '50%', alignItems: 'center', display: 'flex', marginBottom: '10px' }}>\n                  <span className=\"fw-bolder text-gray-800\" style={{ marginRight: '15px' }}>{((totalFormat / total) * 100).toFixed(2)}% {label}</span>\n                  <span className=\"w-25px h-5px d-block rounded mt-1\" style={{ backgroundColor: backColor }}></span>\n                </div>\n              )\n            })\n          }\n\n          <div className=\"\" key={`formats_undefined`} style={{ width: '50%', alignItems: 'center', display: 'flex', marginBottom: '10px' }}>\n            <span className=\"fw-bolder text-gray-800\" style={{ marginRight: '15px' }}>{((count_undefined / total) * 100).toFixed(2)}% {'N/A'}</span>\n            <span className=\"w-25px h-5px d-block rounded mt-1\" style={{ backgroundColor: colorUNDEFINED }}></span>\n          </div>\n\n        </div>\n        {/* end::Items */}\n\n      </div>\n      {/* end: Card Body */}\n    </div>\n  );\n};\n\nexport { StatsWidget1 };\n\nfunction getChartOptions(data: any) {\n  const tooltipBgColor = getCSSVariableValue(\"--bs-gray-200\");\n  const tooltipColor = getCSSVariableValue(\"--bs-gray-800\");\n\n  let counter: any = [];\n  data.alexandriasConnection.groupBy.type.map((t: any) => {\n    counter.push(t);\n  })\n\n  let count_pdf = counter.filter((c: any) => c.key === 'pdf')[0].connection.aggregate.count;\n  let count_csv = counter.filter((c: any) => c.key === 'csv')[0].connection.aggregate.count;\n  let count_xls = counter.filter((c: any) => c.key === 'xlsx')[0].connection.aggregate.count;\n  let count_ods = counter.filter((c: any) => c.key === 'ods')[0].connection.aggregate.count;\n  let count_others = counter.filter((c: any) => c.key === 'other')[0].connection.aggregate.count;\n  let count_total = counter.filter((c: any) => c.key === 'other')[0].connection.aggregate.totalCount;\n\n  let count_undefined = count_total - (count_pdf + count_csv + count_xls + count_ods + count_others);\n\n  const options: ChartConfiguration = {\n    type: \"doughnut\",\n    data: {\n      datasets: [\n        {\n          data: [count_pdf, count_csv, count_xls, count_ods, count_others, count_undefined],\n          backgroundColor: [colorPDF, colorCSV, colorXLS, colorODS, colorOTHER, colorUNDEFINED],\n        },\n      ],\n      labels: [\"PDF\", \"CSV\", \"XLS\", \"ODS\", \"Others\", \"N/A\"],\n    },\n    options: {\n      cutoutPercentage: 75,\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n        position: \"top\",\n      },\n      title: {\n        display: false,\n        text: \"Technology\",\n      },\n      animation: {\n        animateScale: true,\n        animateRotate: true,\n      },\n      tooltips: {\n        enabled: true,\n        intersect: false,\n        mode: \"nearest\",\n        bodySpacing: 5,\n        yPadding: 10,\n        xPadding: 10,\n        caretPadding: 0,\n        displayColors: false,\n        backgroundColor: tooltipBgColor,\n        bodyFontColor: tooltipColor,\n        cornerRadius: 4,\n        footerSpacing: 0,\n        titleSpacing: 0,\n      },\n    },\n  };\n  return options;\n}\n\n// function randomScalingFactor() {\n//   return Math.round(Math.random() * 100);\n// }\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/engage/EngageWidget3.tsx",["1021","1022"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { toAbsoluteUrl } from \"../../../helpers\";\nimport moment from 'moment';\n\n\ntype Props = {\n  className: string;\n  imagePath?: string;\n  data: any;\n  innerPadding?: string;\n  color?: string;\n};\n\nconst EngageWidget3: React.FC<Props> = ({\n  className,\n  imagePath = \"\",\n  data,\n  innerPadding = \"\",\n  color = \"primary\",\n}) => {\n\n  console.log(data);\n\n  /* TODO: remove after fixing issues with data */\n  if (data.data) {\n    data = data.data\n  }\n\n  const entity = data.entity;\n  const type = data.type;\n\n  let countTotal;\n  let countSrc;\n  let title;\n  let desc;\n  let entityCount;\n  let records;\n  let lastRecord;\n  let url;\n  let connection;\n\n  title = '';\n\n  switch (entity) {\n    case 'src':\n      title = type === 'single' ? 'Fuentes' : 'Fuentes';\n      desc = type === 'single' ? data.source.description : 'Aenean dignissim mi vitae mi sodales posuere. Curabitur sagittis lacus eget lacinia pretium. Vestibulum semper tristique mauris sit amet pretium. Maecenas volutpat malesuada metus. Donec feugiat tincidunt blandit. Sed maximus feugiat lectus.';\n      connection = data?.alexandriasConnection?.groupBy?.id || data?.alexandriasConnection?.groupBy?.source;\n      let srcConn = data.sourcesConnection.groupBy.id;\n      // console.log(data);\n      if (connection.length > 0) {\n        countTotal = connection.length;\n        countSrc = type === 'single' ? srcConn[0].connection.aggregate.count : srcConn[0].connection.aggregate.totalCount;\n        // console.log(countTotal);\n        entityCount = connection.length;\n      } else {\n        countTotal = 0;\n        entityCount = 0;\n        countSrc = srcConn[0].connection.aggregate.totalCount;\n      }\n      records = type === 'single' ? data.source : data.sources;\n      lastRecord = type === 'single' ? records : records[0];\n      url = type === 'single' ? records.url || records.website : '';\n      break;\n    case 'dep':\n      title = type === 'single' ? 'Ministerios o instituciónes' : 'Ministerios o instituciónes';\n      desc = type === 'single' ? data.department.desciption : 'Aenean dignissim mi vitae mi sodales posuere. Curabitur sagittis lacus eget lacinia pretium. Vestibulum semper tristique mauris sit amet pretium. Maecenas volutpat malesuada metus. Donec feugiat tincidunt blandit. Sed maximus feugiat lectus.';\n      connection = data?.alexandriasConnection?.groupBy?.id || data?.alexandriasConnection?.groupBy?.department;\n      let depConn = data.departmentsConnection.groupBy.id;\n      // console.log(depConn);\n      if (connection.length > 0) {\n        countTotal = connection.length;\n        countSrc = type === 'single' ? depConn[0].connection.aggregate.count : depConn[0].connection.aggregate.totalCount;\n        entityCount = connection.length;\n      } else {\n        countTotal = 0;\n        entityCount = 0;\n        countSrc = depConn[0].connection.aggregate.totalCount;\n      }\n      records = type === 'single' ? data.department : data.departments;\n      lastRecord = type === 'single' ? records : records[0];\n      url = type === 'single' ? records.url || records.website : '';\n      break;\n    case 'cat':\n      title = type === 'single' ? 'Categorias' : 'Categorias';\n      desc = type === 'single' ? data.category.description : 'Aenean dignissim mi vitae mi sodales posuere. Curabitur sagittis lacus eget lacinia pretium. Vestibulum semper tristique mauris sit amet pretium. Maecenas volutpat malesuada metus. Donec feugiat tincidunt blandit. Sed maximus feugiat lectus.';\n      connection = data?.alexandriasConnection?.groupBy?.id || data?.alexandriasConnection?.groupBy?.department;\n      let catConn = data.categoriesConnection.groupBy.id;\n      console.log(data);\n      if (connection.length > 0) {\n        countTotal = connection.length;\n        countSrc = type === 'single' ? catConn[0].connection.aggregate.count : catConn[0].connection.aggregate.totalCount;\n\n        entityCount = connection.length;\n      } else {\n        countTotal = 0;\n        entityCount = 0;\n        countSrc = type === 'single' ? catConn[0].connection.aggregate.count : catConn[0].connection.aggregate.totalCount;\n      }\n      records = type === 'single' ? data.category : data.categories;\n      lastRecord = type === 'single' ? records : records[0];\n      url = type === 'single' ? records.url || records.website : '';\n      break;\n  }\n\n  return (\n    <div className={`card card-custom ${className}`} style={{ overflow: 'hidden' }}>\n      {/* begin::Card Body */}\n      <div\n        className={`justify-content-end card-body d-flex p-12 flex-column flex-md-row flex-lg-column flex-xxl-row bg-${color}`}\n      >\n        {/*begin::Image*/}\n        <div\n          className=\"bgi-no-repeat bgi-position-left bgi-size-cover h-300px h-md-auto h-lg-400px mw-100 w-650px\"\n          style={{\n            backgroundImage: `url('${toAbsoluteUrl(\"/media/products/12.png\")}'`,\n            position: 'absolute',\n            left: 0,\n            bottom: 0\n          }}\n        ></div>\n        {/*end::Image*/}\n\n        {/*begin::Card*/}\n        <div className=\"card shadow-none w-auto w-md-400px w-lg-auto w-xxl-400px ml-auto\" style={{ overflow: 'hidden' }}>\n          {/*begin::Card Body*/}\n          <div className=\"card-body bg-light px-12 py-10 card card-custom\">\n            <div className=\"card-header\">\n              <h3 className=\"fw-bolder fs-1 card-toolbar\">\n                <div className=\"text-muted fw-bold fs-6 d-flex align-items-center\">\n                  <span className=\"badge-container\">\n                    <span className=\"badge badge-circle background-xls\"></span>\n                  </span>\n                  {'Online'}\n                </div>\n              </h3>\n              <div className=\"card-toolbar\">\n                {/**\n                 * <button type=\"button\" className=\"btn btn-sm btn-light\">\n                  Action\n                </button>\n                 */}\n              </div>\n            </div>\n            <div className=\"card-body card-scroll h-200px\">\n              {desc}\n            </div>\n            <div className=\"card-footer\">\n              {/*begin::Info*/}\n              <table className=\"table table-borderless align-middle fw-bold\">\n                {\n                  type === 'collection' &&\n                  <tbody>\n                    <tr>\n                      <td className=\"text-gray-600 ps-0\">Archivos</td>\n                      <td className=\"text-dark pe-0\">{countTotal}</td>\n                    </tr>\n                    <tr>\n                      <td className=\"text-gray-600 ps-0\">{title}</td>\n                      <td className=\"text-dark pe-0\">{countSrc}</td>\n                    </tr>\n                    <tr>\n                      <td className=\"text-gray-600 ps-0\">Ultimo Archivo</td>\n                      <td className=\"text-dark pe-0\">{moment(lastRecord.updatedAt).format('DD/MM/YYYY')}</td>\n                    </tr>\n                  </tbody>\n                }\n\n                {\n                  type === 'single' &&\n                  <tbody>\n                    <tr>\n                      <td className=\"text-gray-600 ps-0\">Archivos</td>\n                      <td className=\"text-dark pe-0\">{countTotal}</td>\n                    </tr>\n                    {\n                      entity !== 'cat' &&\n                      <tr>\n                        <td className=\"text-gray-600 ps-0\">URL</td>\n                        <td className=\"text-dark pe-0\">\n                          <a href={url} target={'_blank'}>\n                            {url}\n                          </a>\n                        </td>\n                      </tr>\n                    }\n                    <tr>\n                      <td className=\"text-gray-600 ps-0\">Ultimo Archivo</td>\n                      <td className=\"text-dark pe-0\">{moment(lastRecord.updatedAt).format('DD/MM/YYYY')}</td>\n                    </tr>\n                  </tbody>\n                }\n              </table>\n              {/*end::Info*/}\n            </div>\n          </div>\n          {/*end::Card Body*/}\n        </div>\n        {/*end::Card*/}\n      </div>\n      {/*end::Card Body*/}\n    </div>\n  );\n};\n\nexport { EngageWidget3 };\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/engage/EngageWidget5.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/engage/EngageWidget2.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getCSSVariableValue.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/engage/EngageWidget1.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/lists/ListsWidget4.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/lists/ListsWidget5.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/lists/ListsWidget2.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/lists/ListsWidget1.tsx",["1023","1024","1025"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { KTSVG } from \"../../../helpers\";\nimport { Dropdown1 } from \"../../content/dropdown/Dropdown1\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\ntype Props = {\n  className: string;\n  imports: any;\n  importsCount: number;\n  loadingArchive: boolean;\n};\n\nconst ListsWidget1: React.FC<Props> = ({ className }) => {\n\n  const IMPORTS_QUERY = gql`\n  query Imports {\n    imports(\n      limit: 5, \n      sort: \"updatedAt:desc\" \n      where: { \n        \n      }\n    ) {\n      id,\n      updatedAt,\n      source,\n      documents,\n      wallet,\n      status,\n      alexandrias{\n        cid,\n        type\n      }\n    }\n  }\n  `;\n\n  var { data, loading, error } = useQuery(IMPORTS_QUERY, {\n    variables: {}\n  });\n\n  const IMPORTS_QUERY_ALL = gql`\n  query ImportsCount {\n    importsConnection {\n      groupBy {\n        type{\n          key,\n          connection{\n            aggregate{\n              count,\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  var { data: dataCount, loading: loadingCount, error } = useQuery(IMPORTS_QUERY_ALL, {\n    variables: {}\n  });\n\n  if (loading || loadingCount) {\n    return (\n      <div className={`card ${className}`}>\n        {/* begin::Header */}\n        <div className=\"card-header align-items-center border-0 mt-5\">\n          <h3 className=\"card-title align-items-start flex-column\">\n            <span className=\"fw-bolder text-dark fs-3\">Timeline</span>\n            <span className=\"text-muted mt-2 fw-bold fs-6\">\n              Loading ...\n            </span>\n          </h3>\n          <div className=\"card-toolbar\">\n            {/* begin::Dropdown */}\n            <button\n              type=\"button\"\n              className=\"btn btn-sm btn-icon btn-color-primary btn-active-light-primary\"\n              data-kt-menu-trigger=\"click\"\n              data-kt-menu-placement=\"bottom-end\"\n              data-kt-menu-flip=\"top-end\"\n            >\n              <KTSVG\n                path=\"/media/icons/duotone/Layout/Layout-4-blocks-2.svg\"\n                className=\"svg-icon-1\"\n              />\n            </button>\n            <Dropdown1 />\n            {/* end::Dropdown */}\n          </div>\n        </div>\n        {/* end::Header */}\n\n        {/* begin::Body */}\n        <div className=\"card-body pt-3\">\n          {/* <begin::Timeline */}\n          <div className=\"timeline-label\">\n            {/* begin::Item */}\n            <div className=\"timeline-item\">\n              {/* begin::Label */}\n              <div className=\"timeline-label fw-bolder text-gray-800 fs-6\">\n                00:00\n              </div>\n              {/* end::Label */}\n\n              {/* begin::Badge */}\n              <div className=\"timeline-badge\">\n                <i className=\"fa fa-genderless text-success fs-1\"></i>\n              </div>\n              {/* end::Badge */}\n\n              {/* begin::Content */}\n              <div className=\"timeline-content d-flex\">\n                <span className=\"fw-bolder text-gray-800 ps-3\">Loading ...</span>\n              </div>\n              {/* end::Content */}\n            </div>\n            {/* end::Item */}\n\n          </div>\n          {/* <end::Timeline */}\n        </div>\n\n        {/* <end: Card Body */}\n      </div>\n    );\n  }\n\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className=\"card-header align-items-center border-0 mt-5\">\n        <h3 className=\"card-title align-items-start flex-column\">\n          <span className=\"fw-bolder text-dark fs-3\">Timeline</span>\n          <span className=\"text-muted mt-2 fw-bold fs-6\">\n            {dataCount.importsConnection.groupBy.type[0].connection.aggregate.totalCount} Importaciónes\n          </span>\n        </h3>\n        <div className=\"card-toolbar\">\n          {/* begin::Dropdown \n          <button\n            type=\"button\"\n            className=\"btn btn-sm btn-icon btn-color-primary btn-active-light-primary\"\n            data-kt-menu-trigger=\"click\"\n            data-kt-menu-placement=\"bottom-end\"\n            data-kt-menu-flip=\"top-end\"\n          >\n            <KTSVG\n              path=\"/media/icons/duotone/Layout/Layout-4-blocks-2.svg\"\n              className=\"svg-icon-1\"\n            />\n          </button>\n          <Dropdown1 />\n          */}\n          {/* end::Dropdown */}\n        </div>\n      </div>\n      {/* end::Header */}\n\n      {/* begin::Body */}\n      <div className=\"card-body pt-3\">\n        {/* <begin::Timeline */}\n        <div className=\"timeline-label\">\n\n          {\n            data.imports.map(function (item: any) {\n\n              let docs = item.alexandrias.length;\n              let time = new Date(item.updatedAt);\n              let message;\n              let badge_color;\n              switch (item.status) {\n                case 'in_progress':\n                  message = `importando ${docs} documentos desde `;\n                  badge_color = `text-warning`;\n                  break;\n                case 'done':\n                  message = `${docs} documentos importados desde `;\n                  badge_color = `color-xls`;\n                  break;\n                default:\n                  break;\n              }\n\n              return (\n                <div className=\"timeline-item\" key={`import_${item.id}}`}>\n                  {/* begin::Label */}\n                  <div className=\"timeline-label fw-bolder text-gray-800 fs-6\">\n                    {time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                  </div>\n                  {/* end::Label */}\n\n                  {/* begin::Badge */}\n                  <div className=\"timeline-badge\">\n                    <i className={`fa fa-genderless ${badge_color} fs-1`}></i>\n                  </div>\n                  {/* end::Badge */}\n\n                  {/* begin::Content */}\n                  <div className=\"timeline-content d-flex\">\n                    <span className=\"fw-bolder text-gray-800 ps-3\">{`${message}`}<a href={`${item.source}`} target=\"_blank\">source</a></span>\n                  </div>\n                  {/* end::Content */}\n                </div>\n              );\n            })\n          }\n\n        </div>\n        {/* <end::Timeline */}\n      </div>\n\n      {/* <end: Card Body */}\n    </div>\n  );\n};\n\nexport { ListsWidget1 };\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget2.tsx",["1026","1027"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect } from \"react\";\nimport { toAbsoluteUrl } from \"../../../helpers\";\nimport { KTSVG } from \"../../../helpers\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\ntype Props = {\n  className: string;\n  innerPadding?: string;\n};\n\nconst TablesWidget2: React.FC<Props> = ({ className, innerPadding = \"\" }) => {\n\n  /*\n  TODO: change query to GraphQL\n  */\n  const WALLETS_QUERY = gql`\n  query AlexandriasGroupBy {\n    alexandriasConnection {\n      groupBy {\n        wallet_address {\n          key,\n          connection{\n            aggregate{\n              count,\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  const { data, loading, error } = useQuery(WALLETS_QUERY, {\n    variables: { slug: '' }\n  });\n\n  if (loading) return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className={`card-header border-0 pt-5 ${innerPadding}`}>\n        <h3 className=\"card-title align-items-start flex-column\">\n          <span className=\"card-label fw-bolder text-dark fs-3\">\n            Achievements\n          </span>\n          <span className=\"text-muted mt-2 fw-bold fs-6\">Loading ...</span>\n        </h3>\n        <div className=\"card-toolbar\">\n          <ul className=\"nav nav-pills nav-pills-sm nav-light\">\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link btn btn-active-light btn-color-muted py-2 px-4 fw-bolder me-2 active\"\n                data-bs-toggle=\"tab\"\n                href=\"#kt_tab_pane_2_1\"\n              >\n                All\n              </a>\n            </li>\n            {/*\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link btn btn-active-light btn-color-muted py-2 px-4 fw-bolder me-2\"\n                  data-bs-toggle=\"tab\"\n                  href=\"#kt_tab_pane_2_2\"\n                >\n                  Week\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link btn btn-active-light btn-color-muted py-2 px-4 fw-bolder\"\n                  data-bs-toggle=\"tab\"\n                  href=\"#kt_tab_pane_2_3\"\n                >\n                  Month\n                </a>\n              </li>\n            */}\n          </ul>\n        </div>\n      </div>\n      {/* end::Header */}\n\n      {/* begin::Body */}\n      <div className=\"card-body pt-3 pb-0 mt-n3\">\n        <div className=\"tab-content mt-4\" id=\"myTabTables2\">\n          {/* begin::Tap pane */}\n          <div\n            id=\"kt_tab_pane_2_1\"\n            role=\"tabpanel\"\n            aria-labelledby=\"kt_tab_pane_2_1\"\n            className=\"tab-pane fade active show\"\n          >\n            {/* begin::Table */}\n            <div className=\"table-responsive\">\n              <table className=\"table table-borderless align-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"p-0 w-50px\"></th>\n                    <th className=\"p-0 min-w-150px\"></th>\n                    <th className=\"p-0 min-w-120px\"></th>\n                    <th className=\"p-0 min-w-70px\"></th>\n                    <th className=\"p-0 min-w-70px\"></th>\n                    <th className=\"p-0 min-w-50px\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td className=\"px-0 py-3\">\n                      <div className=\"symbol symbol-55px mt-1 me-5\">\n                        <span className=\"symbol-label bg-light-primary align-items-end\">\n                          <img\n                            alt=\"Logo\"\n                            src={toAbsoluteUrl(\n                              \"/media/svg/avatars/001-boy.svg\"\n                            )}\n                            className=\"mh-40px\"\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td className=\"px-0\">\n                      <a className=\"text-gray-800 fw-bolder text-hover-primary fs-6\">\n                        Loading ...\n                      </a>\n                      <span className=\"text-muted fw-bold d-block mt-1\">\n                        Loading ...\n                      </span>\n                    </td>\n                    <td></td>\n                    <td className=\"text-end\">\n                      <span className=\"text-gray-800 fw-bolder d-block fs-6\">\n                        0\n                      </span>\n                      <span className=\"text-muted fw-bold d-block mt-1 fs-7\">\n                        Archivos\n                      </span>\n                    </td>\n                    <td className=\"text-end\">\n                      <span className=\"fw-bolder text-primary\">+0%</span>\n                    </td>\n                    <td className=\"text-end pe-0\">\n                      <a className=\"btn btn-icon btn-bg-light btn-active-color-primary btn-sm\">\n                        <KTSVG\n                          className=\"svg-icon-4\"\n                          path=\"/media/icons/duotone/Navigation/Arrow-right.svg\"\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            {/* end::Table */}\n          </div>\n          {/* end::Tap pane */}\n        </div>\n      </div>\n      {/* end::Body */}\n    </div>\n  );\n  // if (error) return JSON.stringify(error);\n\n  const walletsInfo = data.alexandriasConnection.groupBy.wallet_address;\n\n  // before rendering, order by n aletheias\n  if (walletsInfo) {\n    walletsInfo.sort((a: any, b: any) => (a.connection.aggregate.count > b.connection.aggregate.count ? -1 : 1));\n  }\n\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className={`card-header border-0 pt-5 ${innerPadding}`}>\n        <h3 className=\"card-title align-items-start flex-column\">\n          <span className=\"card-label fw-bolder text-dark fs-3\">\n            Achievements\n          </span>\n          <span className=\"text-muted mt-2 fw-bold fs-6\">{walletsInfo.length} Usuarios</span>\n        </h3>\n        <div className=\"card-toolbar\">\n          <ul className=\"nav nav-pills nav-pills-sm nav-light\">\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link btn btn-active-light btn-color-muted py-2 px-4 fw-bolder me-2 active\"\n                data-bs-toggle=\"tab\"\n                href=\"#kt_tab_pane_2_1\"\n              >\n                All\n              </a>\n            </li>\n            {/*\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link btn btn-active-light btn-color-muted py-2 px-4 fw-bolder me-2\"\n                  data-bs-toggle=\"tab\"\n                  href=\"#kt_tab_pane_2_2\"\n                >\n                  Week\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link btn btn-active-light btn-color-muted py-2 px-4 fw-bolder\"\n                  data-bs-toggle=\"tab\"\n                  href=\"#kt_tab_pane_2_3\"\n                >\n                  Month\n                </a>\n              </li>\n            */}\n          </ul>\n        </div>\n      </div>\n      {/* end::Header */}\n\n      {/* begin::Body */}\n      <div className=\"card-body pt-3 pb-0 mt-n3\">\n        <div className=\"tab-content mt-4\" id=\"myTabTables2\">\n          {/* begin::Tap pane */}\n          <div\n            id=\"kt_tab_pane_2_1\"\n            role=\"tabpanel\"\n            aria-labelledby=\"kt_tab_pane_2_1\"\n            className=\"tab-pane fade active show\"\n          >\n            {/* begin::Table */}\n            <div className=\"table-responsive\">\n              <table className=\"table table-borderless align-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"p-0 w-50px\"></th>\n                    <th className=\"p-0 min-w-150px\"></th>\n                    <th className=\"p-0 min-w-120px\"></th>\n                    <th className=\"p-0 min-w-70px\"></th>\n                    <th className=\"p-0 min-w-70px\"></th>\n                    <th className=\"p-0 min-w-50px\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    walletsInfo.map((wallet: any) => {\n                      const count = wallet.connection.aggregate.count;\n                      return (\n                        <tr key={wallet.key}>\n                          <td className=\"px-0 py-3\">\n                            <div className=\"symbol symbol-55px mt-1 me-5\">\n                              <span className=\"symbol-label bg-light-primary align-items-end\">\n                                <img\n                                  alt=\"Logo\"\n                                  src={toAbsoluteUrl(\n                                    \"/media/svg/avatars/001-boy.svg\"\n                                  )}\n                                  className=\"mh-40px\"\n                                />\n                              </span>\n                            </div>\n                          </td>\n                          <td className=\"px-0\">\n                            <a className=\"text-gray-800 fw-bolder text-hover-primary fs-6\">\n                              {wallet.key}\n                            </a>\n                            <span className=\"text-muted fw-bold d-block mt-1\">\n                              -\n                            </span>\n                          </td>\n                          <td></td>\n                          <td className=\"text-end\">\n                            <span className=\"text-gray-800 fw-bolder d-block fs-6\">\n                              {count}\n                            </span>\n                            <span className=\"text-muted fw-bold d-block mt-1 fs-7\">\n                              Archivos\n                            </span>\n                          </td>\n                          <td className=\"text-end\">\n                            <span className=\"fw-bolder text-primary\">+0%</span>\n                          </td>\n                          <td className=\"text-end pe-0\">\n                            <a className=\"btn btn-icon btn-bg-light btn-active-color-primary btn-sm\">\n                              <KTSVG\n                                className=\"svg-icon-4\"\n                                path=\"/media/icons/duotone/Navigation/Arrow-right.svg\"\n                              />\n                            </a>\n                          </td>\n                        </tr>\n                      )\n                    })\n                  }\n                </tbody>\n              </table>\n            </div>\n            {/* end::Table */}\n          </div>\n          {/* end::Tap pane */}\n\n          {/* begin::Tap pane */}\n          <div\n            id=\"kt_tab_pane_2_2\"\n            role=\"tabpanel\"\n            aria-labelledby=\"kt_tab_pane_2_2\"\n            className=\"tab-pane fade\"\n          >\n            {/* begin::Table */}\n            <div className=\"table-responsive\">\n              <table className=\"table table-borderless align-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"p-0 w-50px\"></th>\n                    <th className=\"p-0 min-w-150px\"></th>\n                    <th className=\"p-0 min-w-120px\"></th>\n                    <th className=\"p-0 min-w-70px\"></th>\n                    <th className=\"p-0 min-w-70px\"></th>\n                    <th className=\"p-0 min-w-50px\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td className=\"px-0 py-3\">\n                      <div className=\"symbol symbol-55px mt-1 me-5\">\n                        <span className=\"symbol-label bg-light-primary align-items-end\">\n                          <img\n                            alt=\"Logo\"\n                            src={toAbsoluteUrl(\n                              \"/media/svg/avatars/001-boy.svg\"\n                            )}\n                            className=\"mh-40px\"\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td className=\"px-0\">\n                      <a className=\"text-gray-800 fw-bolder text-hover-primary fs-6\">\n                        0x54727a65CC4f71418A29A6f18E5be808Efe89856\n                      </a>\n                      <span className=\"text-muted fw-bold d-block mt-1\">\n                        Most Files Uploaded\n                      </span>\n                    </td>\n                    <td></td>\n                    <td className=\"text-end\">\n                      <span className=\"text-gray-800 fw-bolder d-block fs-6\">\n                        2,340\n                      </span>\n                      <span className=\"text-muted fw-bold d-block mt-1 fs-7\">\n                        Paid\n                      </span>\n                    </td>\n                    <td className=\"text-end\">\n                      <span className=\"fw-bolder text-primary\">+28%</span>\n                    </td>\n                    <td className=\"text-end pe-0\">\n                      <a className=\"btn btn-icon btn-bg-light btn-active-color-primary btn-sm\">\n                        <KTSVG\n                          className=\"svg-icon-4\"\n                          path=\"/media/icons/duotone/Navigation/Arrow-right.svg\"\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td className=\"px-0 py-3\">\n                      <div className=\"symbol symbol-55px mt-1\">\n                        <span className=\"symbol-label bg-light-danger align-items-end\">\n                          <img\n                            alt=\"Logo\"\n                            src={toAbsoluteUrl(\n                              \"/media/svg/avatars/018-girl-9.svg\"\n                            )}\n                            className=\"mh-40px\"\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td className=\"px-0\">\n                      <a className=\"text-gray-800 fw-bolder text-hover-primary fs-6\">\n                        0x54727a65CC4f71418A29A6f18E5be808Efe89856\n                      </a>\n                      <span className=\"text-muted fw-bold d-block mt-1\">\n                        Most CSV Uploaded\n                      </span>\n                    </td>\n                    <td></td>\n                    <td className=\"text-end\">\n                      <span className=\"text-gray-800 fw-bolder d-block fs-6\">\n                        534\n                      </span>\n                      <span className=\"text-muted fw-bold d-block mt-1 fs-7\">\n                        Archivos\n                      </span>\n                    </td>\n                    <td className=\"text-end\">\n                      <span className=\"fw-bolder text-danger\">-52%</span>\n                    </td>\n                    <td className=\"text-end pe-0\">\n                      <a className=\"btn btn-icon btn-bg-light btn-active-color-primary btn-sm\">\n                        <KTSVG\n                          className=\"svg-icon-4\"\n                          path=\"/media/icons/duotone/Navigation/Arrow-right.svg\"\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td className=\"px-0 py-3\">\n                      <div className=\"symbol symbol-55px mt-1\">\n                        <span className=\"symbol-label bg-light-warning align-items-end\">\n                          <img\n                            alt=\"Logo\"\n                            src={toAbsoluteUrl(\n                              \"/media/svg/avatars/047-girl-25.svg\"\n                            )}\n                            className=\"mh-40px\"\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td className=\"px-0\">\n                      <a className=\"text-gray-800 fw-bolder text-hover-primary fs-6\">\n                        0x54727a65CC4f71418A29A6f18E5be808Efe89856\n                      </a>\n                      <span className=\"text-muted fw-bold d-block mt-1\">\n                        Most CSV Uploaded\n                      </span>\n                    </td>\n                    <td></td>\n                    <td className=\"text-end\">\n                      <span className=\"text-gray-800 fw-bolder d-block fs-6\">\n                        134\n                      </span>\n                      <span className=\"text-muted fw-bold d-block mt-1 fs-7\">\n                        Archivo\n                      </span>\n                    </td>\n                    <td className=\"text-end\">\n                      <span className=\"fw-bolder text-warning\">+34%</span>\n                    </td>\n                    <td className=\"text-end pe-0\">\n                      <a className=\"btn btn-icon btn-bg-light btn-active-color-primary btn-sm\">\n                        <KTSVG\n                          className=\"svg-icon-4\"\n                          path=\"/media/icons/duotone/Navigation/Arrow-right.svg\"\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            {/* end::Table */}\n          </div>\n          {/* end::Tap pane */}\n\n          {/* begin::Tap pane */}\n          <div\n            id=\"kt_tab_pane_2_3\"\n            role=\"tabpanel\"\n            aria-labelledby=\"kt_tab_pane_2_3\"\n            className=\"tab-pane fade\"\n          >\n            {/* begin::Table */}\n            <div className=\"table-responsive\">\n              <table className=\"table table-borderless align-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"p-0 w-50px\"></th>\n                    <th className=\"p-0 min-w-150px\"></th>\n                    <th className=\"p-0 min-w-120px\"></th>\n                    <th className=\"p-0 min-w-70px\"></th>\n                    <th className=\"p-0 min-w-70px\"></th>\n                    <th className=\"p-0 min-w-50px\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td className=\"px-0 py-3\">\n                      <div className=\"symbol symbol-55px mt-1 me-5\">\n                        <span className=\"symbol-label bg-light-primary align-items-end\">\n                          <img\n                            alt=\"Logo\"\n                            src={toAbsoluteUrl(\n                              \"/media/svg/avatars/001-boy.svg\"\n                            )}\n                            className=\"mh-40px\"\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td className=\"px-0\">\n                      <a className=\"text-gray-800 fw-bolder text-hover-primary fs-6\">\n                        0x54727a65CC4f71418A29A6f18E5be808Efe89856\n                      </a>\n                      <span className=\"text-muted fw-bold d-block mt-1\">\n                        Most Files Uploaded\n                      </span>\n                    </td>\n                    <td></td>\n                    <td className=\"text-end\">\n                      <span className=\"text-gray-800 fw-bolder d-block fs-6\">\n                        2,340\n                      </span>\n                      <span className=\"text-muted fw-bold d-block mt-1 fs-7\">\n                        Paid\n                      </span>\n                    </td>\n                    <td className=\"text-end\">\n                      <span className=\"fw-bolder text-primary\">+28%</span>\n                    </td>\n                    <td className=\"text-end pe-0\">\n                      <a className=\"btn btn-icon btn-bg-light btn-active-color-primary btn-sm\">\n                        <KTSVG\n                          className=\"svg-icon-4\"\n                          path=\"/media/icons/duotone/Navigation/Arrow-right.svg\"\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td className=\"px-0 py-3\">\n                      <div className=\"symbol symbol-55px mt-1\">\n                        <span className=\"symbol-label bg-light-danger align-items-end\">\n                          <img\n                            alt=\"Logo\"\n                            src={toAbsoluteUrl(\n                              \"/media/svg/avatars/018-girl-9.svg\"\n                            )}\n                            className=\"mh-40px\"\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td className=\"px-0\">\n                      <a className=\"text-gray-800 fw-bolder text-hover-primary fs-6\">\n                        0x54727a65CC4f71418A29A6f18E5be808Efe89856\n                      </a>\n                      <span className=\"text-muted fw-bold d-block mt-1\">\n                        Most CSV Uploaded\n                      </span>\n                    </td>\n                    <td></td>\n                    <td className=\"text-end\">\n                      <span className=\"text-gray-800 fw-bolder d-block fs-6\">\n                        534\n                      </span>\n                      <span className=\"text-muted fw-bold d-block mt-1 fs-7\">\n                        Archivos\n                      </span>\n                    </td>\n                    <td className=\"text-end\">\n                      <span className=\"fw-bolder text-danger\">-52%</span>\n                    </td>\n                    <td className=\"text-end pe-0\">\n                      <a className=\"btn btn-icon btn-bg-light btn-active-color-primary btn-sm\">\n                        <KTSVG\n                          className=\"svg-icon-4\"\n                          path=\"/media/icons/duotone/Navigation/Arrow-right.svg\"\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td className=\"px-0 py-3\">\n                      <div className=\"symbol symbol-55px mt-1\">\n                        <span className=\"symbol-label bg-light-warning align-items-end\">\n                          <img\n                            alt=\"Logo\"\n                            src={toAbsoluteUrl(\n                              \"/media/svg/avatars/047-girl-25.svg\"\n                            )}\n                            className=\"mh-40px\"\n                          />\n                        </span>\n                      </div>\n                    </td>\n                    <td className=\"px-0\">\n                      <a className=\"text-gray-800 fw-bolder text-hover-primary fs-6\">\n                        0x54727a65CC4f71418A29A6f18E5be808Efe89856\n                      </a>\n                      <span className=\"text-muted fw-bold d-block mt-1\">\n                        Most CSV Uploaded\n                      </span>\n                    </td>\n                    <td></td>\n                    <td className=\"text-end\">\n                      <span className=\"text-gray-800 fw-bolder d-block fs-6\">\n                        134\n                      </span>\n                      <span className=\"text-muted fw-bold d-block mt-1 fs-7\">\n                        Archivo\n                      </span>\n                    </td>\n                    <td className=\"text-end\">\n                      <span className=\"fw-bolder text-warning\">+34%</span>\n                    </td>\n                    <td className=\"text-end pe-0\">\n                      <a className=\"btn btn-icon btn-bg-light btn-active-color-primary btn-sm\">\n                        <KTSVG\n                          className=\"svg-icon-4\"\n                          path=\"/media/icons/duotone/Navigation/Arrow-right.svg\"\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            {/* end::Table */}\n          </div>\n          {/* end::Tap pane */}\n        </div>\n      </div>\n      {/* end::Body */}\n    </div>\n  );\n};\n\nexport { TablesWidget2 };\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget1.tsx",["1028","1029","1030","1031"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { KTSVG } from \"../../../helpers\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap-v5\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Link } from \"react-router-dom\";\n\ntype Props = {\n  className: string;\n  innerPadding?: string;\n};\n\n// TODO: move to global\nconst colorPDF = '#FFE6E2';\nconst colorCSV = '#FFF8DD';\nconst colorXLS = '#E4FFF4';\nconst colorOTHER = '#E7F6FF';\n\nconst TablesWidget1: React.FC<Props> = ({ className, innerPadding = \"\" }) => {\n\n  const TYPE_QUERY = gql`\n  query AlexandriasGroupByType {\n    alexandriasConnection (\n    sort: \"desc\" \n    where: {\n      status: \"under_review\"\n    }) {\n      groupBy {\n        type{\n          key,\n          connection{\n            aggregate{\n              count,\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  var { data, loading, error } = useQuery(TYPE_QUERY, {\n    variables: {}\n  });\n\n  let formats;\n  if (data) {\n    formats = data.alexandriasConnection.groupBy.type;\n  }\n\n  const TYPE_QUERY_ALL = gql`\n  query AlexandriasGroupByType {\n    alexandriasConnection{\n      groupBy {\n        type{\n          key,\n          connection{\n            aggregate{\n              count,\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  var { data: DataAll, loading: LoadingAll, error } = useQuery(TYPE_QUERY_ALL, {\n    variables: {}\n  });\n\n  let formats_totals: any;\n  if (DataAll) {\n    formats_totals = DataAll.alexandriasConnection.groupBy.type;\n  }\n\n  if (loading || LoadingAll) {\n    return (\n      <div className={`card ${className}`}>\n        {/* <!--begin::Header--> */}\n        <div className={`card-header border-0 pt-5 ${innerPadding}`}>\n          <h3 className=\"card-title align-items-start flex-column\">\n            <span className=\"card-label fw-bolder text-dark fs-3\">\n              Archivos Depositados\n            </span>\n            <span className=\"text-muted mt-2 fw-bold fs-6\">{'Cargando Archivos'}</span>\n          </h3>\n          <div className=\"card-toolbar\">\n            <ul className=\"nav nav-pills nav-pills-sm nav-light\">\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link btn btn-active-light btn-color-muted py-2 px-4 fw-bolder me-2 active\"\n                  data-bs-toggle=\"tab\"\n                  href=\"#kt_tab_pane_1_1\"\n                >\n                  Day\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        {/* <!--end::Header--> */}\n\n        {/* <!--begin::Body--> */}\n        <div className=\"card-body pt-2 pb-0 mt-n3\">\n          <div className=\"tab-content mt-5\" id=\"myTabTables1\">\n            {/* <!--begin::Tap pane--> */}\n            <div\n              className=\"tab-pane fade active show\"\n              id=\"kt_tab_pane_1_1\"\n              role=\"tabpanel\"\n              aria-labelledby=\"kt_tab_pane_1_1\"\n            >\n              {/* <!--begin::Table--> */}\n              <div className=\"table-responsive\">\n                <table className=\"table table-borderless align-middle\">\n                  <thead>\n                    <tr>\n                      <th className=\"p-0 w-50px\"></th>\n                      <th className=\"p-0 min-w-200px\"></th>\n                      <th className=\"p-0 min-w-100px\"></th>\n                      <th className=\"p-0 min-w-40px\"></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th className=\"px-0 py-3\">\n                        <div className=\"symbol symbol-65px me-5\">\n                          <span className=\"symbol-label\" style={{ backgroundColor: colorPDF }}>\n                            <img\n                              src=\"/media/icons/aletheia/Formats/pdf.svg\"\n                              className=\"svg-icon-1 svg-icon-danger\"\n                              alt={`pdf`}\n                            />\n                          </span>\n                        </div>\n                      </th>\n                      <td className=\"ps-0\">\n                        <a className=\"text-gray-800 fw-bolder text-hover-primary fs-6\">\n                          Loading ...\n                        </a>\n                        <span className=\"text-muted fw-bold d-block mt-1\">\n                          Loading ...\n                        </span>\n                      </td>\n                      <td>\n                        <div className=\"d-flex flex-column w-100 me-3\">\n                          <div className=\"d-flex align-items-center justify-content-between mb-2\">\n                            <span className=\"text-dark me-2 fs-6 fw-bolder\">\n                              Loading ...\n                            </span>\n                          </div>\n                          <div className=\"d-flex align-items-center\">\n                            <div className=\"progress h-6px  w-100 bg-light-danger\">\n                              <div\n                                className=\"progress-bar bg-danger\"\n                                role=\"progressbar\"\n                                style={{ width: \"0%\" }}\n                                aria-valuenow={50}\n                                aria-valuemin={0}\n                                aria-valuemax={100}\n                              />\n                            </div>\n                            <span className=\"text-muted fs-7 fw-bold ps-3\">\n                              0%\n                            </span>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"text-end pe-0\">\n                        <a className=\"btn btn-icon btn-bg-light btn-active-color-primary btn-sm\">\n                          <KTSVG\n                            path=\"/media/icons/duotone/Navigation/Arrow-right.svg\"\n                            className=\"svg-icon-4\"\n                          />\n                        </a>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              {/* <!--end::Table--> */}\n            </div>\n            {/* <!--end::Tap pane--> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const getPercentage = (value: number, total: number) => {\n    // under_review : x = total : 100\n    // under_review * 100 / total\n    const percOnRev = (value * 100) / total;\n    const perc = 100 - percOnRev;\n    return `${perc.toFixed(0)}%`\n  }\n\n  // order by\n  formats.map((f: any) => {\n    switch (f.key) {\n      case 'pdf':\n        f.id = 1;\n        break;\n      case 'csv':\n        f.id = 2;\n        break;\n      case 'xlsx':\n        f.id = 3;\n        break;\n      case 'other':\n        f.id = 4;\n        break;\n    }\n  })\n  formats.sort((a: any, b: any) => a.id - b.id);\n\n  return (\n    <div className={`card ${className}`}>\n      {/* <!--begin::Header--> */}\n      <div className={`card-header border-0 pt-5 ${innerPadding}`}>\n        <h3 className=\"card-title align-items-start flex-column\">\n          <span className=\"card-label fw-bolder text-dark fs-3\">\n            Archivos Depositados\n          </span>\n          <span className=\"text-muted mt-2 fw-bold fs-6\">{formats[0].connection.aggregate.totalCount} Archivos</span>\n        </h3>\n        <div className=\"card-toolbar\">\n          <ul className=\"nav nav-pills nav-pills-sm nav-light\">\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link btn btn-active-light btn-color-muted py-2 px-4 fw-bolder me-2 active\"\n                data-bs-toggle=\"tab\"\n                href=\"#kt_tab_pane_1_1\"\n              >\n                All\n              </a>\n            </li>\n            {/**\n             <li className=\"nav-item\">\n              <a\n                className=\"nav-link btn btn-active-light btn-color-muted py-2 px-4 fw-bolder me-2\"\n                data-bs-toggle=\"tab\"\n                href=\"#kt_tab_pane_1_2\"\n              >\n                Week\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link btn btn-active-light btn-color-muted py-2 px-4 fw-bolder\"\n                data-bs-toggle=\"tab\"\n                href=\"#kt_tab_pane_1_3\"\n              >\n                Month\n              </a>\n            </li>\n             */}\n          </ul>\n        </div>\n      </div>\n      {/* <!--end::Header--> */}\n\n      {/* <!--begin::Body--> */}\n      <div className=\"card-body pt-2 pb-0 mt-n3\">\n        <div className=\"tab-content mt-5\" id=\"myTabTables1\">\n          {/* <!--begin::Tap pane--> */}\n          <div\n            className=\"tab-pane fade active show\"\n            id=\"kt_tab_pane_1_1\"\n            role=\"tabpanel\"\n            aria-labelledby=\"kt_tab_pane_1_1\"\n          >\n            {/* <!--begin::Table--> */}\n            <div className=\"table-responsive\">\n              <table className=\"table table-borderless align-middle\">\n                <thead>\n                  <tr>\n                    <th className=\"p-0 w-50px\"></th>\n                    <th className=\"p-0 min-w-200px\"></th>\n                    <th className=\"p-0 min-w-100px\"></th>\n                    <th className=\"p-0 min-w-40px\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    formats.map((format: any) => {\n                      // format check\n                      let color;\n                      let icon;\n                      let barColor;\n                      let barBack;\n                      let total = formats_totals.filter((filter: any) => filter.key === format.key)[0];\n\n                      if (!total) return;\n\n                      switch (format.key) {\n                        case 'pdf':\n                          color = colorPDF;\n                          icon = '/media/icons/aletheia/Formats/pdf.svg';\n                          barColor = 'background-pdf';\n                          barBack = 'background-pdf-backdrop';\n                          break;\n                        case 'csv':\n                          color = colorCSV;\n                          icon = '/media/icons/aletheia/Formats/csv.svg';\n                          barColor = 'background-csv';\n                          barBack = 'background-csv-backdrop';\n                          break;\n                        case 'xlsx':\n                          color = colorXLS;\n                          icon = '/media/icons/aletheia/Formats/xls.svg';\n                          barColor = 'background-xls';\n                          barBack = 'background-xls-backdrop';\n                          break;\n                        default:\n                          color = colorOTHER;\n                          icon = '/media/icons/aletheia/Formats/other.svg';\n                          barColor = 'background-other';\n                          barBack = 'background-other-backdrop';\n                          break;\n                      }\n                      const info = format.connection.aggregate;\n\n                      return (\n                        <tr key={`format_${format.key}`}>\n                          <th className=\"px-0 py-3\">\n                            <div className=\"symbol symbol-65px me-5\">\n                              <span className=\"symbol-label\" style={{ backgroundColor: color }}>\n                                <img\n                                  src={icon}\n                                  className=\"svg-icon-1\"\n                                  alt={`format ${format.key}`}\n                                />\n                              </span>\n                            </div>\n                          </th>\n                          <td className=\"ps-0\">\n                            <a className=\"text-gray-800 fw-bolder text-hover-primary fs-6\">\n                              {(format.key).toUpperCase()}\n                            </a>\n                            <span className=\"text-muted fw-bold d-block mt-1\">\n                              Archivos en formato {format.key}\n                            </span>\n                          </td>\n                          <td>\n                            <OverlayTrigger\n                              key=\"tooltip\"\n                              placement=\"top\"\n                              overlay={<Tooltip id=\"tooltip-pdf\">{total.connection.aggregate.count - info.count} de {total.connection.aggregate.count}</Tooltip>}\n                            >\n                              <div className=\"d-flex flex-column w-100 me-3\">\n                                <div className=\"d-flex align-items-center justify-content-between mb-2\">\n                                  <span className=\"text-dark me-2 fs-6 fw-bolder\">\n                                    Procesados\n                                  </span>\n                                </div>\n                                <div className=\"d-flex align-items-center\">\n                                  <div className={`progress h-6px  w-100 ${barBack}`}>\n                                    <div\n                                      className={`progress-bar ${barColor}`}\n                                      role=\"progressbar\"\n                                      style={{ width: getPercentage(info.count, total.connection.aggregate.count) }}\n                                      aria-valuenow={50}\n                                      aria-valuemin={0}\n                                      aria-valuemax={100}\n                                    />\n                                  </div>\n                                  <span className=\"text-muted fs-7 fw-bold ps-3\">\n                                    {getPercentage(info.count, total.connection.aggregate.count)}\n                                  </span>\n                                </div>\n                              </div>\n                            </OverlayTrigger>\n                          </td>\n                          <td className=\"text-end pe-0\">\n                            <Link\n                              to={`#`}\n                              className=\"btn btn-icon btn-bg-light btn-active-color-primary btn-sm\"\n                            >\n                              <KTSVG\n                                path=\"/media/icons/duotone/Navigation/Arrow-right.svg\"\n                                className=\"svg-icon-4\"\n                              />\n                            </Link>\n                          </td>\n                        </tr>\n                      )\n                    })\n                  }\n                </tbody>\n              </table>\n            </div>\n            {/* <!--end::Table--> */}\n          </div>\n          {/* <!--end::Tap pane--> */}\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { TablesWidget1 };\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget4.tsx",["1032","1033","1034"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { KTSVG } from \"../../../helpers\";\nimport moment from 'moment';\nimport { Link } from \"react-router-dom\";\n\ntype Props = {\n  className: string;\n  innerPadding?: string;\n  data: any;\n  color?: string;\n};\n\nconst TablesWidget4: React.FC<Props> = ({\n  className,\n  data,\n  innerPadding = \"\",\n  color = \"primary\",\n}) => {\n\n  data = data.data;\n  const entity = data.entity;\n  const type = data.type;\n\n  let title;\n  let desc;\n  let entityCount;\n  let records: any;\n  let connection: any;\n  let url;\n\n  switch (entity) {\n    case 'src':\n      title = type === 'single' ? data.source.name : '';\n      desc = type === 'single' ? data.source.description : 'Aenean dignissim mi vitae mi sodales posuere. Curabitur sagittis lacus eget lacinia pretium. Vestibulum semper tristique mauris sit amet pretium. Maecenas volutpat malesuada metus. Donec feugiat tincidunt blandit. Sed maximus feugiat lectus.';\n      connection = data.alexandriasConnection.groupBy.source;\n      records = type === 'single' ? data.source.alexandrias : data.sources;\n      break;\n    case 'dep':\n      title = type === 'single' ? 'Ministerios o instituciónes' : 'Ministerios o instituciónes';\n      desc = type === 'single' ? '' : 'Aenean dignissim mi vitae mi sodales posuere. Curabitur sagittis lacus eget lacinia pretium. Vestibulum semper tristique mauris sit amet pretium. Maecenas volutpat malesuada metus. Donec feugiat tincidunt blandit. Sed maximus feugiat lectus.';\n      connection = data.alexandriasConnection.groupBy.department;\n      records = type === 'single' ? data.department : data.departments;\n      break;\n    case 'cat':\n      title = type === 'single' ? data.source.name : '';\n      desc = type === 'single' ? '' : 'Aenean dignissim mi vitae mi sodales posuere. Curabitur sagittis lacus eget lacinia pretium. Vestibulum semper tristique mauris sit amet pretium. Maecenas volutpat malesuada metus. Donec feugiat tincidunt blandit. Sed maximus feugiat lectus.';\n      connection = data.alexandriasConnection.groupBy.category;\n      records = type === 'single' ? data.category : data.categories;\n      break;\n  }\n\n  entityCount = connection.length > 0 ? connection[0].connection.aggregate.totalCount : 0;\n\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className=\"card-header border-0 py-5\">\n        <h3 className=\"card-title align-items-start flex-column\">\n          <span className=\"card-label fw-bolder text-dark\">{title}</span>\n          <span className=\"text-muted mt-3 fw-bold fs-7\">\n            {`${entityCount} elementos registrados`}\n          </span>\n        </h3>\n        {\n          type === 'single' &&\n          <div className=\"card-toolbar\">\n            <a href=\"#\" className=\"disabled btn btn-primary fw-bolder fs-7 disabled\">\n              Subir Archivo\n            </a>\n          </div>\n        }\n      </div>\n      {/* end::Header*/}\n\n      {/* begin::Body*/}\n      <div className=\"card-body py-0\">\n        {/* begin::Table*/}\n        <div className=\"table-responsive\">\n          <table\n            className=\"table align-middle border-gray-100\"\n            id=\"kt_advance_table_widget_4\"\n          >\n            <thead>\n              <tr className=\"text-start text-muted fw-bolder text-gray-400 text-uppercase fs-7 border-gray-100 border-bottom-1\">\n                <td className=\"ps-0 min-w-250px py-5\" width=\"30%\">Nombre</td>\n                <td className=\"min-w-100px py-5\" width=\"25%\">{type === 'single' ? 'Status' : 'Website'}</td>\n                <td className=\"min-w-100px py-5\" width=\"25%\">\n                  <span className={`text-${color}`}>Ultimo Cambio</span>\n                  <KTSVG\n                    className={`svg-icon-sm svg-icon-${color}`}\n                    path=\"/media/icons/duotone/Navigation/Down-2.svg\"\n                  />\n                </td>\n                <td className=\"min-w-100px py-5\" width=\"10%\">{type === 'single' ? 'Pruebas' : 'Archivos'}</td>\n                <td className=\"min-w-100px pe-0 text-end py-5\" width=\"10%\">Action</td>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                records && records.map((rec: any) => {\n                  let count = '0';\n\n                  let files = type === 'collection' ? rec.alexandrias : rec.aletheias;\n                  let badge;\n\n                  if (files.length > 0) {\n                    if (files.length >= 100) {\n                      count = `+100`;\n                      badge = 'badge-light-primary';\n                    } else {\n                      count = `${files.length}`;\n                      badge = files.length < 5 ? 'badge-light-danger' : files.length >= 5 && files.length <= 10 ? 'badge-light-warning' : 'badge-light-primary';\n                    }\n                  } else {\n                    badge = 'badge-light-danger';\n                  }\n\n                  let background_status;\n                  let text_status;\n                  if (type === 'single') {\n                    switch (rec.status) {\n                      case 'under_review':\n                        background_status = 'background-csv';\n                        text_status = 'under review';\n                        break;\n                      case 'on_line':\n                        background_status = 'background-xls';\n                        text_status = 'online';\n                        break;\n                      case 'blocked':\n                        background_status = 'background-ods';\n                        text_status = 'blocked';\n                        break;\n                      case 'broken':\n                        background_status = 'background-pdf';\n                        text_status = 'broken';\n                        break;\n                    }\n                  }\n\n                  const link = `/${type}/${entity}/${type === 'collection' ? rec.id : rec.cid}`;\n\n                  return (\n                    <tr key={`item_${rec.id}`}>\n                      <td className=\"ps-0\">\n                        <Link\n                          to={link}\n                          className=\"text-gray-800 fw-bolder text-hover-primary fs-6\"\n                        >\n                          {rec.name || rec.title}\n                        </Link>\n                      </td>\n                      <td>\n                        {\n                          type === 'single' &&\n                          <div className=\"text-muted mt-2 fw-bold fs-6 d-flex align-items-center mb-5\">\n                            <span className=\"badge-container\">\n                              <span className={`badge badge-circle ${background_status}`}></span>\n                            </span>\n                            {text_status}\n                          </div>\n                        }\n                        {\n                          type === 'collection' &&\n                          <a href={rec.website || rec.url} target=\"_blank\">\n                            <span className=\"text-gray-800 fw-bolder d-block fs-6\">\n                              {rec.website || rec.url}\n                            </span>\n                          </a>\n                        }\n                      </td>\n                      <td>\n                        <span className={`text-${color} fw-bolder d-block fs-6`}>\n                          {moment(rec.updatedAt).format('DD/MM/YYYY')}\n                        </span>\n                      </td>\n                      <td>\n                        <span className={`badge ${badge}`}>{count}</span>\n                      </td>\n                      <td className=\"pe-0 text-end\">\n                        <a\n                          href=\"#\"\n                          className=\"btn btn-icon btn-bg-light  btn-color-muted btn-active-color-primary btn-sm\"\n                        >\n                          <KTSVG\n                            className=\"svg-icon-4\"\n                            path=\"/media/icons/duotone/General/Sad.svg\"\n                          />\n                        </a>\n                      </td>\n                    </tr>\n                  )\n                })\n              }\n\n            </tbody>\n          </table>\n        </div>\n        {/* end::Table*/}\n      </div>\n      {/* end::Body*/}\n    </div>\n  );\n};\n\nexport { TablesWidget4 };\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget3.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/SASSCustomization.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/header/MenuInner.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/RTL.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/References.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getElementActual.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/getElementChildren.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/layout/components/header/MenuItem.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/dom-helpers/_getElementMatches.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/assets/ts/_utils/helpers/types-helpers/_toJSON.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/MockBackend.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/Internationalization.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/Deployment.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/CreatePage.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/Changelog.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/icons/FontAwesomeIcons.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/icons/DuotoneIcons.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/icons/BootstrapIcons.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/NouiSlider.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Tabs.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Tables.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Utilities.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Symbol.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Separator.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Rotate.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Rating.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Pulse.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Pagination.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Overlay.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Modal.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Indicator.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/HelpersText.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/HelpersFlexLayout.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/HelpersBorders.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/HelpersBackground.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Forms.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Carousel.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Cards.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Bullets.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Breadcrumb.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Badges.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/Accordion.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/gettings-started/Overview.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Buttons.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/icons/DuotoneModels.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example1ThemeColors.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example9ZIndex.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example4LineHeight.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example7OpacityHover.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example6Opacity.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example3FontSize.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example8WidthAndHeight.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example5LetterSpacing.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/utilities/Example2Spacing.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example1BaseButtons.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example7ActiveLightStyle.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example4OutlinedDashedStyle.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example2LightStyle.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example6ActiveStyle.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example8ActiveColorStyle.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example9Icons.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example5ColorStyle.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example3BackgroundStyle.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/modules/docs/pages/base/buttons/Example10SocialButtons.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/collection/start-dashboard/CollectionPageWrapper.tsx",["1035"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport {\n  useParams\n} from \"react-router-dom\";\nimport {\n  IThemeConfig,\n  useTheme,\n  PageTitle,\n  PageDataContainer,\n  PageLink,\n  getConfig,\n} from \"../../../../_start/layout/core\";\nimport { CollectionPage } from \"./CollectionPage\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Sidebar } from \"../../../../_start/layout/components/Sidebar\";\n\nconst defaultPageConfig = getConfig();\nconst listingPageConfig: Partial<IThemeConfig> = {\n  toolbar: {\n    ...defaultPageConfig.toolbar,\n    display: true,\n  },\n};\n\nconst getQuery = (type: string, id: string, entity: string) => {\n  console.log(`getting query for ${entity} - ${type} - ${id}`);\n\n  let SRC_QUERY = gql`\n    query Source {\n      source(\n        id: \"${id}\"\n      ) {\n        id,\n        name, \n        description,\n        url,\n        updatedAt,\n        alexandrias(limit: 10){\n          id, \n          title,\n          description,\n          status,\n          cid,\n          type,\n          aletheias{\n            id,\n            proof {\n              id,\n              url\n            }\n          }\n        }\n    },\n    alexandriasConnection(\n      where: {\n        source: \"${id}\"\n      }\n    ){\n        groupBy {\n          id{\n            key\n          }\n        }\n      },\n    sourcesConnection{\n      groupBy {\n          id{\n            key,\n            connection{\n              aggregate{\n                count,\n                totalCount\n              }\n            }\n          }\n        }\n    }\n    }\n    `;\n\n  let DEP_QUERY = gql`\n    query Departments {\n      department(\n        id: \"${id}\"\n      ) {\n        id,\n        name, \n        desciption,\n        website,\n        updatedAt,\n        alexandrias(limit: 10){\n          id, \n          title,\n          description,\n          status,\n          cid,\n          type,\n          aletheias{\n            id,\n            proof {\n              id,\n              url\n            }\n          }\n        }\n    },\n    alexandriasConnection(\n      where: {\n        department: \"${id}\"\n      }\n    ){\n        groupBy {\n          id{\n            key\n          }\n        }\n      },\n    departmentsConnection(\n      limit: 1\n    ){\n        groupBy {\n          id{\n            key,\n            __typename,\n            connection{\n              aggregate{\n                count,\n                totalCount\n              }\n            }\n          }\n        }\n      }\n    }\n    `;\n\n  let CAT_QUERY = gql`\n    query Category {\n      category(\n        id: \"${id}\"\n      ) {\n        id,\n        title,\n        description,\n        updatedAt,\n        alexandrias(limit: 10){\n          id, \n          title,\n          description,\n          status,\n          cid,\n          type,\n          aletheias{\n            id,\n            proof {\n              id,\n              url\n            }\n          }\n        }\n    },\n    alexandriasConnection(\n      where: {\n        category: \"${id}\"\n      }\n    ){\n        groupBy {\n          id{\n            key\n          }\n        }\n      },\n      categoriesConnection(\n      where: {\n        \n      }){\n        groupBy {\n          id{\n            key,\n            __typename,\n            connection{\n              aggregate{\n                count,\n                totalCount\n              }\n            }\n          }\n        }\n      }\n    }\n    `;\n\n  switch (entity) {\n    case 'src':\n      return SRC_QUERY;\n    case 'dep':\n      return DEP_QUERY;\n    case 'cat':\n      return CAT_QUERY;\n  }\n}\n\nfunction Collection(type: string, query: any, entity: string) {\n\n  var { data, loading, error } = useQuery(query, {\n    variables: {}\n  });\n\n  if (loading) return <p>Loading ...</p>;\n\n  data.type = type;\n  data.entity = entity;\n  return result(data);\n}\n\nconst result = (data: any) => {\n  return <CollectionPage data={data} />\n}\n\nexport function CollectionPageWrapper() {\n  let params: any = useParams();\n  const { entity, id } = params;\n  // if Id = 0 means that its a collection not a single item\n  // console.log(id);\n  let title;\n  let component;\n  let type = 'single';\n\n  title = 'Loading';\n  let query = getQuery(type, id, entity);\n  let prevRoute = 'Loading';\n  console.log(`calling query: `, query);\n  component = Collection(type, query, entity);\n\n  if (component?.props?.data) {\n    console.log(`got data: `, component.props.data);\n    component.props.data.sidebar = 'default';\n    switch (params.entity) {\n      case 'src':\n        title = component.props.data.source.name;\n        prevRoute = type === 'single' ? 'Fuentes' : 'Fuentes';\n        break;\n      case 'dep':\n        title = component.props.data.department.name;\n        prevRoute = type === 'single' ? 'Ministerios o instituciónes' : 'Ministerios o instituciónes';\n        break;\n      case 'cat':\n        title = component.props.data.category.title;\n        prevRoute = type === 'single' ? 'Categorias' : 'Categorias';\n        break;\n    }\n  }\n\n  const { setTheme } = useTheme();\n  // Refresh UI after config updates\n  useEffect(() => {\n    setTheme(listingPageConfig);\n    return () => {\n      setTheme(defaultPageConfig);\n    };\n  }, []);\n\n  const getBreadcrumbs = (prevRoute: any) => {\n    console.log(prevRoute);\n\n    return [\n      {\n        title: \"Home\",\n        path: \"/\",\n        isActive: false,\n      },\n      {\n        title: prevRoute,\n        path: `/group/${entity}`,\n        isActive: false,\n      }\n    ]\n  }\n\n  let profileBreadCrumbs: Array<PageLink> = getBreadcrumbs(prevRoute);\n\n  return <>\n    <PageTitle>{title}</PageTitle>\n    <PageDataContainer\n      breadcrumbs={profileBreadCrumbs}\n    />\n    {component}\n    <Sidebar props={component.props.data} />\n  </>\n}\n\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/collection/start-dashboard/CollectionPage.tsx",["1036","1037","1038","1039","1040"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport {\n  EngageWidget3,\n  TablesWidget1,\n  Pagination1,\n  TablesWidget5\n} from \"../../../../_start/partials/widgets\";\nimport {\n  useParams\n} from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { CreateAppModal } from \"../_modals/create-app-stepper/CreateAppModal\";\n\nexport const CollectionPage = (pageData: any) => {\n\n  let params: any = useParams();\n  const { entity, id } = params;\n  console.log(entity, id);\n  let entityName: any;\n  switch (entity) {\n    case 'src':\n      entityName = 'source';\n      break;\n    case 'dep':\n      entityName = 'department';\n      break;\n    case 'cat':\n      entityName = 'category';\n      break;\n  }\n\n  const [show, setShow] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [entityCount, setEntityCount] = useState(0);\n  const [dataTable, setDataTable] = useState('');\n\n  const getQuery = (id: string, entity: string, page: number) => {\n    console.log(`getting query for ${entity} - ${id}`);\n\n    let query = `\n    query SourceFromAlexandria {\n      alexandrias(\n        start: ${(page - 1) * 10},\n        limit: 10,\n        where:{\n          ${entityName}: \"${id}\"\n        }\n      ) {\n        id, \n        title,\n        description,\n        status,\n        cid,\n        type,\n        aletheias{\n          id,\n          proof {\n            id,\n            url\n          }\n        }\n      }\n    }\n    `;\n\n    return query;\n  }\n\n  const handlePagination = (page: any) => {\n    setLoading(true);\n    // console.log(page);\n    getNewRecords(entity, id, page.newPage)\n      .then((res: any) => {\n        // console.log(res.data.alexandrias);\n        let items = res.data.alexandrias;\n        let oldData = dataTable;\n        if (items.length > 0) {\n          // console.log(data);\n          oldData[entityName]['alexandrias'] = res.data.alexandrias;\n          console.log(oldData);\n          setDataTable('');\n          setDataTable(oldData);\n          setLoading(false);\n        } else {\n          oldData[entityName]['alexandrias'] = [];\n          setDataTable('');\n          setDataTable(oldData);\n          setLoading(false);\n        }\n      })\n\n    return;\n  }\n\n  const getNewRecords = (entity: string, id: string, page: number) => {\n    return new Promise((resolve, reject) => {\n\n      let query = getQuery(id, entity, page);\n\n      // console.log(query);\n\n      const endpoint = `${process.env.REACT_APP_API_ENDPOINT}/graphql`;\n\n      fetch(endpoint, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          query: query\n        })\n      })\n        .then(response => response.json())\n        .then(newData => {\n          resolve(newData);\n        })\n        .catch(err => {\n          console.log(err)\n          reject(err);\n        });\n\n    });\n  }\n\n  const init = (info: any) => {\n    let showData: any = info;\n    console.log(showData);\n\n    setDataTable(showData)\n\n    const entity = showData.entity;\n    const type = showData.type;\n\n    let connection: any;\n    let totalConn: any;\n\n    connection = showData.alexandriasConnection.groupBy.id;\n    switch (entity) {\n      case 'src':\n        totalConn = connection.filter((item: any) => item.key === showData.source.id);\n        console.log(totalConn);\n        break;\n      case 'dep':\n        totalConn = connection.filter((item: any) => item.key === showData.department.id);\n        break;\n      case 'cat':\n        totalConn = connection[0];\n        break;\n    }\n\n    console.log(connection.length);\n\n    setEntityCount(connection.length);\n  }\n\n  useEffect(() => {\n\n    init(pageData.data);\n\n  }, []);\n\n  return (\n    <>\n      {/* begin::Row */}\n      <div className=\"row g-0 g-xl-5 g-xxl-12\">\n        <div className=\"col-xl-12\">\n          {\n            pageData &&\n            <EngageWidget3\n              data={pageData.data}\n              color=\"white\"\n              className=\"card-stretch mb-5 mb-xxl-8\" />\n          }\n        </div>\n      </div>\n      {/* end::Row */}\n\n      {/* begin::Row */}\n      <div className=\"row g-0 g-xl-5 g-xxl-12\">\n        <div className=\"col-xl-12\">\n          {\n            dataTable &&\n            <TablesWidget5 data={dataTable} className={`table-custom card-stretch mb-5 mb-xxl-8 ${isLoading ? 'table-loading' : ''}`} />\n          }\n        </div>\n      </div>\n      {/* end::Row */}\n\n      {/* begin::Row */}\n      <div className=\"row g-0 g-xl-5 g-xxl-12\">\n        <div className=\"col-xl-12\">\n          <Pagination1 handleClick={handlePagination} totalItems={entityCount} />\n        </div>\n      </div>\n      {/* end::Row */}\n\n      {/* begin::Modals */}\n      <CreateAppModal show={show} handleClose={() => setShow(false)} />\n      {/* end::Modals */}\n    </>\n  );\n};\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/collection/_modals/create-app-stepper/CreateAppModal.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/collection/_modals/create-app-stepper/IAppModels.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/group/start-dashboard/ListingPageWrapper.tsx",["1041","1042"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport {\n  useParams\n} from \"react-router-dom\";\nimport {\n  IThemeConfig,\n  useTheme,\n  PageTitle,\n  PageDataContainer,\n  PageLink,\n  getConfig,\n} from \"../../../../_start/layout/core\";\nimport { ListingPage } from \"./ListingPage\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Sidebar } from \"../../../../_start/layout/components/Sidebar\";\n\nconst defaultPageConfig = getConfig();\nconst listingPageConfig: Partial<IThemeConfig> = {\n  toolbar: {\n    ...defaultPageConfig.toolbar,\n    display: true,\n  },\n};\n\nconst getQuery = (type: string, id: string, entity: string) => {\n  console.log(`getting query for ${entity} - ${type} - ${id}`);\n\n  let SRC_QUERY = gql`\n  query Sources {\n    sources(\n      limit: 10, \n      sort: \"updatedAt:desc\"\n    ) {\n      id,\n      name, \n      url,\n      updatedAt,\n      alexandrias{\n        cid,\n        type\n      }\n  },\n  alexandriasConnection(\n    limit: 0\n  ){\n      groupBy {\n        source{\n          key,\n          __typename,\n          connection{\n            aggregate{\n              count,\n              totalCount\n            }\n          }\n        }\n      }\n  },\n    sourcesConnection(\n    where: {\n      \n    }){\n      groupBy {\n        id{\n          key,\n          __typename,\n          connection{\n            aggregate{\n              count,\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  let DEP_QUERY = gql`\n  query Departments {\n    departments(\n      limit: 10, \n      sort: \"updatedAt:desc\"\n    ) {\n      id,\n      name, \n      website,\n      updatedAt,\n      alexandrias{\n        cid,\n        type\n      }\n  },\n  alexandriasConnection(\n    limit: 1\n  ){\n      groupBy {\n        department{\n          key,\n          __typename,\n          connection{\n            aggregate{\n              count,\n              totalCount\n            }\n          }\n        }\n      }\n    },\n  departmentsConnection(\n    limit: 1\n  ){\n      groupBy {\n        id{\n          key,\n          __typename,\n          connection{\n            aggregate{\n              count,\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  let CAT_QUERY = gql`\n  query Categories {\n    categories(\n      limit: 10, \n      sort: \"updatedAt:desc\"\n    ) {\n      id,\n    \ttitle,\n    \tdescription,\n    \tupdatedAt,\n      alexandrias{\n        cid,\n        type\n      }\n  },\n  alexandriasConnection(\n    limit: 1\n  ){\n      groupBy {\n        id{\n          key\n        }\n      }\n    },\n    categoriesConnection(\n    limit: 1 \n  ){\n      groupBy {\n        id{\n          key,\n          __typename,\n          connection{\n            aggregate{\n              count,\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  switch (entity) {\n    case 'src':\n      return SRC_QUERY;\n    case 'dep':\n      return DEP_QUERY;\n    case 'cat':\n      return CAT_QUERY;\n  }\n}\n\nfunction Collection(type: string, query: any, entity: string) {\n\n  var { data, loading, error } = useQuery(query, {\n    variables: {}\n  });\n\n  if (loading) return <p>Loading ...</p>;\n\n  if (data) {\n    data.type = type;\n    data.entity = entity;\n  }\n  return result(data);\n}\n\nconst result = (data: any) => {\n  return <ListingPage data={data} />\n}\n\nexport function ListingPageWrapper() {\n  let params: any = useParams();\n  const { entity, id } = params;\n  // if Id = 0 means that its a collection not a single item\n  // console.log(id);\n  let title;\n  let component;\n  let type = 'collection';\n  title = 'Loading';\n  let query = getQuery(type, id, entity);\n  component = Collection(type, query, entity);\n\n  if (component?.props?.data) {\n    component.props.data.sidebar = 'default';\n    switch (entity) {\n      case 'src':\n        title = 'Fuentes';\n        break;\n      case 'dep':\n        title = 'Ministerios o instituciónes';\n        break;\n      case 'cat':\n        title = 'Categorias';\n        break;\n    }\n  }\n\n  const { setTheme } = useTheme();\n  // Refresh UI after config updates\n  useEffect(() => {\n    setTheme(listingPageConfig);\n    return () => {\n      setTheme(defaultPageConfig);\n    };\n  }, []);\n\n  const pageBreadcrumbs = [{\n    title: \"Home\",\n    path: \"/\",\n    isActive: false,\n  }];\n\n  return <>\n    <PageTitle>{title}</PageTitle>\n    <PageDataContainer\n      breadcrumbs={pageBreadcrumbs}\n    />\n    {component}\n    <Sidebar props={component.props.data} />\n  </>\n}\n\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/group/start-dashboard/ListingPage.tsx",["1043","1044","1045"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport {\n  EngageWidget3,\n  TablesWidget1,\n  Pagination1,\n  TablesWidget7\n} from \"../../../../_start/partials/widgets\";\nimport {\n  useParams\n} from \"react-router-dom\";\nimport { CreateAppModal } from \"../_modals/create-app-stepper/CreateAppModal\";\n\nexport const ListingPage = (data: any) => {\n  const [show, setShow] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [entityCount, setEntityCount] = useState(0);\n  const [dataTable, setDataTable] = useState('');\n\n  let params: any = useParams();\n  const { entity, id } = params;\n  console.log(entity, id);\n  let entityName: any;\n  switch (entity) {\n    case 'src':\n      entityName = 'sources';\n      break;\n    case 'dep':\n      entityName = 'departments';\n      break;\n    case 'cat':\n      entityName = 'categorys';\n      break;\n  }\n\n  const getQuery = (id: string, entity: string, page: number) => {\n    console.log(`getting query for ${entity} - ${id}`);\n\n    let query = `\n    query DepartmentsTTT {\n      departments(\n        start: ${(page - 1) * 10},\n        limit: 10,\n        sort: \"updatedAt:desc\"\n      ) {\n        id,\n        name, \n        website,\n        updatedAt,\n        alexandrias{\n        title,\n        description,\n        status,\n        cid,\n        type,\n        aletheias{\n          id,\n          proof {\n            id,\n            url\n          }\n        }\n        }\n      }\n    }\n    `;\n\n    return query;\n  }\n\n  const handlePagination = (page: any) => {\n    setLoading(true);\n    // console.log(page);\n    getNewRecords(entity, id, page.newPage)\n      .then((res: any) => {\n        console.log(res);\n        let items = res.data.departments;\n        let oldData: any = dataTable;\n        console.log(res);\n\n        if (items.length > 0) {\n          // console.log(data);\n          oldData[entityName] = res.data[entityName];\n          console.log(oldData);\n          setDataTable('');\n          setDataTable(oldData);\n          setLoading(false);\n        } else {\n          oldData[entityName] = [];\n          setDataTable('');\n          setDataTable(oldData);\n          setLoading(false);\n        }\n      })\n\n    return;\n  }\n\n  const getNewRecords = (entity: string, id: string, page: number) => {\n    return new Promise((resolve, reject) => {\n\n      let query = getQuery(id, entity, page);\n\n      // console.log(query);\n\n      const endpoint = `${process.env.REACT_APP_API_ENDPOINT}/graphql`;\n\n      fetch(endpoint, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          query: query\n        })\n      })\n        .then(response => response.json())\n        .then(newData => {\n          resolve(newData);\n        })\n        .catch(err => {\n          console.log(err)\n          reject(err);\n        });\n\n    });\n  }\n\n  const init = (info: any) => {\n    let showData: any = info;\n    console.log(showData);\n\n    setDataTable(showData)\n\n    const entity = showData.entity;\n    const type = showData.type;\n\n    let connection: any;\n    let totalConn: any;\n\n    switch (entity) {\n      case 'src':\n        connection = showData.sourcesConnection.groupBy.id;\n        break;\n      case 'dep':\n        connection = showData.departmentsConnection.groupBy.id;\n        break;\n      case 'cat':\n        connection = showData.categoriesConnection.groupBy.id;\n        break;\n    }\n\n    totalConn = connection[0].connection.aggregate.totalCount;\n\n    setEntityCount(totalConn);\n  }\n\n  useEffect(() => {\n\n    init(data.data ? data.data : data);\n\n  }, []);\n\n  return (\n    <>\n      {/* begin::Row */}\n      <div className=\"row g-0 g-xl-5 g-xxl-12\">\n        <div className=\"col-xl-12\">\n          <EngageWidget3\n            data={data}\n            color=\"white\"\n            className=\"card-stretch mb-5 mb-xxl-8\" />\n        </div>\n      </div>\n      {/* end::Row */}\n\n      {/* begin::Row */}\n      <div className=\"row g-0 g-xl-5 g-xxl-12\">\n        <div className=\"col-xl-12\">\n          <TablesWidget7 data={data} className={`table-custom card-stretch mb-5 mb-xxl-8 ${isLoading ? 'table-loading' : ''}`} />\n        </div>\n      </div>\n      {/* end::Row */}\n\n      {/* begin::Row */}\n      <div className=\"row g-0 g-xl-5 g-xxl-12\">\n        <div className=\"col-xl-12\">\n          <Pagination1 handleClick={handlePagination} totalItems={entityCount} />\n        </div>\n      </div>\n      {/* end::Row */}\n\n      {/* begin::Modals */}\n      <CreateAppModal show={show} handleClose={() => setShow(false)} />\n      {/* end::Modals */}\n    </>\n  );\n};\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/group/_modals/create-app-stepper/CreateAppModal.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/group/_modals/create-app-stepper/IAppModels.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/single/start-dashboard/SinglePageWrapper.tsx",["1046"],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/single/start-dashboard/SinglePage.tsx",["1047"],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/single/_modals/create-app-stepper/CreateAppModal.tsx",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/app/pages/single/_modals/create-app-stepper/IAppModels.ts",[],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/engage/EngageWidget6.tsx",["1048","1049","1050","1051"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { toAbsoluteUrl } from \"../../../helpers\";\nimport moment from 'moment';\n\n\ntype Props = {\n    className: string;\n    imagePath?: string;\n    data: any;\n    innerPadding?: string;\n    color?: string;\n};\n\nconst EngageWidget6: React.FC<Props> = ({\n    className,\n    imagePath = \"\",\n    data,\n    innerPadding = \"\",\n    color = \"primary\",\n}) => {\n\n    data = data.data;\n    const entity = data.entity;\n    const type = data.type;\n\n    let countTotal;\n    let title;\n    let desc;\n    let entityCount;\n    let records;\n    let lastRecord;\n    let department;\n    let source;\n    let proof;\n\n    // sort by aletheias count +\n    // get first record (most aletheias)\n    data = data.alexandrias[0];\n\n    title = type === 'single' ? data.title : '';\n    desc = type === 'single' ? data.description : 'Aenean dignissim mi vitae mi sodales posuere. Curabitur sagittis lacus eget lacinia pretium. Vestibulum semper tristique mauris sit amet pretium. Maecenas volutpat malesuada metus. Donec feugiat tincidunt blandit. Sed maximus feugiat lectus.';\n    source = data.source.name;\n    department = data.department.name;\n    proof = data.proof ? data.proof.url : null;\n\n    switch (entity) {\n        case 'src':\n            countTotal = 0;\n            entityCount = type === 'single' ? '' : 0;\n            lastRecord = type === 'single' ? '' : data;\n            break;\n        case 'dep':\n            countTotal = type === 'single' ? '' : data.alexandriasConnection.groupBy.department[0].connection.aggregate.totalCount;\n            entityCount = type === 'single' ? '' : data.departmentsConnection.groupBy.id[0].connection.aggregate.totalCount;\n            records = type === 'single' ? '' : data.departments;\n            lastRecord = type === 'single' ? '' : records[0];\n            break;\n        case 'cat':\n            countTotal = type === 'single' ? '' : data.alexandriasConnection.groupBy.category.length > 0 ? data.alexandriasConnection.groupBy.category[0].connection.aggregate.totalCount : 0;\n            entityCount = type === 'single' ? '' : data.categoriesConnection.groupBy.id[0].connection.aggregate.totalCount;\n            records = type === 'single' ? '' : data.categories;\n            lastRecord = type === 'single' ? '' : records[0];\n            break;\n    }\n\n    return (\n        <div className={`card card-custom ${className}`} style={{ overflow: 'hidden' }}>\n            {/* begin::Card Body */}\n            <div\n                className={`justify-content-end card-body d-flex p-12 flex-column flex-md-row flex-lg-column flex-xxl-row bg-${color}`}\n            >\n                {/*begin::Image*/}\n                <div\n                    className=\"bgi-no-repeat bgi-position-left bgi-size-cover h-300px h-md-auto h-lg-400px mw-100 w-650px\"\n                    style={{\n                        backgroundImage: `url('${toAbsoluteUrl(\"/media/products/12.png\")}'`,\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 0\n                    }}\n                ></div>\n                {/*end::Image*/}\n\n\n                {/*begin::Card*/}\n                <div className=\"card shadow-none w-auto w-md-400px w-lg-auto w-xxl-400px ml-auto\" style={{ overflow: 'hidden' }}>\n                    {/*begin::Card Body*/}\n                    <div className=\"card-body bg-light px-12 py-10 card card-custom\">\n                        <div className=\"card-header\">\n                            <h3 className=\"fw-bolder fs-1 card-toolbar\">\n                                <div className=\"text-muted fw-bold fs-6 d-flex align-items-center\">\n                                    <span className=\"badge-container\">\n                                        <span className=\"badge badge-circle background-xls\"></span>\n                                    </span>\n                                    {'Online'}\n                                </div>\n                            </h3>\n                            <div className=\"card-toolbar\">\n                                {/**\n                 * <button type=\"button\" className=\"btn btn-sm btn-light\">\n                  Action\n                </button>\n                 */}\n                            </div>\n                        </div>\n                        <div className=\"card-body card-scroll h-200px\">\n                            {desc}\n                        </div>\n                        <div className=\"card-footer\">\n                            {/*begin::Info*/}\n                            <table className=\"table table-borderless align-middle fw-bold\">\n                                {\n                                    type === 'collection' &&\n                                    <tbody>\n                                        <tr>\n                                            <td className=\"text-gray-600 ps-0\">Fuente</td>\n                                            {\n                                                data.source.url &&\n                                                <td className=\"text-dark pe-0\">\n                                                    <a target=\"_blank\" href={`${data.source.url}`} rel=\"noreferrer\">{data.source.name}</a>\n                                                </td>\n                                            }\n                                            {\n                                                !data.source.url &&\n                                                <td className=\"text-dark pe-0\">{\n                                                    source\n                                                }</td>\n                                            }\n                                        </tr>\n                                        <tr>\n                                            <td className=\"text-gray-600 ps-0\">Ministerio</td>\n                                            <td className=\"text-dark pe-0\">{department}</td>\n                                        </tr>\n                                        {\n                                            proof &&\n                                            <tr>\n                                                <td className=\"text-gray-600 ps-0\">Prueba</td>\n                                                <td className=\"text-dark pe-0\">\n                                                    <a href={`${proof}`} target={'_blank'} rel=\"noreferrer\">Ver</a>\n                                                </td>\n                                            </tr>\n                                        }\n                                        <tr>\n                                            <td className=\"text-gray-600 ps-0\">Ultimo Archivo</td>\n                                            <td className=\"text-dark pe-0\">{moment(lastRecord.updatedAt).format('DD/MM/YYYY')}</td>\n                                        </tr>\n                                    </tbody>\n                                }\n\n                                {\n                                    type === 'single' &&\n                                    <tbody>\n                                        <tr>\n                                            <td className=\"text-gray-600 ps-0\">Fuente</td>\n                                            {\n                                                data.source.url &&\n                                                <td className=\"text-dark pe-0\">\n                                                    <a target=\"_blank\" href={`${data.source.url}`} rel=\"noreferrer\">{data.source.name}</a>\n                                                </td>\n                                            }\n                                            {\n                                                !data.source.url &&\n                                                <td className=\"text-dark pe-0\">{\n                                                    source\n                                                }</td>\n                                            }\n                                        </tr>\n                                        <tr>\n                                            <td className=\"text-gray-600 ps-0\">Ministerio</td>\n                                            {\n                                                data.department.website &&\n                                                <td className=\"text-dark pe-0\">\n                                                    <a target=\"_blank\" href={`${data.department.website}`} rel=\"noreferrer\">{data.department.name}</a>\n                                                </td>\n                                            }\n                                            {\n                                                !data.department.website &&\n                                                <td className=\"text-dark pe-0\">{\n                                                    department\n                                                }</td>\n                                            }\n                                        </tr>\n                                        {\n                                            proof &&\n                                            <tr>\n                                                <td className=\"text-gray-600 ps-0\">Prueba</td>\n                                                <td className=\"text-dark pe-0\">\n                                                    <a href={`${proof}`} target={'_blank'}>Ver</a>\n                                                </td>\n                                            </tr>\n                                        }\n                                        <tr>\n                                            <td className=\"text-gray-600 ps-0\">Formato</td>\n                                            <td className=\"text-dark pe-0\">{data.type}</td>\n                                        </tr>\n                                        <tr>\n                                            <td className=\"text-gray-600 ps-0\">Ultimo Archivo</td>\n                                            <td className=\"text-dark pe-0\">{moment(lastRecord.updatedAt).format('DD/MM/YYYY')}</td>\n                                        </tr>\n                                    </tbody>\n                                }\n                            </table>\n                            {/*end::Info*/}\n                        </div>\n                    </div>\n                    {/*end::Card Body*/}\n                </div>\n                {/*end::Card*/}\n\n            </div>\n            {/*end::Card Body*/}\n        </div>\n    );\n};\n\nexport { EngageWidget6 };\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget6.tsx",["1052","1053"],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget5.tsx",["1054","1055","1056"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { KTSVG } from \"../../../helpers\";\nimport moment from 'moment';\nimport { Link } from \"react-router-dom\";\n\ntype Props = {\n  className: string;\n  innerPadding?: string;\n  data: any;\n  color?: string;\n};\n\nconst TablesWidget5: React.FC<Props> = ({\n  className,\n  data,\n  innerPadding = \"\",\n  color = \"primary\",\n}) => {\n  console.log(data);\n\n  if (data.data) {\n    data = data.data;\n  }\n\n  const entity = data.entity;\n  const type = data.type;\n\n  let title;\n  let entityCount;\n  let records: any;\n\n  let connection: any = data.alexandriasConnection.groupBy.id;\n  let totalConn = connection.length;\n  switch (entity) {\n    case 'src':\n      title = data.source.name;\n      records = data.source.alexandrias;\n      console.log(totalConn);\n      break;\n    case 'dep':\n      title = data.department.name;\n      records = data.department.alexandrias;\n      break;\n    case 'cat':\n      title = data.category.name;\n      records = data.category.alexandrias;\n      break;\n  }\n\n  entityCount = connection.length;\n\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className=\"card-header border-0 py-5\">\n        <h3 className=\"card-title align-items-start flex-column\">\n          <span className=\"text-muted mt-3 fw-bold fs-7\">\n            {`${entityCount} elementos registrados`}\n          </span>\n        </h3>\n        {\n          type === 'single' &&\n          <div className=\"card-toolbar\">\n            <a href=\"#\" className=\"disabled btn btn-primary fw-bolder fs-7 disabled\">\n              Subir Archivo\n            </a>\n          </div>\n        }\n      </div>\n      {/* end::Header*/}\n\n      {/* begin::Body*/}\n      <div className=\"card-body py-0\">\n        {/* begin::Table*/}\n        <div className=\"table-responsive\">\n          <table\n            className=\"table align-middle border-gray-100\"\n            id=\"kt_advance_table_widget_4\"\n          >\n            <thead>\n              <tr className=\"text-start text-muted fw-bolder text-gray-400 text-uppercase fs-7 border-gray-100 border-bottom-1\">\n                <td className=\"ps-0 min-w-250px py-5\" width=\"30%\">Nombre</td>\n                <td className=\"min-w-100px py-5\" width=\"10%\">{'Formato'}</td>\n                <td className=\"min-w-100px py-5\" width=\"25%\">\n                  <span className={`text-${color}`}>Ultimo Cambio</span>\n                  <KTSVG\n                    className={`svg-icon-sm svg-icon-${color}`}\n                    path=\"/media/icons/duotone/Navigation/Down-2.svg\"\n                  />\n                </td>\n                <td className=\"min-w-100px py-5\" width=\"25%\">{'Status'}</td>\n                <td className=\"min-w-100px pe-0 text-end py-5\" width=\"10%\">Action</td>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                records && records.map((rec: any) => {\n\n                  let count = '0';\n                  let badge;\n\n                  let background_status;\n                  let text_status;\n                  switch (rec.status) {\n                    case 'under_review':\n                      background_status = 'background-csv';\n                      text_status = 'under review';\n                      break;\n                    case 'on_line':\n                      background_status = 'background-xls';\n                      text_status = 'online';\n                      break;\n                    case 'blocked':\n                      background_status = 'background-ods';\n                      text_status = 'blocked';\n                      break;\n                    case 'broken':\n                      background_status = 'background-pdf';\n                      text_status = 'broken';\n                      break;\n                  }\n\n                  let background_format;\n                  switch (rec.type) {\n                    case 'pdf':\n                      background_format = 'background-pdf';\n                      break;\n                    case 'csv':\n                      background_format = 'background-csv';\n                      break;\n                    case 'xls':\n                    case \"xlsx\":\n                      background_format = 'background-xls';\n                      break;\n                    case 'ods':\n                      background_format = 'background-ods';\n                      break;\n                    case 'other':\n                      background_format = 'background-other';\n                      break;\n                  }\n\n                  const link = `/${type}/${entity}/${rec.cid}`;\n\n                  return (\n                    <tr key={`item_${rec.id}`}>\n                      <td className=\"ps-0\">\n                        <Link\n                          to={rec.cid ? link : '#'}\n                          className={`text-gray-800 fw-bolder text-hover-primary fs-6 ${rec.cid ? '' : 'disabled'}`}\n                        >\n                          {rec.name || rec.title}\n                        </Link>\n                      </td>\n                      <td>\n                        <span className={`badge ${background_format}`}>\n                          {rec.type}\n                        </span>\n                      </td>\n                      <td>\n                        <span className={`text-${color} fw-bolder d-block fs-6`}>\n                          {moment(rec.updatedAt).format('DD/MM/YYYY')}\n                        </span>\n                      </td>\n                      <td>\n                        <span className={`badge ${background_status}`}>\n                          {text_status}\n                        </span>\n                      </td>\n                      <td className=\"pe-0 text-end\">\n                        <a\n                          href=\"#\"\n                          className=\"btn btn-icon btn-bg-light  btn-color-muted btn-active-color-primary btn-sm\"\n                        >\n                          <KTSVG\n                            className=\"svg-icon-4\"\n                            path=\"/media/icons/duotone/General/Sad.svg\"\n                          />\n                        </a>\n                      </td>\n                    </tr>\n                  )\n                })\n              }\n\n            </tbody>\n          </table>\n        </div>\n        {/* end::Table*/}\n      </div>\n      {/* end::Body*/}\n    </div>\n  );\n};\n\nexport { TablesWidget5 };\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget7.tsx",["1057","1058","1059","1060","1061","1062"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { KTSVG } from \"../../../helpers\";\nimport moment from 'moment';\nimport { Link } from \"react-router-dom\";\n\ntype Props = {\n  className: string;\n  innerPadding?: string;\n  data: any;\n  color?: string;\n};\n\nconst TablesWidget7: React.FC<Props> = ({\n  className,\n  data,\n  innerPadding = \"\",\n  color = \"primary\",\n}) => {\n\n  data = data.data;\n  const entity = data.entity;\n  const type = data.type;\n\n  let countTotal;\n  let countSrc;\n\n  let title;\n  let desc;\n  let entityCount;\n  let records: any;\n  let connection: any;\n  let url;\n\n  switch (entity) {\n    case 'src':\n      title = type === 'single' ? 'Fuentes' : 'Fuentes';\n      desc = type === 'single' ? '' : 'Aenean dignissim mi vitae mi sodales posuere. Curabitur sagittis lacus eget lacinia pretium. Vestibulum semper tristique mauris sit amet pretium. Maecenas volutpat malesuada metus. Donec feugiat tincidunt blandit. Sed maximus feugiat lectus.';\n      connection = data.sourcesConnection.groupBy.id;\n\n      records = type === 'single' ? data.source : data.sources;\n      break;\n    case 'dep':\n      title = type === 'single' ? 'Ministerios o instituciónes' : 'Ministerios o instituciónes';\n      desc = type === 'single' ? '' : 'Aenean dignissim mi vitae mi sodales posuere. Curabitur sagittis lacus eget lacinia pretium. Vestibulum semper tristique mauris sit amet pretium. Maecenas volutpat malesuada metus. Donec feugiat tincidunt blandit. Sed maximus feugiat lectus.';\n      connection = data.departmentsConnection.groupBy.id;\n\n      records = type === 'single' ? data.department : data.departments;\n      break;\n    case 'cat':\n      title = type === 'single' ? 'Categorias' : 'Categorias';\n      desc = type === 'single' ? '' : 'Aenean dignissim mi vitae mi sodales posuere. Curabitur sagittis lacus eget lacinia pretium. Vestibulum semper tristique mauris sit amet pretium. Maecenas volutpat malesuada metus. Donec feugiat tincidunt blandit. Sed maximus feugiat lectus.';\n      connection = data.categoriesConnection.groupBy.id;\n      records = type === 'single' ? data.category : data.categories;\n      break;\n  }\n\n  entityCount = connection.length > 0 ? connection[0].connection.aggregate.totalCount : 0;\n\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className=\"card-header border-0 py-5\">\n        <h3 className=\"card-title align-items-start flex-column\">\n          <span className=\"text-muted mt-3 fw-bold fs-7\">\n            {`${entityCount} elementos registrados`}\n          </span>\n        </h3>\n        {\n          type === 'single' &&\n          <div className=\"card-toolbar\">\n            <a href=\"#\" className=\"disabled btn btn-primary fw-bolder fs-7 disabled\">\n              Subir Archivo\n            </a>\n          </div>\n        }\n      </div>\n      {/* end::Header*/}\n\n      {/* begin::Body*/}\n      <div className=\"card-body py-0\">\n        {/* begin::Table*/}\n        <div className=\"table-responsive\">\n          <table\n            className=\"table align-middle border-gray-100\"\n            id=\"kt_advance_table_widget_4\"\n          >\n            <thead>\n              <tr className=\"text-start text-muted fw-bolder text-gray-400 text-uppercase fs-7 border-gray-100 border-bottom-1\">\n                <td className=\"ps-0 min-w-250px py-5\" width=\"30%\">Nombre</td>\n                {\n                  entity !== 'cat' &&\n                  <td className=\"min-w-100px py-5\" width=\"25%\">{type === 'single' ? 'Status' : 'Website'}</td>\n                }\n                <td className=\"min-w-100px py-5\" width=\"25%\">\n                  <span className={`text-${color}`}>Ultimo Cambio</span>\n                  <KTSVG\n                    className={`svg-icon-sm svg-icon-${color}`}\n                    path=\"/media/icons/duotone/Navigation/Down-2.svg\"\n                  />\n                </td>\n                <td className=\"min-w-100px py-5\" width=\"10%\">{type === 'single' ? 'Pruebas' : 'Archivos'}</td>\n                <td className=\"min-w-100px pe-0 text-end py-5\" width=\"10%\">Action</td>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                records && records.map((rec: any) => {\n                  let count = '0';\n\n                  let files = type === 'collection' ? rec.alexandrias : rec.aletheias;\n                  let badge;\n\n                  if (files.length > 0) {\n                    if (files.length >= 100) {\n                      count = `+100`;\n                      badge = 'badge-light-primary';\n                    } else {\n                      count = `${files.length}`;\n                      badge = files.length < 5 ? 'badge-light-danger' : files.length >= 5 && files.length <= 10 ? 'badge-light-warning' : 'badge-light-primary';\n                    }\n                  } else {\n                    badge = 'badge-light-danger';\n                  }\n\n                  let background_status;\n                  let text_status;\n                  if (type === 'single') {\n                    switch (rec.status) {\n                      case 'under_review':\n                        background_status = 'background-csv';\n                        text_status = 'under review';\n                        break;\n                      case 'on_line':\n                        background_status = 'background-xls';\n                        text_status = 'online';\n                        break;\n                      case 'blocked':\n                        background_status = 'background-ods';\n                        text_status = 'blocked';\n                        break;\n                      case 'broken':\n                        background_status = 'background-pdf';\n                        text_status = 'broken';\n                        break;\n                    }\n                  }\n\n                  const link = `/${type}/${entity}/${rec.id}`;\n\n                  return (\n                    <tr key={`item_${rec.id}`}>\n                      <td className=\"ps-0\">\n                        <Link\n                          to={link}\n                          className=\"text-gray-800 fw-bolder text-hover-primary fs-6\"\n                        >\n                          {rec.name || rec.title}\n                        </Link>\n                      </td>\n                      {\n                        entity !== 'cat' &&\n                        <td>\n                          {\n                            type === 'single' &&\n                            <div className=\"text-muted mt-2 fw-bold fs-6 d-flex align-items-center mb-5\">\n                              <span className=\"badge-container\">\n                                <span className={`badge badge-circle ${background_status}`}></span>\n                              </span>\n                              {text_status}\n                            </div>\n                          }\n                          {\n                            type === 'collection' &&\n                            <a href={rec.website || rec.url} target=\"_blank\">\n                              <span className=\"text-gray-800 fw-bolder d-block fs-6\">\n                                {rec.website || rec.url}\n                              </span>\n                            </a>\n                          }\n                        </td>\n                      }\n                      <td>\n                        <span className={`text-${color} fw-bolder d-block fs-6`}>\n                          {moment(rec.updatedAt).format('DD/MM/YYYY')}\n                        </span>\n                      </td>\n                      <td>\n                        <span className={`badge ${badge}`}>{count}</span>\n                      </td>\n                      <td className=\"pe-0 text-end\">\n                        <a\n                          href=\"#\"\n                          className=\"btn btn-icon btn-bg-light  btn-color-muted btn-active-color-primary btn-sm\"\n                        >\n                          <KTSVG\n                            className=\"svg-icon-4\"\n                            path=\"/media/icons/duotone/General/Sad.svg\"\n                          />\n                        </a>\n                      </td>\n                    </tr>\n                  )\n                })\n              }\n\n            </tbody>\n          </table>\n        </div>\n        {/* end::Table*/}\n      </div>\n      {/* end::Body*/}\n    </div>\n  );\n};\n\nexport { TablesWidget7 };\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/stats/StatsWidget10.tsx",["1063","1064","1065","1066","1067","1068","1069"],"/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport ApexCharts, { ApexOptions } from \"apexcharts\";\nimport { KTSVG, toAbsoluteUrl } from \"../../../helpers\";\nimport { Dropdown2 } from \"../../content/dropdown/Dropdown2\";\nimport { getCSSVariableValue } from \"../../../assets/ts/_utils\";\nimport { Link } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { useLazyQuery } from \"@apollo/client\";\n\n// Axios\nimport axios from \"axios\";\n\ntype Props = {\n  id: string;\n  title: string;\n  items: any;\n  loadingArchive: boolean;\n  className: string;\n  innerPadding?: string;\n};\n\n// TODO: move to global\nconst colorPDF = '#F1416C';\nconst colorCSV = '#FFC700';\nconst colorXLS = '#20D489';\nconst colorODS = '#A2A7F7';\nconst colorOTHER = '#00A3FF';\n\nconst StatsWidget10: React.FC<Props> = ({ id, title, loadingArchive, items, className, innerPadding = \"\" }) => {\n  const [activeTab, setActiveTab] = useState(`#${id}tab1`);\n  const [activeTabTotal, setActiveTabTotal] = useState('Loading');\n  const [TabsTotal, setActiveTabsTotal] = useState(0);\n  const [elementTab, setElementTab] = useState(false);\n  const [activeChart, setActiveChart] = useState<ApexCharts | undefined>();\n\n  // before rendering, order by n aletheias\n  /*\n  if (items) {\n    items.sort((a, b) => (a.alexandrias.length > b.alexandrias.length ? -1 : 1));\n  }\n  */\n\n  const getFilesType = (item: string, id: string) => {\n    return new Promise((resolve, reject) => {\n\n      let query;\n      switch (item) {\n        case 'cat':\n          query = `\n            query TypeGroupBy {\n              alexandriasConnection(where: {\n                category: \"${id}\",\n              }) {\n                groupBy {\n                  type{\n                    key,\n                    connection{\n                      aggregate{\n                        count,\n                        totalCount\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          `;\n          break;\n        case 'dep':\n          query = `\n            query TypeGroupBy {\n              alexandriasConnection(where: {\n                department: \"${id}\",\n              }) {\n                groupBy {\n                  type{\n                    key,\n                    connection{\n                      aggregate{\n                        count,\n                        totalCount\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          `;\n          break;\n        case 'src':\n          query = `\n            query TypeGroupBy {\n              alexandriasConnection(where: {\n                source: \"${id}\",\n              }) {\n                groupBy {\n                  type{\n                    key,\n                    connection{\n                      aggregate{\n                        count,\n                        totalCount\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          `;\n          break;\n      }\n      const endpoint = `${process.env.REACT_APP_API_ENDPOINT}/graphql`;\n\n      fetch(endpoint, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          query: query\n        })\n      })\n        .then(response => response.json())\n        .then(data => {\n          // console.log(data)\n          resolve(data);\n        })\n        .catch(err => {\n          console.log(err)\n          reject(err);\n        });\n\n    });\n  }\n\n  const setTab = (tab_n: number) => {\n\n    if (activeChart) {\n      activeChart.destroy();\n    }\n\n    setActiveTab(`#${id}tab${tab_n}`);\n\n    const element = document.querySelector(\n      `#${id}tab${tab_n}_chart`\n    ) as HTMLElement;\n    setElementTab(true);\n\n    if (element) {\n      element.innerHTML = '';\n    }\n    // console.log('element: ', element);\n\n    if (!element) return;\n\n    console.log('getting: ', id, items[tab_n - 1]);\n\n    setActiveTabTotal('Loading');\n\n    let item = items[tab_n - 1].connection.values[0];\n\n    getFilesType(id, item.id)\n      .then((res: any) => {\n        const types = res.data.alexandriasConnection.groupBy.type;\n\n        const pdf = types.filter((type: any) => type.key === 'pdf');\n        const csv = types.filter((type: any) => type.key === 'csv');\n        const xls = types.filter((type: any) => type.key === 'xls');\n        const other = types.filter((type: any) => type.key === 'other');\n\n        const pdfFile = pdf.length > 0 ? pdf[0].connection.aggregate.count : 0;\n        const csvFile = csv.length > 0 ? csv[0].connection.aggregate.count : 0;\n        const xlsFile = xls.length > 0 ? xls[0].connection.aggregate.count : 0;\n        const otherFile = other.length > 0 ? other[0].connection.aggregate.count : 0;\n        // console.log(pdfFile, csvFile, xlsFile, otherFile);\n        setActiveTabTotal(\n          pdfFile + csvFile + xlsFile + otherFile\n        )\n\n        const dataCharts = {\n          pdfFile,\n          csvFile,\n          xlsFile,\n          otherFile\n        };\n\n        const height = parseInt(getCss(element, \"height\"));\n        if (height) {\n          const chart = new ApexCharts(element, getChartOptions(tab_n, height, dataCharts));\n          chart.render();\n          setActiveChart(chart);\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n      })\n\n  };\n\n\n  useEffect(() => {\n\n    setTab(1);\n\n    return function cleanUp() {\n      if (activeChart) {\n        activeChart.destroy();\n      }\n    };\n\n  }, [loadingArchive]);\n\n  if (loadingArchive) {\n    return (\n      <div className={`card ${className}`}>\n        {/* begin::Header */}\n        <div className=\"card-header align-items-center border-0 mt-5\">\n          <h3 className=\"card-title align-items-start flex-column\">\n            <span className=\"fw-bolder text-dark fs-3\">{title}</span>\n            <span className=\"text-muted mt-2 fw-bold fs-6\">Loading ...</span>\n          </h3>\n          <div className=\"card-toolbar\">\n            {/* begin::Dropdown */}\n            <Link\n              className=\"menu-link px-3\"\n              to={`/group/${id}`}\n            >\n              <span className=\"menu-icon\">\n                <KTSVG\n                  className=\"svg-icon-1\"\n                  path=\"/media/icons/duotone/General/Binocular.svg\"\n                />\n              </span>\n            </Link>\n            {/* end::Dropdown */}\n          </div>\n        </div>\n        {/* end::Header */}\n\n        {/* begin::Body */}\n        <div className=\"card-body pt-0\">\n          <div className=\"d-flex flex-wrap flex-xxl-nowrap justify-content-center justify-content-md-start pt-4\">\n            {/* begin::Nav */}\n            <div className=\"me-sm-10 me-0\">\n              <ul className=\"nav flex-column nav-pills nav-pills-custom\">\n                <li className=\"nav-item mb-3\" key={`tabs_1`}>\n                  <a\n                    onClick={() => ''}\n                    className={`nav-link w-225px h-70px ${activeTab === `#${id}tab1` ? \"active btn-active-light\" : \"\"\n                      } fw-bolder me-2`}\n                    id={`${id}tab1`}\n                  >\n                    <div className=\"nav-icon me-3\">\n                      <img\n                        alt=\"\"\n                        src={toAbsoluteUrl(\"/media/svg/logo/gray/aven.svg\")}\n                        className=\"default\"\n                      />\n\n                      <img\n                        alt=\"\"\n                        src={toAbsoluteUrl(\"/media/svg/logo/colored/aven.svg\")}\n                        className=\"active\"\n                      />\n                    </div>\n                    <div className=\"ps-1\">\n                      <span className=\"nav-text text-gray-600 fw-bolder fs-6\">\n                        Loading ...\n                      </span>\n                      <span className=\"text-muted fw-bold d-block pt-1\">\n                        Loading ...\n                      </span>\n                    </div>\n                  </a>\n                </li>\n              </ul>\n            </div>\n            {/* end::Nav */}\n\n            {/* begin::Tab Content */}\n            <div className=\"tab-content flex-grow-1\" // style={{ paddingLeft: \"0.23rem !important\" }}\n            >\n              {/* begin::Tab Pane */}\n              <div\n                className={`tab-pane fade ${activeTab === `#${id}tab1` ? \"show active\" : \"\"\n                  }`}\n                style={{\n\n                }}\n                id={`${id}tab1_content`}\n                key={`content_1`}\n              >\n                {/* begin::Content */}\n                <div className=\"d-flex justify-content-center mb-10\">\n                  {/* begin::Item */}\n                  <div className=\"px-10\">\n                    <span className=\"text-muted fw-bold fs-7\">Archivos</span>\n                    <span className=\"text-gray-800 fw-bolder fs-3 d-block\">\n                      Loading ...\n                    </span>\n                  </div>\n                  {/* end::Item */}\n                </div>\n                {/* end::Content  */}\n              </div>\n              {/* end::Tab Pane */}\n\n            </div>\n            {/* end::Tab Content */}\n          </div>\n        </div>\n        {/* end: Card Body */}\n      </div>\n    )\n  }\n\n  if (items) {\n    let itemsData = items.sourcesConnection.groupBy.id;\n    items = itemsData.slice(0, 5);\n  }\n\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className=\"card-header align-items-center border-0 mt-5\">\n        <h3 className=\"card-title align-items-start flex-column\">\n          <span className=\"fw-bolder text-dark fs-3\">{title}</span>\n          <span className=\"text-muted mt-2 fw-bold fs-6\">{TabsTotal} {title} registradas</span>\n        </h3>\n        <div className=\"card-toolbar\">\n          {/* begin::Dropdown */}\n          <Link\n            className=\"menu-link px-3\"\n            to={`/group/${id}`}\n          >\n            <span className=\"menu-icon\">\n              <KTSVG\n                className=\"svg-icon-1\"\n                path=\"/media/icons/duotone/General/Binocular.svg\"\n              />\n            </span>\n          </Link>\n\n          {/** \n           * \n           * <button\n            type=\"button\"\n            className=\"btn btn-sm btn-icon btn-color-primary btn-active-light-primary\"\n            data-kt-menu-trigger=\"click\"\n            data-kt-menu-placement=\"bottom-end\"\n            data-kt-menu-flip=\"top-end\"\n          >\n            <KTSVG\n              className=\"svg-icon-1\"\n              path=\"/media/icons/duotone/Layout/Layout-4-blocks-2.svg\"\n            />\n          </button>\n           * <Dropdown2 params={id} />  */}\n\n          {/* end::Dropdown */}\n        </div>\n      </div>\n      {/* end::Header */}\n\n      {/* begin::Body */}\n      <div className=\"card-body pt-0\">\n        <div className=\"d-flex flex-wrap flex-xxl-nowrap justify-content-center justify-content-md-start pt-4\">\n          {/* begin::Nav */}\n          <div className=\"me-sm-10 me-0\">\n            <ul className=\"nav flex-column nav-pills nav-pills-custom\">\n              {\n                items && items.map((item: any, i: number) => {\n                  // increase index by 1\n                  let current_item = item.connection.values[0];\n                  let img = current_item.icon ? current_item.icon.url : '/media/svg/logo/gray/aven.svg';\n                  i++;\n\n                  return (\n                    <li className=\"nav-item mb-3\" key={`tabs_${current_item.id}`}>\n                      <a\n                        onClick={() => setTab(i)}\n                        className={`nav-link w-225px h-70px ${activeTab === `#${id}tab${i}` ? \"active btn-active-light\" : \"\"\n                          } fw-bolder me-2`}\n                        id={`${id}tab${i}`}\n                      >\n                        <div className=\"nav-icon me-3\">\n                          <img\n                            alt=\"\"\n                            src={toAbsoluteUrl(img)}\n                            className=\"default\"\n                          />\n\n                          <img\n                            alt=\"\"\n                            src={toAbsoluteUrl(img)}\n                            className=\"active\"\n                          />\n                        </div>\n                        <div className=\"ps-1 text-truncate\">\n                          <span className=\"nav-text text-gray-600 fw-bolder fs-6\">\n                            {current_item.name}\n                          </span>\n                          <span className=\"text-muted fw-bold d-block pt-1\">\n                            {current_item.url}\n                          </span>\n                        </div>\n                      </a>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n          {/* end::Nav */}\n\n          {/* begin::Tab Content */}\n          <div className=\"tab-content flex-grow-1\" // style={{ paddingLeft: \"0.23rem !important\" }}\n          >\n            {/* begin::Tab Pane */}\n            {\n              items && items.map((item: any, i: number) => {\n                let current_item = item.connection.values[0];\n                let current_count = item.connection.aggregate.count;\n                let current_total = item.connection.aggregate.totalCount;\n\n                if (!TabsTotal) {\n                  setActiveTabsTotal(current_total);\n                }\n\n                let type = id;\n                let entity;\n                switch (type) {\n                  case 'src':\n                    entity = current_item.name;\n                    break;\n                  case 'dep':\n                    entity = current_item.name;\n                    break;\n                  case 'cat':\n                    entity = current_item.title;\n                    break;\n                  default:\n                    break;\n                }\n                // increase index by 1\n                i++;\n                const getChart = (index: number) => {\n                  return (\n                    <div id={`${id}tab${index}_chart`} style={{ height: \"250px\" }} />\n                  )\n                }\n                return (\n                  <div\n                    className={`tab-pane fade ${activeTab === `#${id}tab${i}` ? \"show active\" : \"\"\n                      }`}\n                    style={{\n\n                    }}\n                    id={`${id}tab${i}_content`}\n                    key={`content_${current_item.id}`}\n                  >\n                    {/* begin::Content */}\n                    <div className=\"d-flex justify-content-end mb-10\">\n                      {/* begin::Item */}\n                      <div className=\"px-10 text-end\">\n                        <span className=\"text-muted fw-bold fs-7\">Archivos</span>\n                        <span className=\"text-gray-800 fw-bolder fs-3 d-block\">\n                          {activeTabTotal}\n                        </span>\n                      </div>\n                      {/* end::Item */}\n\n                    </div>\n                    {/* end::Content  */}\n\n                    {\n                      getChart(i)\n                    }\n\n                    <Link\n                      className=\"nav-link btn btn-active-light btn-color-muted py-2 px-4 fw-bolder me-2 active\"\n                      to={`/collection/${id}/${current_item.id}`}\n                    >\n                      {`Ver ${entity}`}\n                    </Link>\n                  </div>\n                )\n              })\n            }\n            {/* end::Tab Pane */}\n\n          </div>\n          {/* end::Tab Content */}\n        </div>\n      </div>\n      {/* end: Card Body */}\n    </div>\n  );\n};\n\nexport { StatsWidget10 };\n\nfunction getChartOptions(\n  tabNumber: number,\n  height: string | number | undefined,\n  data: any\n): ApexOptions {\n\n  let series = [\n    {\n      name: \"PDF\",\n      data: [data.pdfFile],\n    },\n    {\n      name: \"CSV\",\n      data: [data.csvFile],\n    },\n    {\n      name: \"XLS\",\n      data: [data.xlsFile],\n    },\n    {\n      name: \"Others\",\n      data: [data.otherFile],\n    }\n  ]\n\n  return {\n    series: series,\n    chart: {\n      fontFamily: \"inherit\",\n      type: \"bar\",\n      height: height,\n      toolbar: {\n        show: true,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"25%\",\n        endingShape: \"rounded\",\n      },\n    },\n    legend: {\n      show: false,\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: [\"transparent\"],\n    },\n    xaxis: {\n      categories: [\"PDF\", \"CSV\", \"XLS\", \"Others\"],\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n      labels: {\n        show: false,\n        style: {\n          colors: getCSSVariableValue(\"--bs-gray-700\"),\n          fontSize: \"12px\",\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: getCSSVariableValue(\"--bs-gray-700\"),\n          fontSize: \"12px\",\n        },\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    states: {\n      normal: {\n        filter: {\n          type: \"none\",\n          value: 0,\n        },\n      },\n      hover: {\n        filter: {\n          type: \"none\",\n          value: 0,\n        },\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: \"none\",\n          value: 0,\n        },\n      },\n    },\n    tooltip: {\n      style: {\n        fontSize: \"12px\",\n      },\n      x: {\n        show: false\n      },\n      y: {\n        formatter: function (val: number) {\n          return `${val} archivos`;\n        },\n      }\n    },\n    colors: [\n      colorPDF,\n      colorCSV,\n      colorXLS,\n      colorOTHER\n    ],\n    grid: {\n      borderColor: getCSSVariableValue(\"--bs-gray-200\"),\n      strokeDashArray: 4,\n      yaxis: {\n        lines: {\n          show: true,\n        },\n      },\n    },\n  };\n}\n\nfunction getCss(el: HTMLElement, styleProp: string) {\n  const defaultView = (el.ownerDocument || document).defaultView;\n  if (!defaultView) {\n    return \"\";\n  }\n\n  // sanitize property name to css notation\n  // (hyphen separated words eg. font-Size)\n  styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n}\n","/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/pagination/Pagination1.tsx",["1070","1071","1072","1073","1074","1075","1076","1077"],"/Users/valarmorghulis/Desktop/Github/app.aletheiadata.org/src/_start/partials/widgets/tables/TablesWidget8.tsx",["1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101"],{"ruleId":"1102","replacedBy":"1103"},{"ruleId":"1104","replacedBy":"1105"},{"ruleId":"1102","replacedBy":"1103"},{"ruleId":"1104","replacedBy":"1105"},{"ruleId":"1106","severity":1,"message":"1107","line":5,"column":10,"nodeType":"1108","messageId":"1109","endLine":5,"endColumn":17},{"ruleId":"1106","severity":1,"message":"1110","line":2,"column":35,"nodeType":"1108","messageId":"1109","endLine":2,"endColumn":45},{"ruleId":"1106","severity":1,"message":"1110","line":2,"column":35,"nodeType":"1108","messageId":"1109","endLine":2,"endColumn":45},{"ruleId":"1106","severity":1,"message":"1111","line":1,"column":10,"nodeType":"1108","messageId":"1109","endLine":1,"endColumn":13},{"ruleId":"1112","severity":1,"message":"1113","line":27,"column":13,"nodeType":"1114","messageId":"1115","endLine":27,"endColumn":105,"fix":"1116"},{"ruleId":"1112","severity":1,"message":"1113","line":32,"column":13,"nodeType":"1114","messageId":"1115","endLine":32,"endColumn":107,"fix":"1117"},{"ruleId":"1112","severity":1,"message":"1113","line":37,"column":13,"nodeType":"1114","messageId":"1115","endLine":37,"endColumn":97,"fix":"1118"},{"ruleId":"1106","severity":1,"message":"1119","line":1,"column":10,"nodeType":"1108","messageId":"1109","endLine":1,"endColumn":17},{"ruleId":"1106","severity":1,"message":"1120","line":5,"column":10,"nodeType":"1108","messageId":"1109","endLine":5,"endColumn":19},{"ruleId":"1106","severity":1,"message":"1121","line":46,"column":11,"nodeType":"1108","messageId":"1109","endLine":46,"endColumn":21},{"ruleId":"1106","severity":1,"message":"1122","line":2,"column":17,"nodeType":"1108","messageId":"1109","endLine":2,"endColumn":26},{"ruleId":"1106","severity":1,"message":"1123","line":13,"column":10,"nodeType":"1108","messageId":"1109","endLine":13,"endColumn":21},{"ruleId":"1106","severity":1,"message":"1124","line":14,"column":13,"nodeType":"1108","messageId":"1109","endLine":14,"endColumn":22},{"ruleId":"1106","severity":1,"message":"1125","line":15,"column":10,"nodeType":"1108","messageId":"1109","endLine":15,"endColumn":27},{"ruleId":"1106","severity":1,"message":"1126","line":15,"column":29,"nodeType":"1108","messageId":"1109","endLine":15,"endColumn":39},{"ruleId":"1106","severity":1,"message":"1127","line":15,"column":41,"nodeType":"1108","messageId":"1109","endLine":15,"endColumn":51},{"ruleId":"1106","severity":1,"message":"1128","line":15,"column":53,"nodeType":"1108","messageId":"1109","endLine":15,"endColumn":68},{"ruleId":"1106","severity":1,"message":"1129","line":15,"column":70,"nodeType":"1108","messageId":"1109","endLine":15,"endColumn":83},{"ruleId":"1106","severity":1,"message":"1130","line":22,"column":10,"nodeType":"1108","messageId":"1109","endLine":22,"endColumn":21},{"ruleId":"1106","severity":1,"message":"1131","line":22,"column":23,"nodeType":"1108","messageId":"1109","endLine":22,"endColumn":36},{"ruleId":"1106","severity":1,"message":"1132","line":23,"column":10,"nodeType":"1108","messageId":"1109","endLine":23,"endColumn":17},{"ruleId":"1106","severity":1,"message":"1133","line":23,"column":19,"nodeType":"1108","messageId":"1109","endLine":23,"endColumn":29},{"ruleId":"1106","severity":1,"message":"1134","line":24,"column":19,"nodeType":"1108","messageId":"1109","endLine":24,"endColumn":29},{"ruleId":"1106","severity":1,"message":"1135","line":25,"column":24,"nodeType":"1108","messageId":"1109","endLine":25,"endColumn":39},{"ruleId":"1106","severity":1,"message":"1136","line":26,"column":26,"nodeType":"1108","messageId":"1109","endLine":26,"endColumn":43},{"ruleId":"1106","severity":1,"message":"1137","line":27,"column":10,"nodeType":"1108","messageId":"1109","endLine":27,"endColumn":17},{"ruleId":"1106","severity":1,"message":"1138","line":27,"column":19,"nodeType":"1108","messageId":"1109","endLine":27,"endColumn":29},{"ruleId":"1106","severity":1,"message":"1139","line":28,"column":24,"nodeType":"1108","messageId":"1109","endLine":28,"endColumn":39},{"ruleId":"1140","severity":1,"message":"1141","line":90,"column":45,"nodeType":"1108","messageId":"1142","endLine":90,"endColumn":50},{"ruleId":"1140","severity":1,"message":"1141","line":122,"column":45,"nodeType":"1108","messageId":"1142","endLine":122,"endColumn":50},{"ruleId":"1106","severity":1,"message":"1143","line":122,"column":45,"nodeType":"1108","messageId":"1109","endLine":122,"endColumn":50},{"ruleId":"1106","severity":1,"message":"1144","line":2,"column":35,"nodeType":"1108","messageId":"1109","endLine":2,"endColumn":39},{"ruleId":"1112","severity":1,"message":"1113","line":60,"column":15,"nodeType":"1114","messageId":"1115","endLine":60,"endColumn":107,"fix":"1145"},{"ruleId":"1112","severity":1,"message":"1113","line":65,"column":15,"nodeType":"1114","messageId":"1115","endLine":65,"endColumn":109,"fix":"1146"},{"ruleId":"1112","severity":1,"message":"1113","line":70,"column":15,"nodeType":"1114","messageId":"1115","endLine":70,"endColumn":99,"fix":"1147"},{"ruleId":"1106","severity":1,"message":"1148","line":5,"column":10,"nodeType":"1108","messageId":"1109","endLine":5,"endColumn":22},{"ruleId":"1106","severity":1,"message":"1149","line":5,"column":24,"nodeType":"1108","messageId":"1109","endLine":5,"endColumn":36},{"ruleId":"1106","severity":1,"message":"1143","line":36,"column":45,"nodeType":"1108","messageId":"1109","endLine":36,"endColumn":50},{"ruleId":"1150","severity":1,"message":"1151","line":92,"column":38,"nodeType":"1152","messageId":"1153","endLine":92,"endColumn":45},{"ruleId":"1150","severity":1,"message":"1151","line":123,"column":40,"nodeType":"1152","messageId":"1153","endLine":123,"endColumn":47},{"ruleId":"1150","severity":1,"message":"1151","line":157,"column":38,"nodeType":"1152","messageId":"1153","endLine":157,"endColumn":45},{"ruleId":"1106","severity":1,"message":"1154","line":14,"column":7,"nodeType":"1108","messageId":"1109","endLine":14,"endColumn":15},{"ruleId":"1106","severity":1,"message":"1155","line":15,"column":7,"nodeType":"1108","messageId":"1109","endLine":15,"endColumn":15},{"ruleId":"1106","severity":1,"message":"1156","line":16,"column":7,"nodeType":"1108","messageId":"1109","endLine":16,"endColumn":15},{"ruleId":"1106","severity":1,"message":"1157","line":17,"column":7,"nodeType":"1108","messageId":"1109","endLine":17,"endColumn":17},{"ruleId":"1106","severity":1,"message":"1158","line":28,"column":10,"nodeType":"1108","messageId":"1109","endLine":28,"endColumn":24},{"ruleId":"1106","severity":1,"message":"1159","line":29,"column":10,"nodeType":"1108","messageId":"1109","endLine":29,"endColumn":20},{"ruleId":"1106","severity":1,"message":"1143","line":67,"column":45,"nodeType":"1108","messageId":"1109","endLine":67,"endColumn":50},{"ruleId":"1106","severity":1,"message":"1160","line":357,"column":9,"nodeType":"1108","messageId":"1109","endLine":357,"endColumn":20},{"ruleId":"1106","severity":1,"message":"1161","line":4,"column":10,"nodeType":"1108","messageId":"1109","endLine":4,"endColumn":16},{"ruleId":"1106","severity":1,"message":"1162","line":8,"column":10,"nodeType":"1108","messageId":"1109","endLine":8,"endColumn":19},{"ruleId":"1106","severity":1,"message":"1163","line":8,"column":21,"nodeType":"1108","messageId":"1109","endLine":8,"endColumn":33},{"ruleId":"1106","severity":1,"message":"1164","line":1,"column":10,"nodeType":"1108","messageId":"1109","endLine":1,"endColumn":23},{"ruleId":"1106","severity":1,"message":"1165","line":4,"column":8,"nodeType":"1108","messageId":"1109","endLine":4,"endColumn":12},{"ruleId":"1106","severity":1,"message":"1166","line":39,"column":9,"nodeType":"1108","messageId":"1109","endLine":39,"endColumn":13},{"ruleId":"1106","severity":1,"message":"1167","line":41,"column":8,"nodeType":"1108","messageId":"1109","endLine":41,"endColumn":17},{"ruleId":"1106","severity":1,"message":"1168","line":44,"column":8,"nodeType":"1108","messageId":"1109","endLine":44,"endColumn":16},{"ruleId":"1106","severity":1,"message":"1169","line":45,"column":11,"nodeType":"1108","messageId":"1109","endLine":45,"endColumn":23},{"ruleId":"1106","severity":1,"message":"1170","line":45,"column":25,"nodeType":"1108","messageId":"1109","endLine":45,"endColumn":40},{"ruleId":"1106","severity":1,"message":"1171","line":45,"column":42,"nodeType":"1108","messageId":"1109","endLine":45,"endColumn":46},{"ruleId":"1106","severity":1,"message":"1172","line":6,"column":10,"nodeType":"1108","messageId":"1109","endLine":6,"endColumn":19},{"ruleId":"1106","severity":1,"message":"1173","line":9,"column":8,"nodeType":"1108","messageId":"1109","endLine":9,"endColumn":11},{"ruleId":"1106","severity":1,"message":"1174","line":10,"column":10,"nodeType":"1108","messageId":"1109","endLine":10,"endColumn":22},{"ruleId":"1106","severity":1,"message":"1175","line":13,"column":8,"nodeType":"1108","messageId":"1109","endLine":13,"endColumn":13},{"ruleId":"1106","severity":1,"message":"1156","line":28,"column":7,"nodeType":"1108","messageId":"1109","endLine":28,"endColumn":15},{"ruleId":"1106","severity":1,"message":"1159","line":35,"column":10,"nodeType":"1108","messageId":"1109","endLine":35,"endColumn":20},{"ruleId":"1106","severity":1,"message":"1176","line":426,"column":21,"nodeType":"1108","messageId":"1109","endLine":426,"endColumn":34},{"ruleId":"1106","severity":1,"message":"1177","line":2,"column":28,"nodeType":"1108","messageId":"1109","endLine":2,"endColumn":36},{"ruleId":"1106","severity":1,"message":"1178","line":5,"column":10,"nodeType":"1108","messageId":"1109","endLine":5,"endColumn":15},{"ruleId":"1106","severity":1,"message":"1179","line":6,"column":10,"nodeType":"1108","messageId":"1109","endLine":6,"endColumn":19},{"ruleId":"1106","severity":1,"message":"1180","line":9,"column":10,"nodeType":"1108","messageId":"1109","endLine":9,"endColumn":16},{"ruleId":"1106","severity":1,"message":"1143","line":48,"column":24,"nodeType":"1108","messageId":"1109","endLine":48,"endColumn":29},{"ruleId":"1150","severity":1,"message":"1151","line":316,"column":56,"nodeType":"1181","messageId":"1182","endLine":316,"endColumn":58},{"ruleId":"1106","severity":1,"message":"1183","line":98,"column":9,"nodeType":"1108","messageId":"1109","endLine":98,"endColumn":20},{"ruleId":"1112","severity":1,"message":"1113","line":182,"column":27,"nodeType":"1114","messageId":"1115","endLine":182,"endColumn":59,"fix":"1184"},{"ruleId":"1140","severity":1,"message":"1141","line":62,"column":49,"nodeType":"1108","messageId":"1142","endLine":62,"endColumn":54},{"ruleId":"1106","severity":1,"message":"1143","line":62,"column":49,"nodeType":"1108","messageId":"1109","endLine":62,"endColumn":54},{"ruleId":"1112","severity":1,"message":"1113","line":204,"column":82,"nodeType":"1114","messageId":"1115","endLine":204,"endColumn":125,"fix":"1185"},{"ruleId":"1106","severity":1,"message":"1122","line":2,"column":17,"nodeType":"1108","messageId":"1109","endLine":2,"endColumn":26},{"ruleId":"1106","severity":1,"message":"1143","line":36,"column":26,"nodeType":"1108","messageId":"1109","endLine":36,"endColumn":31},{"ruleId":"1140","severity":1,"message":"1141","line":71,"column":45,"nodeType":"1108","messageId":"1142","endLine":71,"endColumn":50},{"ruleId":"1106","severity":1,"message":"1143","line":71,"column":45,"nodeType":"1108","messageId":"1109","endLine":71,"endColumn":50},{"ruleId":"1150","severity":1,"message":"1151","line":203,"column":24,"nodeType":"1181","messageId":"1182","endLine":203,"endColumn":26},{"ruleId":"1150","severity":1,"message":"1151","line":298,"column":35,"nodeType":"1152","messageId":"1153","endLine":298,"endColumn":42},{"ruleId":"1106","severity":1,"message":"1111","line":30,"column":7,"nodeType":"1108","messageId":"1109","endLine":30,"endColumn":10},{"ruleId":"1106","severity":1,"message":"1186","line":47,"column":7,"nodeType":"1108","messageId":"1109","endLine":47,"endColumn":11},{"ruleId":"1112","severity":1,"message":"1113","line":166,"column":27,"nodeType":"1114","messageId":"1115","endLine":166,"endColumn":76,"fix":"1187"},{"ruleId":"1106","severity":1,"message":"1143","line":207,"column":24,"nodeType":"1108","messageId":"1109","endLine":207,"endColumn":29},{"ruleId":"1106","severity":1,"message":"1188","line":5,"column":3,"nodeType":"1108","messageId":"1109","endLine":5,"endColumn":16},{"ruleId":"1106","severity":1,"message":"1173","line":12,"column":8,"nodeType":"1108","messageId":"1109","endLine":12,"endColumn":11},{"ruleId":"1106","severity":1,"message":"1189","line":13,"column":10,"nodeType":"1108","messageId":"1109","endLine":13,"endColumn":18},{"ruleId":"1106","severity":1,"message":"1190","line":134,"column":11,"nodeType":"1108","messageId":"1109","endLine":134,"endColumn":15},{"ruleId":"1191","severity":1,"message":"1192","line":162,"column":6,"nodeType":"1193","endLine":162,"endColumn":8,"suggestions":"1194"},{"ruleId":"1106","severity":1,"message":"1195","line":11,"column":3,"nodeType":"1108","messageId":"1109","endLine":11,"endColumn":11},{"ruleId":"1106","severity":1,"message":"1143","line":186,"column":24,"nodeType":"1108","messageId":"1109","endLine":186,"endColumn":29},{"ruleId":"1106","severity":1,"message":"1188","line":5,"column":3,"nodeType":"1108","messageId":"1109","endLine":5,"endColumn":16},{"ruleId":"1106","severity":1,"message":"1190","line":136,"column":11,"nodeType":"1108","messageId":"1109","endLine":136,"endColumn":15},{"ruleId":"1191","severity":1,"message":"1196","line":162,"column":6,"nodeType":"1193","endLine":162,"endColumn":8,"suggestions":"1197"},{"ruleId":"1106","severity":1,"message":"1143","line":109,"column":24,"nodeType":"1108","messageId":"1109","endLine":109,"endColumn":29},{"ruleId":"1106","severity":1,"message":"1122","line":2,"column":17,"nodeType":"1108","messageId":"1109","endLine":2,"endColumn":26},{"ruleId":"1106","severity":1,"message":"1198","line":41,"column":5,"nodeType":"1108","messageId":"1109","endLine":41,"endColumn":10},{"ruleId":"1106","severity":1,"message":"1199","line":60,"column":13,"nodeType":"1108","messageId":"1109","endLine":60,"endColumn":23},{"ruleId":"1106","severity":1,"message":"1183","line":61,"column":13,"nodeType":"1108","messageId":"1109","endLine":61,"endColumn":24},{"ruleId":"1112","severity":1,"message":"1113","line":189,"column":53,"nodeType":"1114","messageId":"1115","endLine":189,"endColumn":92,"fix":"1200"},{"ruleId":"1106","severity":1,"message":"1186","line":36,"column":3,"nodeType":"1108","messageId":"1109","endLine":36,"endColumn":7},{"ruleId":"1106","severity":1,"message":"1201","line":115,"column":25,"nodeType":"1108","messageId":"1109","endLine":115,"endColumn":29},{"ruleId":"1106","severity":1,"message":"1198","line":46,"column":7,"nodeType":"1108","messageId":"1109","endLine":46,"endColumn":12},{"ruleId":"1106","severity":1,"message":"1202","line":100,"column":23,"nodeType":"1108","messageId":"1109","endLine":100,"endColumn":28},{"ruleId":"1106","severity":1,"message":"1203","line":101,"column":23,"nodeType":"1108","messageId":"1109","endLine":101,"endColumn":28},{"ruleId":"1106","severity":1,"message":"1204","line":25,"column":7,"nodeType":"1108","messageId":"1109","endLine":25,"endColumn":17},{"ruleId":"1106","severity":1,"message":"1205","line":26,"column":7,"nodeType":"1108","messageId":"1109","endLine":26,"endColumn":15},{"ruleId":"1106","severity":1,"message":"1111","line":33,"column":7,"nodeType":"1108","messageId":"1109","endLine":33,"endColumn":10},{"ruleId":"1106","severity":1,"message":"1198","line":51,"column":7,"nodeType":"1108","messageId":"1109","endLine":51,"endColumn":12},{"ruleId":"1106","severity":1,"message":"1186","line":52,"column":7,"nodeType":"1108","messageId":"1109","endLine":52,"endColumn":11},{"ruleId":"1112","severity":1,"message":"1113","line":175,"column":29,"nodeType":"1114","messageId":"1115","endLine":175,"endColumn":78,"fix":"1206"},{"ruleId":"1106","severity":1,"message":"1172","line":6,"column":10,"nodeType":"1108","messageId":"1109","endLine":6,"endColumn":19},{"ruleId":"1106","severity":1,"message":"1173","line":9,"column":8,"nodeType":"1108","messageId":"1109","endLine":9,"endColumn":11},{"ruleId":"1106","severity":1,"message":"1174","line":10,"column":10,"nodeType":"1108","messageId":"1109","endLine":10,"endColumn":22},{"ruleId":"1106","severity":1,"message":"1175","line":13,"column":8,"nodeType":"1108","messageId":"1109","endLine":13,"endColumn":13},{"ruleId":"1106","severity":1,"message":"1156","line":28,"column":7,"nodeType":"1108","messageId":"1109","endLine":28,"endColumn":15},{"ruleId":"1106","severity":1,"message":"1159","line":35,"column":10,"nodeType":"1108","messageId":"1109","endLine":35,"endColumn":20},{"ruleId":"1106","severity":1,"message":"1176","line":426,"column":21,"nodeType":"1108","messageId":"1109","endLine":426,"endColumn":34},{"ruleId":"1106","severity":1,"message":"1122","line":2,"column":17,"nodeType":"1108","messageId":"1109","endLine":2,"endColumn":26},{"ruleId":"1106","severity":1,"message":"1207","line":10,"column":7,"nodeType":"1108","messageId":"1109","endLine":10,"endColumn":15},{"ruleId":"1106","severity":1,"message":"1154","line":11,"column":7,"nodeType":"1108","messageId":"1109","endLine":11,"endColumn":15},{"ruleId":"1106","severity":1,"message":"1155","line":12,"column":7,"nodeType":"1108","messageId":"1109","endLine":12,"endColumn":15},{"ruleId":"1106","severity":1,"message":"1156","line":13,"column":7,"nodeType":"1108","messageId":"1109","endLine":13,"endColumn":15},{"ruleId":"1106","severity":1,"message":"1157","line":14,"column":7,"nodeType":"1108","messageId":"1109","endLine":14,"endColumn":17},{"ruleId":"1106","severity":1,"message":"1208","line":15,"column":7,"nodeType":"1108","messageId":"1109","endLine":15,"endColumn":21},{"ruleId":"1209","severity":1,"message":"1210","line":71,"column":28,"nodeType":"1211","messageId":"1212","endLine":71,"endColumn":65},{"ruleId":"1106","severity":1,"message":"1178","line":3,"column":10,"nodeType":"1108","messageId":"1109","endLine":3,"endColumn":15},{"ruleId":"1106","severity":1,"message":"1213","line":4,"column":8,"nodeType":"1108","messageId":"1109","endLine":4,"endColumn":14},{"ruleId":"1106","severity":1,"message":"1214","line":34,"column":8,"nodeType":"1108","messageId":"1109","endLine":34,"endColumn":12},{"ruleId":"1106","severity":1,"message":"1215","line":35,"column":8,"nodeType":"1108","messageId":"1109","endLine":35,"endColumn":11},{"ruleId":"1106","severity":1,"message":"1216","line":41,"column":9,"nodeType":"1108","messageId":"1109","endLine":41,"endColumn":15},{"ruleId":"1106","severity":1,"message":"1217","line":45,"column":7,"nodeType":"1108","messageId":"1109","endLine":45,"endColumn":19},{"ruleId":"1106","severity":1,"message":"1186","line":52,"column":3,"nodeType":"1108","messageId":"1109","endLine":52,"endColumn":7},{"ruleId":"1106","severity":1,"message":"1218","line":77,"column":15,"nodeType":"1108","messageId":"1109","endLine":77,"endColumn":21},{"ruleId":"1106","severity":1,"message":"1219","line":79,"column":11,"nodeType":"1108","messageId":"1109","endLine":79,"endColumn":25},{"ruleId":"1191","severity":1,"message":"1220","line":79,"column":28,"nodeType":"1108","endLine":79,"endColumn":36},{"ruleId":"1150","severity":1,"message":"1221","line":81,"column":35,"nodeType":"1181","messageId":"1222","endLine":81,"endColumn":37},{"ruleId":"1191","severity":1,"message":"1223","line":83,"column":24,"nodeType":"1224","endLine":90,"endColumn":13},{"ruleId":"1191","severity":1,"message":"1225","line":114,"column":6,"nodeType":"1193","endLine":114,"endColumn":22,"suggestions":"1226"},{"ruleId":"1106","severity":1,"message":"1227","line":123,"column":8,"nodeType":"1108","messageId":"1109","endLine":123,"endColumn":17},{"ruleId":"1106","severity":1,"message":"1228","line":124,"column":8,"nodeType":"1108","messageId":"1109","endLine":124,"endColumn":16},{"ruleId":"1106","severity":1,"message":"1229","line":127,"column":8,"nodeType":"1108","messageId":"1109","endLine":127,"endColumn":18},{"ruleId":"1112","severity":1,"message":"1113","line":229,"column":179,"nodeType":"1114","messageId":"1115","endLine":229,"endColumn":212,"fix":"1230"},{"ruleId":"1106","severity":1,"message":"1231","line":251,"column":9,"nodeType":"1108","messageId":"1109","endLine":251,"endColumn":13},{"ruleId":"1106","severity":1,"message":"1232","line":297,"column":9,"nodeType":"1108","messageId":"1109","endLine":297,"endColumn":18},{"ruleId":"1106","severity":1,"message":"1233","line":317,"column":5,"nodeType":"1108","messageId":"1109","endLine":317,"endColumn":12},{"ruleId":"1106","severity":1,"message":"1234","line":335,"column":9,"nodeType":"1108","messageId":"1109","endLine":335,"endColumn":24},{"ruleId":"1106","severity":1,"message":"1235","line":337,"column":9,"nodeType":"1108","messageId":"1109","endLine":337,"endColumn":15},{"ruleId":"1150","severity":1,"message":"1151","line":470,"column":27,"nodeType":"1152","messageId":"1153","endLine":470,"endColumn":34},{"ruleId":"1150","severity":1,"message":"1151","line":487,"column":40,"nodeType":"1152","messageId":"1153","endLine":487,"endColumn":47},"no-native-reassign",["1236"],"no-negated-in-lhs",["1237"],"@typescript-eslint/no-unused-vars","'Sidebar' is defined but never used.","Identifier","unusedVar","'HashRouter' is defined but never used.","'url' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"1238","text":"1239"},{"range":"1240","text":"1239"},{"range":"1241","text":"1239"},"'rejects' is defined but never used.","'UserModel' is defined but never used.","'netId' is assigned a value but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'dashboard' is defined but never used.","'getAllDepartments' is defined but never used.","'getArchive' is defined but never used.","'getImports' is defined but never used.","'getImportsCount' is defined but never used.","'getAllSources' is defined but never used.","'departments' is assigned a value but never used.","'setDepartment' is assigned a value but never used.","'sources' is assigned a value but never used.","'setSources' is assigned a value but never used.","'setImports' is assigned a value but never used.","'setImportsCount' is assigned a value but never used.","'setLoadingArchive' is assigned a value but never used.","'archive' is assigned a value but never used.","'setArchive' is assigned a value but never used.","'setArchiveCount' is assigned a value but never used.","@typescript-eslint/no-redeclare","'error' is already defined.","redeclared","'error' is assigned a value but never used.","'Link' is defined but never used.",{"range":"1242","text":"1239"},{"range":"1243","text":"1239"},{"range":"1244","text":"1239"},"'ListsWidget4' is defined but never used.","'ListsWidget5' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'colorCSV' is assigned a value but never used.","'colorXLS' is assigned a value but never used.","'colorODS' is assigned a value but never used.","'colorOTHER' is assigned a value but never used.","'activeTabTotal' is assigned a value but never used.","'elementTab' is assigned a value but never used.","'checkStatus' is assigned a value but never used.","'Toggle' is defined but never used.","'searchVal' is assigned a value but never used.","'setSearchVal' is assigned a value but never used.","'toAbsoluteUrl' is defined but never used.","'clsx' is defined but never used.","'web3' is assigned a value but never used.","'connected' is assigned a value but never used.","'provider' is assigned a value but never used.","'authenticate' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'user' is assigned a value but never used.","'Dropdown2' is defined but never used.","'gql' is defined but never used.","'useLazyQuery' is defined but never used.","'axios' is defined but never used.","'current_count' is assigned a value but never used.","'useState' is defined but never used.","'KTSVG' is defined but never used.","'Dropdown1' is defined but never used.","'format' is defined but never used.","ArrowFunctionExpression","expectedInside","'entityCount' is assigned a value but never used.",{"range":"1245","text":"1239"},{"range":"1246","text":"1239"},"'desc' is assigned a value but never used.",{"range":"1247","text":"1239"},"'TablesWidget1' is defined but never used.","'useQuery' is defined but never used.","'type' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pageData.data'. Either include it or remove the dependency array.","ArrayExpression",["1248"],"'PageLink' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["1249"],"'title' is assigned a value but never used.","'countTotal' is assigned a value but never used.",{"range":"1250","text":"1239"},"'link' is assigned a value but never used.","'count' is assigned a value but never used.","'badge' is defined but never used.","'countTotal' is defined but never used.","'countSrc' is defined but never used.",{"range":"1251","text":"1239"},"'colorPDF' is assigned a value but never used.","'colorUNDEFINED' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'moment' is defined but never used.","'data' is assigned a value but never used.","'cid' is assigned a value but never used.","'entity' is assigned a value but never used.","'records' is defined but never used.","'errors' is assigned a value but never used.","'response_index' is assigned a value but never used.","Assignments to the 'response_index' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","Assignments to the 'miniSearch' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","React Hook useEffect has missing dependencies: 'currentPage', 'nextPage', and 'prevPage'. Either include them or remove the dependency array.",["1252"],"'pageCount' is assigned a value but never used.","'noResult' is assigned a value but never used.","'openSearch' is assigned a value but never used.",{"range":"1253","text":"1239"},"'Card' is assigned a value but never used.","'EmptyCard' is assigned a value but never used.","'loading' is assigned a value but never used.","'handlePageClick' is assigned a value but never used.","'offset' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1035,1035]," rel=\"noreferrer\"",[1233,1233],[1421,1421],[2555,2555],[2791,2791],[3017,3017],[7525,7525],[6077,6077],[7009,7009],{"desc":"1254","fix":"1255"},{"desc":"1256","fix":"1257"},[9529,9529],[7058,7058],{"desc":"1258","fix":"1259"},[5937,5937],"Update the dependencies array to be: [pageData.data]",{"range":"1260","text":"1261"},"Update the dependencies array to be: [data]",{"range":"1262","text":"1263"},"Update the dependencies array to be: [currentPage, nextPage, paginationPage, prevPage]",{"range":"1264","text":"1265"},[3769,3771],"[pageData.data]",[3630,3632],"[data]",[2867,2883],"[currentPage, nextPage, paginationPage, prevPage]"]